cscope 15 $HOME/code/git/my/lwan -q 0000002057 0000278326
	@common/base64.c

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

12 
	~"ba£64.h
"

14 c⁄° 
	gba£64_èbÀ
[65] =

24 c⁄° 
	gba£64_decode_èbÀ
[256] = {

61 * 
	$ba£64_ícode
(c⁄° *
§c
, 
size_t
 
Àn
,

62 
size_t
 *
out_Àn
)

64 *
out
, *
pos
;

65 c⁄° *
íd
, *
ö
;

66 
size_t
 
ﬁí
;

67 
löe_Àn
;

69 
ﬁí
 = 
Àn
 * 4 / 3 + 4;

70 
ﬁí
 += olen / 72;

71 
ﬁí
++;

72 i‡(
ﬁí
 < 
Àn
)

73  
NULL
;

74 
out
 = 
	`mÆloc
(
ﬁí
);

75 i‡(
out
 =
NULL
)

76  
NULL
;

78 
íd
 = 
§c
 + 
Àn
;

79 
ö
 = 
§c
;

80 
pos
 = 
out
;

81 
löe_Àn
 = 0;

82 
íd
 - 
ö
 >= 3) {

83 *
pos
++ = 
ba£64_èbÀ
[
ö
[0] >> 2];

84 *
pos
++ = 
ba£64_èbÀ
[((
ö
[0] & 0x03) << 4) | (in[1] >> 4)];

85 *
pos
++ = 
ba£64_èbÀ
[((
ö
[1] & 0x0f) << 2) | (in[2] >> 6)];

86 *
pos
++ = 
ba£64_èbÀ
[
ö
[2] & 0x3f];

87 
ö
 += 3;

88 
löe_Àn
 += 4;

89 i‡(
löe_Àn
 >= 72) {

90 *
pos
++ = '\n';

91 
löe_Àn
 = 0;

95 i‡(
íd
 - 
ö
) {

96 *
pos
++ = 
ba£64_èbÀ
[
ö
[0] >> 2];

97 i‡(
íd
 - 
ö
 == 1) {

98 *
pos
++ = 
ba£64_èbÀ
[(
ö
[0] & 0x03) << 4];

99 *
pos
++ = '=';

101 *
pos
++ = 
ba£64_èbÀ
[((
ö
[0] & 0x03) << 4) |

102 (
ö
[1] >> 4)];

103 *
pos
++ = 
ba£64_èbÀ
[(
ö
[1] & 0x0f) << 2];

105 *
pos
++ = '=';

106 
löe_Àn
 += 4;

109 i‡(
löe_Àn
)

110 *
pos
++ = '\n';

112 *
pos
 = '\0';

113 i‡(
out_Àn
)

114 *
out_Àn
 = (
size_t
)(
pos
 - 
out
);

115  
out
;

116 
	}
}

128 * 
	$ba£64_decode
(c⁄° *
§c
, 
size_t
 
Àn
,

129 
size_t
 *
out_Àn
)

131 *
out
, *
pos
, 
block
[4];

132 
size_t
 
i
, 
cou¡
, 
ﬁí
;

133 
∑d
 = 0;

135 
cou¡
 = 0;

136 
i
 = 0; i < 
Àn
; i++) {

137 i‡(
ba£64_decode_èbÀ
[
§c
[
i
]] != 0x80)

138 
cou¡
++;

141 i‡(
cou¡
 == 0 || count % 4)

142  
NULL
;

144 
ﬁí
 = (
cou¡
 / 4 * 3) + 1;

145 
pos
 = 
out
 = 
	`mÆloc
(
ﬁí
);

146 i‡(
out
 =
NULL
)

147  
NULL
;

149 
cou¡
 = 0;

150 
i
 = 0; i < 
Àn
; i++) {

151 
tmp
 = 
ba£64_decode_èbÀ
[
§c
[
i
]];

152 i‡(
tmp
 == 0x80)

155 i‡(
§c
[
i
] == '=')

156 
∑d
++;

157 
block
[
cou¡
] = 
tmp
;

158 
cou¡
++;

159 i‡(
cou¡
 == 4) {

160 *
pos
++ = ()((
block
[0] << 2) | (block[1] >> 4));

161 *
pos
++ = ()((
block
[1] << 4) | (block[2] >> 2));

162 *
pos
++ = ()((
block
[2] << 6) | block[3]);

163 
cou¡
 = 0;

164 i‡(
∑d
) {

165 i‡(
∑d
 == 1)

166 
pos
--;

167 i‡(
∑d
 == 2)

168 
pos
 -= 2;

171 
	`‰ì
(
out
);

172  
NULL
;

178 *
pos
 = '\0';

180 *
out_Àn
 = (
size_t
)(
pos
 - 
out
);

181  
out
;

182 
	}
}

	@common/base64.h

1 #i‚de‡
AUTH_BASE64_H


2 
	#AUTH_BASE64_H


	)

4 
	~<°ddef.h
>

6 *
ba£64_ícode
(c⁄° *
§c
, 
size_t
 
Àn
,

7 
size_t
 *
out_Àn
);

8 *
ba£64_decode
(c⁄° *
§c
, 
size_t
 
Àn
,

9 
size_t
 *
out_Àn
);

	@common/hash.c

21 
	~"hash.h
"

22 
	~"murmur3.h
"

24 
	~<°döt.h
>

25 
	~<°dboﬁ.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~<î∫o.h
>

30 c⁄° 
	gn_buckës
 = 512;

31 c⁄° 
	g°ïs
 = 64;

33 
	shash_íåy
 {

34 c⁄° *
	mkey
;

35 c⁄° *
	mvÆue
;

36 
	mhashvÆ
;

39 
	shash_buckë
 {

40 
hash_íåy
 *
	míåõs
;

41 
	mu£d
;

42 
	mtŸÆ
;

45 
	shash
 {

46 
	mcou¡
;

47 (*
	mhash_vÆue
)(c⁄° *
	mkey
);

48 (*
	mkey_com∑ª
)(c⁄° *
	mk1
, c⁄° *
	mk2
);

49 (*
	m‰ì_vÆue
)(*
	mvÆue
);

50 (*
	m‰ì_key
)(*
	mvÆue
);

51 
hash_buckë
 
	mbuckës
[];

54 
ölöe
 
	$hash_öt
(c⁄° *
key±r
)

57 
key
 = ()()
key±r
;

58 
c2
 = 0x27d4eb2d;

60 
key
 = (key ^ 61) ^ (key >> 16);

61 
key
 += key << 3;

62 
key
 ^= key >> 4;

63 
key
 *
c2
;

64 
key
 ^= key >> 15;

65  
key
;

66 
	}
}

68 #i‡
deföed
(
HAVE_BUILTIN_CPU_INIT
Ë&& deföed(
USE_HARDWARE_CRC32
)

69 
ölöe
 
	$hash_¸c32
(c⁄° *
key±r
)

71 
hash
 = 0xABAD1DEA;

72 c⁄° *
key
 = 
key±r
;

73 
size_t
 
Àn
 = 
	`°æí
(
key
);

75 #i‡
__x86_64__


76 
Àn
 >(
uöt64_t
)) {

77 
hash
 = ()
	`__buûtö_ü32_¸c32di
(hash, *((
uöt64_t
 *)
key
));

78 
key
 +(
uöt64_t
);

79 
Àn
 -(
uöt64_t
);

82 
Àn
 >(
uöt32_t
)) {

83 
hash
 = 
	`__buûtö_ü32_¸c32si
(hash, *((
uöt32_t
 *)
key
));

84 
key
 +(
uöt32_t
);

85 
Àn
 -(
uöt32_t
);

87 i‡(
Àn
 >(
uöt16_t
)) {

88 
hash
 = 
	`__buûtö_ü32_¸c32hi
(hash, *((
uöt16_t
 *)
key
));

89 
key
 +(
uöt16_t
);

90 
Àn
 -(
uöt16_t
);

92 i‡(
Àn
)

93 
hash
 = 
	`__buûtö_ü32_¸c32qi
(hash, ()*
key
);

95  
hash
;

96 
	}
}

99 
ölöe
 
	$hash_öt_key_cmp
(c⁄° *
k1
, c⁄° *
k2
)

101 
a
 = ()()
k1
;

102 
b
 = ()()
k2
;

103  
a
 - 
b
;

104 
	}
}

106 
hash
 *
hash_öã∫Æ_√w
(

107 (*
hash_vÆue
)(c⁄° *
key
),

108 (*
key_com∑ª
)(c⁄° *
k1
, c⁄° *
k2
),

109 (*
‰ì_key
)(*
vÆue
),

110 (*
‰ì_vÆue
)(*
vÆue
))

112 
hash
 *hash = 
	`ˇŒoc
(1, (hash) +

113 
n_buckës
 * (
hash_buckë
));

114 i‡(
hash
 =
NULL
)

115  
NULL
;

116 
hash
->
hash_vÆue
 = hash_value;

117 
hash
->
key_com∑ª
 = key_compare;

118 
hash
->
‰ì_vÆue
 = free_value;

119 
hash
->
‰ì_key
 = free_key;

120  
hash
;

121 
	}
}

123 
hash
 *
hash_öt_√w
((*
‰ì_key
)(*
vÆue
),

124 (*
‰ì_vÆue
)(*
vÆue
))

126  
	`hash_öã∫Æ_√w
(
hash_öt
,

127 
hash_öt_key_cmp
,

128 
‰ì_key
,

129 
‰ì_vÆue
);

130 
	}
}

132 
hash
 *
hash_°r_√w
((*
‰ì_key
)(*
vÆue
),

133 (*
‰ì_vÆue
)(*
vÆue
))

135 (*
hash_func
)(c⁄° *
key
);

137 #i‡
	`deföed
(
HAVE_BUILTIN_CPU_INIT
Ë&& deföed(
USE_HARDWARE_CRC32
)

138 
	`__buûtö_˝u_öô
();

139 i‡(
	`__buûtö_˝u_suµ‹ts
("sse4.2")) {

140 
hash_func
 = 
hash_¸c32
;

142 
hash_func
 = 
murmur3_sim∂e
;

145 
hash_func
 = 
murmur3_sim∂e
;

148  
	`hash_öã∫Æ_√w
(

149 
hash_func
,

150 ((*)(c⁄° *, c⁄° *))
°rcmp
,

151 
‰ì_key
,

152 
‰ì_vÆue
);

153 
	}
}

155 
	$hash_‰ì
(
hash
 *hash)

157 
hash_buckë
 *
buckë
, *
buckë_íd
;

159 i‡(
hash
 =
NULL
)

162 
buckë
 = 
hash
->
buckës
;

163 
buckë_íd
 = 
buckë
 + 
n_buckës
;

164 ; 
buckë
 < 
buckë_íd
; bucket++) {

165 i‡(
hash
->
‰ì_vÆue
) {

166 
hash_íåy
 *
íåy
, *
íåy_íd
;

167 
íåy
 = 
buckë
->
íåõs
;

168 
íåy_íd
 = 
íåy
 + 
buckë
->
u£d
;

169 ; 
íåy
 < 
íåy_íd
;Éntry++) {

170 
hash
->
	`‰ì_vÆue
((*)
íåy
->
vÆue
);

171 i‡(
hash
->
‰ì_key
)

172 
hash
->
	`‰ì_key
((*)
íåy
->
key
);

175 
	`‰ì
(
buckë
->
íåõs
);

177 
	`‰ì
(
hash
);

178 
	}
}

186 
	$hash_add
(
hash
 *hash, c⁄° *
key
, c⁄° *
vÆue
)

188 
hashvÆ
 = 
hash
->
	`hash_vÆue
(
key
);

189 
pos
 = 
hashvÆ
 & (
n_buckës
 - 1);

190 
hash_buckë
 *
buckë
 = 
hash
->
buckës
 + 
pos
;

191 
hash_íåy
 *
íåy
, *
íåy_íd
;

193 i‡(
buckë
->
u£d
 + 1 >buckë->
tŸÆ
) {

194 
√w_tŸÆ
 = 
buckë
->
tŸÆ
 + 
°ïs
;

195 
size_t
 
size
 = 
√w_tŸÆ
 * (
hash_íåy
);

196 
hash_íåy
 *
tmp
 = 
	`ªÆloc
(
buckë
->
íåõs
, 
size
);

197 i‡(
tmp
 =
NULL
)

198  -
î∫o
;

199 
buckë
->
íåõs
 = 
tmp
;

200 
buckë
->
tŸÆ
 = 
√w_tŸÆ
;

203 
íåy
 = 
buckë
->
íåõs
;

204 
íåy_íd
 = 
íåy
 + 
buckë
->
u£d
;

205 ; 
íåy
 < 
íåy_íd
;Éntry++) {

206 i‡(
hashvÆ
 !
íåy
->hashval)

208 i‡(
hash
->
	`key_com∑ª
(
key
, 
íåy
->key) != 0)

210 i‡(
hash
->
‰ì_vÆue
)

211 
hash
->
	`‰ì_vÆue
((*)
íåy
->
vÆue
);

212 i‡(
hash
->
‰ì_key
)

213 
hash
->
	`‰ì_key
((*)
íåy
->
key
);

215 
íåy
->
key
 = key;

216 
íåy
->
vÆue
 = value;

220 
íåy
->
key
 = key;

221 
íåy
->
vÆue
 = value;

222 
íåy
->
hashvÆ
 = hashval;

223 
buckë
->
u£d
++;

224 
hash
->
cou¡
++;

226 
	}
}

229 
	$hash_add_unique
(
hash
 *hash, c⁄° *
key
, c⁄° *
vÆue
)

231 
hashvÆ
 = 
hash
->
	`hash_vÆue
(
key
);

232 
pos
 = 
hashvÆ
 & (
n_buckës
 - 1);

233 
hash_buckë
 *
buckë
 = 
hash
->
buckës
 + 
pos
;

234 
hash_íåy
 *
íåy
, *
íåy_íd
;

236 i‡(
buckë
->
u£d
 + 1 >buckë->
tŸÆ
) {

237 
√w_tŸÆ
 = 
buckë
->
tŸÆ
 + 
°ïs
;

238 
size_t
 
size
 = 
√w_tŸÆ
 * (
hash_íåy
);

239 
hash_íåy
 *
tmp
 = 
	`ªÆloc
(
buckë
->
íåõs
, 
size
);

240 i‡(
tmp
 =
NULL
)

241  -
î∫o
;

242 
buckë
->
íåõs
 = 
tmp
;

243 
buckë
->
tŸÆ
 = 
√w_tŸÆ
;

246 
íåy
 = 
buckë
->
íåõs
;

247 
íåy_íd
 = 
íåy
 + 
buckë
->
u£d
;

248 ; 
íåy
 < 
íåy_íd
;Éntry++) {

249 i‡(
hashvÆ
 !
íåy
->hashval)

251 i‡(
hash
->
	`key_com∑ª
(
key
, 
íåy
->key) == 0)

252  -
EEXIST
;

255 
íåy
->
key
 = key;

256 
íåy
->
vÆue
 = value;

257 
íåy
->
hashvÆ
 = hashval;

258 
buckë
->
u£d
++;

259 
hash
->
cou¡
++;

261 
	}
}

263 
ölöe
 
hash_íåy
 *
	$hash_föd_íåy
(c⁄° 
hash
 *hash,

264 c⁄° *
key
,

265 
hashvÆ
)

267 
pos
 = 
hashvÆ
 & (
n_buckës
 - 1);

268 c⁄° 
hash_buckë
 *
buckë
 = 
hash
->
buckës
 + 
pos
;

269 
hash_íåy
 *
íåy
, *
íåy_íd
;

271 
íåy
 = 
buckë
->
íåõs
;

272 
íåy_íd
 = 
íåy
 + 
buckë
->
u£d
;

273 ; 
íåy
 < 
íåy_íd
;Éntry++) {

274 i‡(
hashvÆ
 !
íåy
->hashval)

276 i‡(
hash
->
	`key_com∑ª
(
key
, 
íåy
->key) == 0)

277  
íåy
;

280  
NULL
;

281 
	}
}

283 *
	$hash_föd
(c⁄° 
hash
 *hash, c⁄° *
key
)

285 c⁄° 
hash_íåy
 *
íåy
;

287 
íåy
 = 
	`hash_föd_íåy
(
hash
, 
key
, hash->
	`hash_vÆue
(key));

288 i‡(
íåy
)

289  (*)
íåy
->
vÆue
;

290  
NULL
;

291 
	}
}

293 
	$hash_dñ
(
hash
 *hash, c⁄° *
key
)

295 
hashvÆ
 = 
hash
->
	`hash_vÆue
(
key
);

296 
pos
 = 
hashvÆ
 & (
n_buckës
 - 1);

297 
°ïs_u£d
, 
°ïs_tŸÆ
;

298 
hash_buckë
 *
buckë
 = 
hash
->
buckës
 + 
pos
;

299 
hash_íåy
 *
íåy
, *
íåy_íd
;

301 
íåy
 = 
	`hash_föd_íåy
(
hash
, 
key
, 
hashvÆ
);

302 i‡(
íåy
 =
NULL
)

303  -
ENOENT
;

305 i‡(
hash
->
‰ì_vÆue
)

306 
hash
->
	`‰ì_vÆue
((*)
íåy
->
vÆue
);

307 i‡(
hash
->
‰ì_key
)

308 
hash
->
	`‰ì_key
((*)
íåy
->
key
);

310 
íåy_íd
 = 
buckë
->
íåõs
 + buckë->
u£d
;

311 
	`memmove
(
íåy
,Éntry + 1,

312 (
size_t
)(
íåy_íd
 - 
íåy
Ë* (
hash_íåy
));

314 
buckë
->
u£d
--;

315 
hash
->
cou¡
--;

317 
°ïs_u£d
 = 
buckë
->
u£d
 / 
°ïs
;

318 
°ïs_tŸÆ
 = 
buckë
->
tŸÆ
 / 
°ïs
;

319 i‡(
°ïs_u£d
 + 1 < 
°ïs_tŸÆ
) {

320 
size_t
 
size
 = (
°ïs_u£d
 + 1) *

321 
°ïs
 * (
hash_íåy
);

322 
hash_íåy
 *
tmp
 = 
	`ªÆloc
(
buckë
->
íåõs
, 
size
);

323 i‡(
tmp
) {

324 
buckë
->
íåõs
 = 
tmp
;

325 
buckë
->
tŸÆ
 = (
°ïs_u£d
 + 1Ë* 
°ïs
;

330 
	}
}

332 
	$hash_gë_cou¡
(c⁄° 
hash
 *hash)

334  
hash
->
cou¡
;

335 
	}
}

337 
	$hash_ôî_öô
(c⁄° 
hash
 *hash, 
hash_ôî
 *
ôî
)

339 
ôî
->
hash
 = hash;

340 
ôî
->
buckë
 = 0;

341 
ôî
->
íåy
 = -1;

342 
	}
}

344 
boﬁ
 
	$hash_ôî_√xt
(
hash_ôî
 *
ôî
, c⁄° **
key
,

345 c⁄° **
vÆue
)

347 c⁄° 
hash_buckë
 *
b
 = 
ôî
->
hash
->
buckës
 + iãr->
buckë
;

348 c⁄° 
hash_íåy
 *
e
;

350 
ôî
->
íåy
++;

352 i‡(()
ôî
->
íåy
 >
b
->
u£d
) {

353 
ôî
->
íåy
 = 0;

355 
ôî
->
buckë
++; iãr->buckë < 
n_buckës
;

356 
ôî
->
buckë
++) {

357 
b
 = 
ôî
->
hash
->
buckës
 + iãr->
buckë
;

359 i‡(
b
->
u£d
 > 0)

363 i‡(
ôî
->
buckë
 >
n_buckës
)

364  
Ál£
;

367 
e
 = 
b
->
íåõs
 + 
ôî
->
íåy
;

369 i‡(
vÆue
 !
NULL
)

370 *
vÆue
 = 
e
->value;

371 i‡(
key
 !
NULL
)

372 *
key
 = 
e
->key;

374  
åue
;

375 
	}
}

	@common/hash.h

1 #¥agm®
⁄˚


3 
	~<°dboﬁ.h
>

4 
	~<sys/ty≥s.h
>

6 
	ghash
;

8 
	shash_ôî
 {

9 c⁄° 
hash
 *
	mhash
;

10 
	mbuckë
;

11 
	míåy
;

14 
hash
 *
hash_öt_√w
((*
‰ì_key
)(*
vÆue
),

15 (*
‰ì_vÆue
)(*
vÆue
));

16 
hash
 *
	`hash_°r_√w
((*
‰ì_key
)(*
vÆue
),

17 (*
‰ì_vÆue
)(*
vÆue
));

18 
	`hash_‰ì
(
hash
 *hash);

19 
	`hash_add
(
hash
 *hash, c⁄° *
key
, c⁄° *
vÆue
);

20 
	`hash_add_unique
(
hash
 *hash, c⁄° *
key
, c⁄° *
vÆue
);

21 
	`hash_dñ
(
hash
 *hash, c⁄° *
key
);

22 *
	`hash_föd
(c⁄° 
hash
 *hash, c⁄° *
key
);

23 
	`hash_gë_cou¡
(c⁄° 
hash
 *hash);

24 
	`hash_ôî_öô
(c⁄° 
hash
 *hash, 
hash_ôî
 *
ôî
);

25 
boﬁ
 
	`hash_ôî_√xt
(
hash_ôî
 *
ôî
, c⁄° **
key
,

26 c⁄° **
vÆue
);

	@common/int-to-str.c

20 
	~<as£π.h
>

21 
	~"öt-to-°r.h
"

23 
ALWAYS_INLINE
 *

24 
	$uöt_to_°rög
(
size_t
 
vÆue
,

25 
d°
[
INT_TO_STR_BUFFER_SIZE
],

26 
size_t
 *
Àngth_out
)

32 c⁄° 
size_t
 
Àngth
 = 
INT_TO_STR_BUFFER_SIZE
;

33 
size_t
 
√xt
 = 
Àngth
 - 1;

34 c⁄° 
digôs
[201] =

40 
d°
[
√xt
--] = '\0';

41 
vÆue
 >= 100) {

42 c⁄° 
uöt32_t
 
i
 = (uöt32_t)((
vÆue
 % 100) * 2);

43 
vÆue
 /= 100;

44 
d°
[
√xt
] = 
digôs
[
i
 + 1];

45 
d°
[
√xt
 - 1] = 
digôs
[
i
];

46 
√xt
 -= 2;

49 i‡(
vÆue
 < 10) {

50 
d°
[
√xt
] = ()('0' + (
uöt32_t
)
vÆue
);

51 *
Àngth_out
 = 
Àngth
 - 
√xt
 - 1;

52  
d°
 + 
√xt
;

54 
uöt32_t
 
i
 = (uöt32_t)
vÆue
 * 2;

55 
d°
[
√xt
] = 
digôs
[
i
 + 1];

56 
d°
[
√xt
 - 1] = 
digôs
[
i
];

57 *
Àngth_out
 = 
Àngth
 - 
√xt
;

58  
d°
 + 
√xt
 - 1;

59 
	}
}

61 
ALWAYS_INLINE
 *

62 
	$öt_to_°rög
(
ssize_t
 
vÆue
,

63 
d°
[
INT_TO_STR_BUFFER_SIZE
],

64 
size_t
 *
Àngth_out
)

66 i‡(
vÆue
 < 0) {

67 *
p
 = 
	`uöt_to_°rög
((
size_t
Ë-
vÆue
, 
d°
, 
Àngth_out
);

68 *--
p
 = '-';

69 ++*
Àngth_out
;

71  
p
;

74  
	`uöt_to_°rög
((
size_t
Ë
vÆue
, 
d°
, 
Àngth_out
);

75 
	}
}

	@common/int-to-str.h

19 #i‚de‡
__INT_TO_STR_H__


20 
	#__INT_TO_STR_H__


	)

22 
	~"lw™.h
"

24 
	#INT_TO_STR_BUFFER_SIZE
 (3 * (
size_t
Ë+ 1)

	)

26 *
öt_to_°rög
(
ssize_t
 
vÆue
,

27 
buf„r
[
INT_TO_STR_BUFFER_SIZE
],

28 
size_t
 *
Àn
);

29 *
uöt_to_°rög
(
size_t
 
vÆue
,

30 
buf„r
[
INT_TO_STR_BUFFER_SIZE
],

31 
size_t
 *
Àn
);

	@common/list.c

30 
	~<°dio.h
>

31 
	~<°dlib.h
>

32 
	~"li°.h
"

34 *
	$c‹ru±
(c⁄° *
ab‹t°r
,

35 c⁄° 
li°_node
 *
hód
,

36 c⁄° 
li°_node
 *
node
,

37 
cou¡
)

39 i‡(
ab‹t°r
) {

40 
	`Ârötf
(
°dîr
,

42 
ab‹t°r
, 
node
, 
cou¡
, 
hód
);

43 
	`ab‹t
();

45  
NULL
;

46 
	}
}

48 
li°_node
 *
	$li°_check_node
(c⁄° 
li°_node
 *
node
,

49 c⁄° *
ab‹t°r
)

51 c⁄° 
li°_node
 *
p
, *
n
;

52 
cou¡
 = 0;

54 
p
 = 
node
, 
n
 =Çode->
√xt
;Ç !=Çode;Ö =Ç,Ç =Ç->next) {

55 
cou¡
++;

56 i‡(
n
->
¥ev
 !
p
)

57  
	`c‹ru±
(
ab‹t°r
, 
node
, 
n
, 
cou¡
);

60 i‡(
node
->
¥ev
 !
p
)

61  
	`c‹ru±
(
ab‹t°r
, 
node
,Çode, 0);

63  (
li°_node
 *)
node
;

64 
	}
}

66 
li°_hód
 *
	$li°_check
(c⁄° 
li°_hód
 *
h
, c⁄° *
ab‹t°r
)

68 i‡(!
	`li°_check_node
(&
h
->
n
, 
ab‹t°r
))

69  
NULL
;

70  (
li°_hód
 *)
h
;

71 
	}
}

	@common/list.h

30 #i‚de‡
_LIST_H


31 
	#_LIST_H


	)

32 
	~<°dboﬁ.h
>

33 
	~<°ddef.h
>

34 
	~<as£π.h
>

55 
	#check_ty≥
(
ex¥
, 
ty≥
) \

56 ((
	`ty≥of
(
ex¥
Ë*)0 !(
ty≥
 *)0)

	)

81 
	#check_ty≥s_m©ch
(
ex¥1
, 
ex¥2
) \

82 ((
	`ty≥of
(
ex¥1
Ë*)0 !—y≥of(
ex¥2
Ë*)0)

	)

108 
	#c⁄èöî_of
(
membî_±r
, 
c⁄èöög_ty≥
, 
membî
) \

109 ((
c⁄èöög_ty≥
 *) \

110 ((*)(
membî_±r
) \

111 - 
	`c⁄èöî_off
(
c⁄èöög_ty≥
, 
membî
)) \

112 + 
	`check_ty≥s_m©ch
(*(
membî_±r
), ((
c⁄èöög_ty≥
 *)0)->
membî
))

	)

130 #i‡
HAVE_TYPEOF


131 
	#c⁄èöî_of_v¨
(
membî_±r
, 
c⁄èöî_v¨
, 
membî
) \

132 
	`c⁄èöî_of
(
membî_±r
, 
	`ty≥of
(*
c⁄èöî_v¨
), 
membî
)

	)

134 
	#c⁄èöî_of_v¨
(
membî_±r
, 
c⁄èöî_v¨
, 
membî
) \

135 ((*)((*)(
membî_±r
) - \

136 
	`c⁄èöî_off_v¨
(
c⁄èöî_v¨
, 
membî
)))

	)

163 
	#c⁄èöî_off
(
c⁄èöög_ty≥
, 
membî
) \

164 
	`off£tof
(
c⁄èöög_ty≥
, 
membî
)

	)

176 
	#c⁄èöî_off_v¨
(
v¨
, 
membî
) \

177 
	`c⁄èöî_off
(
	`ty≥of
(*
v¨
), 
membî
)

	)

192 
	sli°_node


194 
li°_node
 *
	m√xt
, *
	m¥ev
;

209 
	sli°_hód


211 
li°_node
 
	mn
;

240 
li°_hód
 *
li°_check
(c⁄° li°_hód *
h
, c⁄° *
ab‹t°r
);

258 
li°_node
 *
li°_check_node
(c⁄° li°_nodê*
n
,

259 c⁄° *
ab‹t°r
);

261 #ifde‡
_LIST_DEBUG


262 
	#li°_debug
(
h
Ë
	`li°_check
((h), 
__func__
)

	)

263 
	#li°_debug_node
(
n
Ë
	`li°_check_node
(“), 
__func__
)

	)

265 
	#li°_debug
(
h
Ë(h)

	)

266 
	#li°_debug_node
(
n
Ë“)

	)

281 
	#LIST_HEAD_INIT
(
«me
Ë{ { &«me.
n
, &«me.¿} }

	)

296 
	#LIST_HEAD
(
«me
) \

297 
li°_hód
 
«me
 = 
	`LIST_HEAD_INIT
“ame)

	)

310 
ölöe
 
	$li°_hód_öô
(
li°_hód
 *
h
)

312 
h
->
n
.
√xt
 = h->n.
¥ev
 = &h->n;

313 
	}
}

328 
ölöe
 
	$li°_add
(
li°_hód
 *
h
, 
li°_node
 *
n
)

330 
n
->
√xt
 = 
h
->n.next;

331 
n
->
¥ev
 = &
h
->n;

332 
h
->
n
.
√xt
->
¥ev
 =Ç;

333 
h
->
n
.
√xt
 =Ç;

334 ()
	`li°_debug
(
h
);

335 
	}
}

347 
ölöe
 
	$li°_add_èû
(
li°_hód
 *
h
, 
li°_node
 *
n
)

349 
n
->
√xt
 = &
h
->n;

350 
n
->
¥ev
 = 
h
->n.prev;

351 
h
->
n
.
¥ev
->
√xt
 =Ç;

352 
h
->
n
.
¥ev
 =Ç;

353 ()
	`li°_debug
(
h
);

354 
	}
}

365 
ölöe
 
boﬁ
 
	$li°_em±y
(c⁄° 
li°_hód
 *
h
)

367 ()
	`li°_debug
(
h
);

368  
h
->
n
.
√xt
 == &h->n;

369 
	}
}

385 
ölöe
 
	$li°_dñ
(
li°_node
 *
n
)

387 ()
	`li°_debug_node
(
n
);

388 
n
->
√xt
->
¥ev
 =Ç->prev;

389 
n
->
¥ev
->
√xt
 =Ç->next;

390 #ifde‡
_LIST_DEBUG


392 
n
->
√xt
 =Ç->
¥ev
 = 
NULL
;

394 
	}
}

410 
ölöe
 
	$li°_dñ_‰om
(
li°_hód
 *
h
, 
li°_node
 *
n
)

412 #ifde‡
_LIST_DEBUG


415 
li°_node
 *
i
;

416 
i
 = 
h
->
n
.
√xt
; i !=Ç; i = i->next)

417 
	`as£π
(
i
 !&
h
->
n
);

420 ()
h
;

424 
	`as£π
(!
	`li°_em±y
(
h
));

425 
	`li°_dñ
(
n
);

426 
	}
}

441 
	#li°_íåy
(
n
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
“,Åy≥, membî)

	)

457 
	#li°_t›
(
h
, 
ty≥
, 
membî
) \

458 ((
ty≥
 *)
	`li°_t›_
((
h
), 
	`li°_off_
—y≥, 
membî
)))

	)

460 
ölöe
 c⁄° *
	$li°_t›_
(c⁄° 
li°_hód
 *
h
, 
size_t
 
off
)

462 i‡(
	`li°_em±y
(
h
))

463  
NULL
;

464  (c⁄° *)
h
->
n
.
√xt
 - 
off
;

465 
	}
}

481 
	#li°_p›
(
h
, 
ty≥
, 
membî
) \

482 ((
ty≥
 *)
	`li°_p›_
((
h
), 
	`li°_off_
—y≥, 
membî
)))

	)

484 
ölöe
 c⁄° *
	$li°_p›_
(c⁄° 
li°_hód
 *
h
, 
size_t
 
off
)

486 
li°_node
 *
n
;

488 i‡(
	`li°_em±y
(
h
))

489  
NULL
;

490 
n
 = 
h
->n.
√xt
;

491 
	`li°_dñ
(
n
);

492  (c⁄° *)
n
 - 
off
;

493 
	}
}

509 
	#li°_èû
(
h
, 
ty≥
, 
membî
) \

510 ((
ty≥
 *)
	`li°_èû_
((
h
), 
	`li°_off_
—y≥, 
membî
)))

	)

512 
ölöe
 c⁄° *
	$li°_èû_
(c⁄° 
li°_hód
 *
h
, 
size_t
 
off
)

514 i‡(
	`li°_em±y
(
h
))

515  
NULL
;

516  (c⁄° *)
h
->
n
.
¥ev
 - 
off
;

517 
	}
}

532 
	#li°_f‹_óch
(
h
, 
i
, 
membî
) \

533 
	`li°_f‹_óch_off
(
h
, 
i
, 
	`li°_off_v¨_
(i, 
membî
))

	)

548 
	#li°_f‹_óch_ªv
(
h
, 
i
, 
membî
) \

549 
i
 = 
	`c⁄èöî_of_v¨
(
	`li°_debug
(
h
)->
n
.
¥ev
, i, 
membî
); \

550 &
i
->
membî
 !&(
h
)->
n
; \

551 
i
 = 
	`c⁄èöî_of_v¨
(i->
membî
.
¥ev
, i, membî))

	)

571 
	#li°_f‹_óch_ß„
(
h
, 
i
, 
nxt
, 
membî
) \

572 
	`li°_f‹_óch_ß„_off
(
h
, 
i
, 
nxt
, 
	`li°_off_v¨_
(i, 
membî
))

	)

589 
ölöe
 
	$li°_≠≥nd_li°
(
li°_hód
 *
to
,

590 
li°_hód
 *
‰om
)

592 
li°_node
 *
‰om_èû
 = 
	`li°_debug
(
‰om
)->
n
.
¥ev
;

593 
li°_node
 *
to_èû
 = 
	`li°_debug
(
to
)->
n
.
¥ev
;

596 
to
->
n
.
¥ev
 = 
‰om_èû
;

597 
‰om_èû
->
√xt
 = &
to
->
n
;

598 
to_èû
->
√xt
 = &
‰om
->
n
;

599 
‰om
->
n
.
¥ev
 = 
to_èû
;

602 
	`li°_dñ
(&
‰om
->
n
);

603 
	`li°_hód_öô
(
‰om
);

604 
	}
}

619 
ölöe
 
	$li°_¥ïíd_li°
(
li°_hód
 *
to
,

620 
li°_hód
 *
‰om
)

622 
li°_node
 *
‰om_èû
 = 
	`li°_debug
(
‰om
)->
n
.
¥ev
;

623 
li°_node
 *
to_hód
 = 
	`li°_debug
(
to
)->
n
.
√xt
;

626 
to
->
n
.
√xt
 = &
‰om
->n;

627 
‰om
->
n
.
¥ev
 = &
to
->n;

628 
to_hód
->
¥ev
 = 
‰om_èû
;

629 
‰om_èû
->
√xt
 = 
to_hód
;

632 
	`li°_dñ
(&
‰om
->
n
);

633 
	`li°_hód_öô
(
‰om
);

634 
	}
}

665 
	#li°_f‹_óch_off
(
h
, 
i
, 
off
) \

666 
i
 = 
	`li°_node_to_off_
(
	`li°_debug
(
h
)->
n
.
√xt
, (
off
)); \

667 
	`li°_node_‰om_off_
((*)
i
, (
off
)Ë!&(
h
)->
n
; \

668 
i
 = 
	`li°_node_to_off_
(
	`li°_node_‰om_off_
((*)i, (
off
))->
√xt
, \

669 (
off
)))

	)

687 
	#li°_f‹_óch_ß„_off
(
h
, 
i
, 
nxt
, 
off
) \

688 
i
 = 
	`li°_node_to_off_
(
	`li°_debug
(
h
)->
n
.
√xt
, (
off
)), \

689 
nxt
 = 
	`li°_node_to_off_
(
	`li°_node_‰om_off_
(
i
, (
off
))->
√xt
, \

690 (
off
)); \

691 
	`li°_node_‰om_off_
(
i
, (
off
)Ë!&(
h
)->
n
; \

692 
i
 = 
nxt
, \

693 
nxt
 = 
	`li°_node_to_off_
(
	`li°_node_‰om_off_
(
i
, (
off
))->
√xt
, \

694 (
off
)))

	)

698 
	#li°_íåy_off
(
n
, 
ty≥
, 
off
) \

699 ((
ty≥
 *)
	`li°_node_‰om_off_
((
n
), (
off
)))

	)

701 
	#li°_hód_off
(
h
, 
ty≥
, 
off
) \

702 ((
ty≥
 *)
	`li°_hód_off
((
h
), (
off
)))

	)

704 
	#li°_èû_off
(
h
, 
ty≥
, 
off
) \

705 ((
ty≥
 *)
	`li°_èû_
((
h
), (
off
)))

	)

707 
	#li°_add_off
(
h
, 
n
, 
off
) \

708 
	`li°_add
((
h
), 
	`li°_node_‰om_off_
((
n
), (
off
)))

	)

710 
	#li°_dñ_off
(
n
, 
off
) \

711 
	`li°_dñ
(
	`li°_node_‰om_off_
((
n
), (
off
)))

	)

713 
	#li°_dñ_‰om_off
(
h
, 
n
, 
off
) \

714 
	`li°_dñ_‰om
(
h
, 
	`li°_node_‰om_off_
((
n
), (
off
)))

	)

717 
ölöe
 *
	$li°_node_to_off_
(
li°_node
 *
node
, 
size_t
 
off
)

719  (*)((*)
node
 - 
off
);

720 
	}
}

721 
ölöe
 
li°_node
 *
	$li°_node_‰om_off_
(*
±r
, 
size_t
 
off
)

723  (
li°_node
 *)((*)
±r
 + 
off
);

724 
	}
}

727 
	#li°_off_
(
ty≥
, 
membî
) \

728 (
	`c⁄èöî_off
(
ty≥
, 
membî
) + \

729 
	`check_ty≥
(((
ty≥
 *)0)->
membî
, 
li°_node
))

	)

731 
	#li°_off_v¨_
(
v¨
, 
membî
) \

732 (
	`c⁄èöî_off_v¨
(
v¨
, 
membî
) + \

733 
	`check_ty≥
(
v¨
->
membî
, 
li°_node
))

	)

	@common/lwan-cache.c

20 
	~<as£π.h
>

21 
	~<î∫o.h
>

22 
	~<±hªad.h
>

23 
	~<°dboﬁ.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<time.h
>

28 
	~"lw™.h
"

29 
	~"lw™-¥iv©e.h
"

30 
	~"lw™-ˇche.h
"

31 
	~"hash.h
"

33 
	#GET_AND_REF_TRIES
 5

	)

37 
	mFLOATING
 = 1 << 0,

38 
	mTEMPORARY
 = 1 << 1,

41 
	mSHUTTING_DOWN
 = 1 << 0

44 
	sˇche_t
 {

46 
hash
 *
	mèbÀ
;

47 
±hªad_rwlock_t
 
	mlock
;

48 } 
	mhash
;

51 
li°_hód
 
	mli°
;

52 
±hªad_rwlock_t
 
	mlock
;

53 } 
	mqueue
;

56 
Cª©eE¡ryCÆlback
 
	m¸óã_íåy
;

57 
De°royE¡ryCÆlback
 
	mde°roy_íåy
;

58 *
	mc⁄ãxt
;

59 } 
	mcb
;

62 
time_t
 
	mtime_to_live
;

63 
˛ockid_t
 
	m˛ock_id
;

64 } 
	m£âögs
;

66 
	mÊags
;

68 #i‚de‡
NDEBUG


70 
	mhôs
;

71 
	mmis£s
;

72 
	mevi˘ed
;

73 } 
	m°©s
;

77 
boﬁ
 
ˇche_¥u√r_job
(*
d©a
);

79 
˛ockid_t
 
	$dëe˘_Á°e°_m⁄Ÿ⁄ic_˛ock
()

81 #ifde‡
CLOCK_MONOTONIC_COARSE


82 
time•ec
 
ts
;

84 i‡(!
	`˛ock_gëtime
(
CLOCK_MONOTONIC_COARSE
, &
ts
))

85  
CLOCK_MONOTONIC_COARSE
;

87  
CLOCK_MONOTONIC
;

88 
	}
}

90 
ALWAYS_INLINE
 
	$˛ock_m⁄Ÿ⁄ic_gëtime
(
ˇche_t
 *
ˇche
,

91 
time•ec
 *
ts
)

93 i‡(
	`UNLIKELY
(
	`˛ock_gëtime
(
ˇche
->
£âögs
.
˛ock_id
, 
ts
) < 0))

94 
	`lw™_°©us_≥º‹
("clock_gettime");

95 
	}
}

97 
ˇche_t
 *
	$ˇche_¸óã
(
Cª©eE¡ryCÆlback
 
¸óã_íåy_cb
,

98 
De°royE¡ryCÆlback
 
de°roy_íåy_cb
,

99 *
cb_c⁄ãxt
,

100 
time_t
 
time_to_live
)

102 
ˇche_t
 *
ˇche
;

104 
	`as£π
(
¸óã_íåy_cb
);

105 
	`as£π
(
de°roy_íåy_cb
);

106 
	`as£π
(
time_to_live
 > 0);

108 
ˇche
 = 
	`ˇŒoc
(1, (*cache));

109 i‡(!
ˇche
)

110  
NULL
;

112 
ˇche
->
hash
.
èbÀ
 = 
	`hash_°r_√w
(
‰ì
, 
NULL
);

113 i‡(!
ˇche
->
hash
.
èbÀ
)

114 
îr‹_no_hash
;

116 i‡(
	`±hªad_rwlock_öô
(&
ˇche
->
hash
.
lock
, 
NULL
))

117 
îr‹_no_hash_lock
;

118 i‡(
	`±hªad_rwlock_öô
(&
ˇche
->
queue
.
lock
, 
NULL
))

119 
îr‹_no_queue_lock
;

121 
ˇche
->
cb
.
¸óã_íåy
 = 
¸óã_íåy_cb
;

122 
ˇche
->
cb
.
de°roy_íåy
 = 
de°roy_íåy_cb
;

123 
ˇche
->
cb
.
c⁄ãxt
 = 
cb_c⁄ãxt
;

125 
ˇche
->
£âögs
.
˛ock_id
 = 
	`dëe˘_Á°e°_m⁄Ÿ⁄ic_˛ock
();

126 
ˇche
->
£âögs
.
time_to_live
 =Åime_to_live;

128 
	`li°_hód_öô
(&
ˇche
->
queue
.
li°
);

130 
	`lw™_job_add
(
ˇche_¥u√r_job
, 
ˇche
);

132  
ˇche
;

134 
îr‹_no_queue_lock
:

135 
	`±hªad_rwlock_de°roy
(&
ˇche
->
hash
.
lock
);

136 
îr‹_no_hash_lock
:

137 
	`hash_‰ì
(
ˇche
->
hash
.
èbÀ
);

138 
îr‹_no_hash
:

139 
	`‰ì
(
ˇche
);

141  
NULL
;

142 
	}
}

144 
	$ˇche_de°roy
(
ˇche_t
 *
ˇche
)

146 
	`as£π
(
ˇche
);

148 #i‚de‡
NDEBUG


149 
	`lw™_°©us_debug
("Cache stats: %d hits, %d misses, %dÉvictions",

150 
ˇche
->
°©s
.
hôs
, cache->°©s.
mis£s
,

151 
ˇche
->
°©s
.
evi˘ed
);

154 
	`lw™_job_dñ
(
ˇche_¥u√r_job
, 
ˇche
);

155 
ˇche
->
Êags
 |
SHUTTING_DOWN
;

156 
	`ˇche_¥u√r_job
(
ˇche
);

157 
	`±hªad_rwlock_de°roy
(&
ˇche
->
hash
.
lock
);

158 
	`±hªad_rwlock_de°roy
(&
ˇche
->
queue
.
lock
);

159 
	`hash_‰ì
(
ˇche
->
hash
.
èbÀ
);

160 
	`‰ì
(
ˇche
);

161 
	}
}

163 
ALWAYS_INLINE
 
ˇche_íåy_t
 *
	$c⁄vît_to_ãmp‹¨y
(

164 
ˇche_íåy_t
 *
íåy
)

166 
íåy
->
Êags
 = 
TEMPORARY
;

167  
íåy
;

168 
	}
}

170 
ˇche_íåy_t
 *
	$ˇche_gë_™d_ªf_íåy
(
ˇche_t
 *
ˇche
,

171 c⁄° *
key
, *
îr‹
)

173 
ˇche_íåy_t
 *
íåy
;

175 
	`as£π
(
ˇche
);

176 
	`as£π
(
îr‹
);

177 
	`as£π
(
key
);

179 *
îr‹
 = 0;

184 i‡(
	`UNLIKELY
(
	`±hªad_rwlock_åyrdlock
(&
ˇche
->
hash
.
lock
Ë=
EBUSY
)) {

185 *
îr‹
 = 
EWOULDBLOCK
;

186  
NULL
;

190 
íåy
 = 
	`hash_föd
(
ˇche
->
hash
.
èbÀ
, 
key
);

191 i‡(
	`LIKELY
(
íåy
)) {

192 
	`ATOMIC_INC
(
íåy
->
ªfs
);

193 
	`±hªad_rwlock_u∆ock
(&
ˇche
->
hash
.
lock
);

194 #i‚de‡
NDEBUG


195 
	`ATOMIC_INC
(
ˇche
->
°©s
.
hôs
);

197  
íåy
;

201 
	`±hªad_rwlock_u∆ock
(&
ˇche
->
hash
.
lock
);

203 #i‚de‡
NDEBUG


204 
	`ATOMIC_INC
(
ˇche
->
°©s
.
mis£s
);

207 
íåy
 = 
ˇche
->
cb
.
	`¸óã_íåy
(
key
, cache->cb.
c⁄ãxt
);

208 i‡(!
íåy
)

209  
NULL
;

211 
	`mem£t
(
íåy
, 0, (*entry));

212 
íåy
->
key
 = 
	`°rdup
(key);

213 
íåy
->
ªfs
 = 1;

215 i‡(
	`±hªad_rwlock_åywæock
(&
ˇche
->
hash
.
lock
Ë=
EBUSY
) {

221  
	`c⁄vît_to_ãmp‹¨y
(
íåy
);

224 i‡(!
	`hash_add_unique
(
ˇche
->
hash
.
èbÀ
, 
íåy
->
key
,Éntry)) {

225 
	`˛ock_m⁄Ÿ⁄ic_gëtime
(
ˇche
, &
íåy
->
time_to_dõ
);

227 
íåy
->
time_to_dõ
.
tv_£c
 +
ˇche
->
£âögs
.
time_to_live
;

229 
	`±hªad_rwlock_wæock
(&
ˇche
->
queue
.
lock
);

230 
	`li°_add_èû
(&
ˇche
->
queue
.
li°
, &
íåy
->
íåõs
);

231 
	`±hªad_rwlock_u∆ock
(&
ˇche
->
queue
.
lock
);

239 
	`c⁄vît_to_ãmp‹¨y
(
íåy
);

242 
	`±hªad_rwlock_u∆ock
(&
ˇche
->
hash
.
lock
);

243  
íåy
;

244 
	}
}

246 
	$ˇche_íåy_uƒef
(
ˇche_t
 *
ˇche
, 
ˇche_íåy_t
 *
íåy
)

248 
	`as£π
(
íåy
);

250 i‡(
íåy
->
Êags
 & 
TEMPORARY
) {

251 
	`‰ì
(
íåy
->
key
);

252 
de°roy_íåy
;

255 i‡(
	`ATOMIC_DEC
(
íåy
->
ªfs
))

260 i‡(
íåy
->
Êags
 & 
FLOATING
) {

261 
de°roy_íåy
:

265 
ˇche
->
cb
.
	`de°roy_íåy
(
íåy
, cache->cb.
c⁄ãxt
);

267 
	}
}

269 
boﬁ
 
	$ˇche_¥u√r_job
(*
d©a
)

271 
ˇche_t
 *
ˇche
 = 
d©a
;

272 
ˇche_íåy_t
 *
node
, *
√xt
;

273 
time•ec
 
now
;

274 
boﬁ
 
shuâög_down
 = 
ˇche
->
Êags
 & 
SHUTTING_DOWN
;

275 
evi˘ed
 = 0;

276 
li°_hód
 
queue
;

278 i‡(
	`UNLIKELY
(
	`±hªad_rwlock_åywæock
(&
ˇche
->
queue
.
lock
Ë=
EBUSY
))

279  
Ál£
;

282 i‡(
	`li°_em±y
(&
ˇche
->
queue
.
li°
)) {

283 i‡(
	`UNLIKELY
(
	`±hªad_rwlock_u∆ock
(&
ˇche
->
queue
.
lock
) < 0))

284 
	`lw™_°©us_≥º‹
("pthread_rwlock_unlock");

285  
Ál£
;

290 
	`li°_hód_öô
(&
queue
);

291 
	`li°_≠≥nd_li°
(&
queue
, &
ˇche
->queue.
li°
);

292 
	`li°_hód_öô
(&
ˇche
->
queue
.
li°
);

294 i‡(
	`UNLIKELY
(
	`±hªad_rwlock_u∆ock
(&
ˇche
->
queue
.
lock
) < 0)) {

295 
	`lw™_°©us_≥º‹
("pthread_rwlock_unlock");

296 
íd
;

299 
	`˛ock_m⁄Ÿ⁄ic_gëtime
(
ˇche
, &
now
);

300 
	`li°_f‹_óch_ß„
(&
queue
, 
node
, 
√xt
, 
íåõs
)

302 *
key
 = 
node
->key;

304 i‡(
now
.
tv_£c
 < 
node
->
time_to_dõ
.tv_£¯&& 
	`LIKELY
(!
shuâög_down
))

307 
	`li°_dñ
(&
node
->
íåõs
);

309 i‡(
	`UNLIKELY
(
	`±hªad_rwlock_wæock
(&
ˇche
->
hash
.
lock
) < 0)) {

310 
	`lw™_°©us_≥º‹
("pthread_rwlock_wrlock");

314 
	`hash_dñ
(
ˇche
->
hash
.
èbÀ
, 
key
);

316 i‡(
	`UNLIKELY
(
	`±hªad_rwlock_u∆ock
(&
ˇche
->
hash
.
lock
) < 0))

317 
	`lw™_°©us_≥º‹
("pthread_rwlock_unlock");

319 i‡(
	`ATOMIC_INC
(
node
->
ªfs
) == 1) {

320 
ˇche
->
cb
.
	`de°roy_íåy
(
node
, cache->cb.
c⁄ãxt
);

322 
	`ATOMIC_BITWISE
(&
node
->
Êags
, 
‹
, 
FLOATING
);

325 i‡(!
	`ATOMIC_DEC
(
node
->
ªfs
))

326 
ˇche
->
cb
.
	`de°roy_íåy
(
node
, cache->cb.
c⁄ãxt
);

329 
evi˘ed
++;

335 i‡(
	`li°_em±y
(&
queue
))

336 
íd
;

340 i‡(
	`±hªad_rwlock_åywæock
(&
ˇche
->
queue
.
lock
) >= 0) {

341 
	`li°_¥ïíd_li°
(&
ˇche
->
queue
.
li°
, &queue);

343 i‡(
	`±hªad_rwlock_u∆ock
(&
ˇche
->
queue
.
lock
) < 0)

344 
	`lw™_°©us_≥º‹
("pthread_rwlock_unlock");

346 
	`lw™_°©us_≥º‹
("pthread_rwlock_trywrlock");

349 
íd
:

350 #i‚de‡
NDEBUG


351 
	`ATOMIC_AAF
(&
ˇche
->
°©s
.
evi˘ed
,Évicted);

353  
evi˘ed
;

354 
	}
}

356 
ˇche_íåy_t
*

357 
	$ˇche_c‹o_gë_™d_ªf_íåy
(
ˇche_t
 *
ˇche
, 
c‹o_t
 *
c‹o
,

358 c⁄° *
key
)

360 
åõs
 = 
GET_AND_REF_TRIES
;Åries;Åries--) {

361 
îr‹
;

362 
ˇche_íåy_t
 *
˚
 = 
	`ˇche_gë_™d_ªf_íåy
(
ˇche
, 
key
, &
îr‹
);

364 i‡(
	`LIKELY
(
˚
)) {

370 
	`c‹o_de„r2
(
c‹o
, 
	`CORO_DEFER2
(
ˇche_íåy_uƒef
), 
ˇche
, 
˚
);

371  
˚
;

378 i‡(
îr‹
 =
EWOULDBLOCK
) {

379 
	`c‹o_yõld
(
c‹o
, 
CONN_CORO_MAY_RESUME
);

385  
NULL
;

386 
	}
}

	@common/lwan-cache.h

20 #i‚de‡
LWAN_CACHE_H


21 
	#LWAN_CACHE_H


	)

23 
	~<time.h
>

25 
	~"li°.h
"

26 
	~"lw™-c‹o.h
"

28 
	sˇche_íåy_t
 {

29 
li°_node
 
	míåõs
;

30 *
	mkey
;

31 
	mªfs
;

32 
	mÊags
;

33 
time•ec
 
	mtime_to_dõ
;

36 
	gˇche_íåy_t
 *(*
	tCª©eE¡ryCÆlback
)(

37 c⁄° *
	tkey
, *
	tc⁄ãxt
);

38 (*
	tDe°royE¡ryCÆlback
)(

39 
	tˇche_íåy_t
 *
	tíåy
, *
	tc⁄ãxt
);

41 
ˇche_t
;

43 
ˇche_t
 *
	`ˇche_¸óã
(
Cª©eE¡ryCÆlback
 
¸óã_íåy_cb
,

44 
De°royE¡ryCÆlback
 
de°roy_íåy_cb
,

45 *
cb_c⁄ãxt
,

46 
time_t
 
time_to_live
);

47 
	`ˇche_de°roy
(
ˇche_t
 *
ˇche
);

49 
ˇche_íåy_t
 *
	`ˇche_gë_™d_ªf_íåy
(
ˇche_t
 *
ˇche
,

50 c⁄° *
key
, *
îr‹
);

51 
	`ˇche_íåy_uƒef
(
ˇche_t
 *
ˇche
, 
ˇche_íåy_t
 *
íåy
);

52 
ˇche_íåy_t
 *
	`ˇche_c‹o_gë_™d_ªf_íåy
(
ˇche_t
 *
ˇche
,

53 
c‹o_t
 *
c‹o
, c⁄° *
key
);

	@common/lwan-config.c

20 
	#_GNU_SOURCE


	)

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°d¨g.h
>

25 
	~<°dboﬁ.h
>

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

30 
	~"lw™-c⁄fig.h
"

31 
	~"lw™-°©us.h
"

32 
	~"hash.h
"

34 
	$∑r£_time_≥riod
(c⁄° *
°r
, 
deÁu…_vÆue
)

36 
tŸÆ
 = 0;

37 
≥riod
;

38 
mu…ùlõr
;

40 i‡(!
°r
)

41  
deÁu…_vÆue
;

43 *
°r
 && 
	`ssˇnf
(°r, "%u%c", &
≥riod
, &
mu…ùlõr
) == 2) {

44 
mu…ùlõr
) {

45 's': 
tŸÆ
 +
≥riod
; ;

46 'm': 
tŸÆ
 +
≥riod
 * 
ONE_MINUTE
; ;

47 'h': 
tŸÆ
 +
≥riod
 * 
ONE_HOUR
; ;

48 'd': 
tŸÆ
 +
≥riod
 * 
ONE_DAY
; ;

49 'w': 
tŸÆ
 +
≥riod
 * 
ONE_WEEK
; ;

50 'M': 
tŸÆ
 +
≥riod
 * 
ONE_MONTH
; ;

51 'y': 
tŸÆ
 +
≥riod
 * 
ONE_YEAR
; ;

53 
	`lw™_°©us_w¨nög
("Ignoring unknown multiplier: %c",

54 
mu…ùlõr
);

57 
°r
 = (c⁄° *)
	`øwmemchr
(°r, 
mu…ùlõr
) + 1;

60  
tŸÆ
 ?ÅŸÆ : 
deÁu…_vÆue
;

61 
	}
}

63 
boﬁ
 
	$∑r£_boﬁ
(c⁄° *
vÆue
, 
boﬁ
 
deÁu…_vÆue
)

65 i‡(!
	`°rcmp
(
vÆue
, "true") || !strcmp(value, "1")

66 || !
	`°rcmp
(
vÆue
, "on") || !strcmp(value, "yes"))

67  
åue
;

69 i‡(!
	`°rcmp
(
vÆue
, "false") || !strcmp(value, "0")

70 || !
	`°rcmp
(
vÆue
, "off") || !strcmp(value, "no"))

71  
Ál£
;

73  
deÁu…_vÆue
;

74 
	}
}

76 
	$∑r£_l⁄g
(c⁄° *
vÆue
, 
deÁu…_vÆue
)

78 *
íd±r
;

79 
∑r£d
;

81 
î∫o
 = 0;

82 
∑r£d
 = 
	`°πﬁ
(
vÆue
, &
íd±r
, 0);

84 i‡(
î∫o
 != 0)

85  
deÁu…_vÆue
;

87 i‡(*
íd±r
 !'\0' || 
vÆue
 ==Éndptr)

88  
deÁu…_vÆue
;

90  
∑r£d
;

91 
	}
}

93 
boﬁ
 
	$c⁄fig_îr‹
(
c⁄fig_t
 *
c⁄f
, c⁄° *
fmt
, ...)

95 
va_li°
 
vÆues
;

96 
Àn
;

97 *
ouçut
;

99 i‡(
c⁄f
->
îr‹_mesßge
)

100  
Ál£
;

102 
	`va_°¨t
(
vÆues
, 
fmt
);

103 
Àn
 = 
	`va•rötf
(&
ouçut
, 
fmt
, 
vÆues
);

104 
	`va_íd
(
vÆues
);

106 i‡(
Àn
 >= 0) {

107 
c⁄f
->
îr‹_mesßge
 = 
ouçut
;

108  
åue
;

111 
c⁄f
->
îr‹_mesßge
 = 
NULL
;

112  
Ál£
;

113 
	}
}

115 *
	$ªmove_commíts
(*
löe
)

117 *
tmp
 = 
	`°ºchr
(
löe
, '#');

118 i‡(
tmp
)

119 *
tmp
 = '\0';

120  
löe
;

121 
	}
}

123 *
	$ªmove_åaûög_•a˚s
(*
löe
)

125 *
íd
 = 
	`øwmemchr
(
löe
, '\0');

127 
íd
--; 
	`is•a˚
(*end);Énd--);

128 *(
íd
 + 1) = '\0';

130  
löe
;

131 
	}
}

133 *
	$ªmove_Àadög_•a˚s
(*
löe
)

135 
	`is•a˚
(*
löe
))

136 
löe
++;

137  
löe
;

138 
	}
}

140 *
	$föd_löe_íd
(*
löe
)

142 i‡(*
löe
 == '\0')

143  
löe
;

144  (*)
	`øwmemchr
(
löe
, '\0') - 1;

145 
	}
}

147 
boﬁ
 
	$∑r£_£˘i⁄
(*
löe
, 
c⁄fig_löe_t
 *
l
)

149 *
«me
, *
∑øm
;

150 *
bøckë
 = 
	`°ºchr
(
löe
, '{');

151 i‡(!
bøckë
)

152  
Ál£
;

154 *
•a˚
 = 
	`°rchr
(
löe
, ' ');

155 i‡(!
•a˚
)

156  
Ál£
;

158 *
bøckë
 = '\0';

159 *
•a˚
 = '\0';

160 
«me
 = 
	`ªmove_åaûög_•a˚s
(
	`ªmove_Àadög_•a˚s
(
löe
));

161 
∑øm
 = 
	`ªmove_åaûög_•a˚s
(
	`ªmove_Àadög_•a˚s
(
•a˚
 + 1));

163 
l
->
£˘i⁄
.
«me
 =Çame;

164 
l
->
£˘i⁄
.
∑øm
 =Öaram;

165 
l
->
ty≥
 = 
CONFIG_LINE_TYPE_SECTION
;

167  
åue
;

168 
	}
}

170 
boﬁ
 
	$∑r£_löe
(*
löe
, 
c⁄fig_löe_t
 *
l
, *
equÆ
)

172 *
equÆ
 = '\0';

173 
l
->
löe
.
key
 = 
	`ªmove_åaûög_•a˚s
(
	`ªmove_Àadög_•a˚s
(line));

174 
l
->
löe
.
vÆue
 = 
	`ªmove_Àadög_•a˚s
(
equÆ
 + 1);

175 
l
->
ty≥
 = 
CONFIG_LINE_TYPE_LINE
;

177  
åue
;

178 
	}
}

180 
boﬁ
 
	$c⁄fig_ªad_löe
(
c⁄fig_t
 *
c⁄f
, 
c⁄fig_löe_t
 *
l
)

182 *
löe
, *
löe_íd
;

184 i‡(
c⁄f
->
îr‹_mesßge
)

185  
Ál£
;

187 
ªåy
:

188 i‡(!
	`fgës
(
l
->
buf„r
, ÷->buf„r), 
c⁄f
->
fûe
))

189  
Ál£
;

191 
c⁄f
->
löe
++;

193 
löe
 = 
	`ªmove_commíts
(
l
->
buf„r
);

194 
löe
 = 
	`ªmove_Àadög_•a˚s
(line);

195 
löe
 = 
	`ªmove_åaûög_•a˚s
(line);

196 
löe_íd
 = 
	`föd_löe_íd
(
löe
);

198 i‡(*
löe_íd
 == '{') {

199 i‡(!
	`∑r£_£˘i⁄
(
löe
, 
l
)) {

200 
	`c⁄fig_îr‹
(
c⁄f
, "Malformed section opening");

201  
Ál£
;

203 } i‡(*
löe
 == '\0') {

204 
ªåy
;

205 } i‡(*
löe
 ='}' &&Üöê=
löe_íd
) {

206 
l
->
ty≥
 = 
CONFIG_LINE_TYPE_SECTION_END
;

208 *
equÆ
 = 
	`°rchr
(
löe
, '=');

209 i‡(
equÆ
) {

210 i‡(!
	`∑r£_löe
(
löe
, 
l
, 
equÆ
)) {

211 
	`c⁄fig_îr‹
(
c⁄f
, "Malformed key=valueÜine");

212  
Ál£
;

215 
	`c⁄fig_îr‹
(
c⁄f
, "Expecting section or key=value");

216  
Ál£
;

220  
åue
;

221 
	}
}

223 
boﬁ
 
	$c⁄fig_›í
(
c⁄fig_t
 *
c⁄f
, c⁄° *
∑th
)

225 i‡(!
c⁄f
)

226  
Ál£
;

227 i‡(!
∑th
)

228  
Ál£
;

229 
c⁄f
->
fûe
 = 
	`f›í
(
∑th
, "r");

230 i‡(!
c⁄f
->
fûe
)

231  
Ál£
;

232 
c⁄f
->
löe
 = 0;

233 
c⁄f
->
îr‹_mesßge
 = 
NULL
;

234  
åue
;

235 
	}
}

237 
	$c⁄fig_˛o£
(
c⁄fig_t
 *
c⁄f
)

239 i‡(!
c⁄f
)

241 i‡(!
c⁄f
->
fûe
)

243 
	`f˛o£
(
c⁄f
->
fûe
Ë=
EOF
) {

244 i‡(
î∫o
 !
EINTR
) {

245 
	`lw™_°©us_≥º‹
("CouldÇot close config file");

249 
	`‰ì
(
c⁄f
->
îr‹_mesßge
);

250 
	}
}

	@common/lwan-config.h

20 #i‚de‡
__LWAN_CONFIG_H__


21 
	#__LWAN_CONFIG_H__


	)

23 
	#ONE_MINUTE
 60

	)

24 
	#ONE_HOUR
 (
ONE_MINUTE
 * 60)

	)

25 
	#ONE_DAY
 (
ONE_HOUR
 * 24)

	)

26 
	#ONE_WEEK
 (
ONE_DAY
 * 7)

	)

27 
	#ONE_MONTH
 (
ONE_DAY
 * 31)

	)

28 
	#ONE_YEAR
 (
ONE_MONTH
 * 12)

	)

30 
	~<°dio.h
>

31 
	~<°dboﬁ.h
>

33 
c⁄fig_t_
 
	tc⁄fig_t
;

34 
c⁄fig_löe_t_
 
	tc⁄fig_löe_t
;

37 
	mCONFIG_LINE_TYPE_LINE
,

38 
	mCONFIG_LINE_TYPE_SECTION
,

39 
	mCONFIG_LINE_TYPE_SECTION_END


40 } 
	tc⁄fig_löe_ty≥_t
;

42 
	sc⁄fig_t_
 {

43 
FILE
 *
	mfûe
;

44 
	mlöe
;

45 *
	mîr‹_mesßge
;

48 
	sc⁄fig_löe_t_
 {

51 *
	m«me
, *
	m∑øm
;

52 } 
	m£˘i⁄
;

54 *
	mkey
, *
	mvÆue
;

55 } 
	mlöe
;

57 
c⁄fig_löe_ty≥_t
 
	mty≥
;

58 
	mbuf„r
[1024];

61 
boﬁ
 
c⁄fig_›í
(
c⁄fig_t
 *
c⁄f
, c⁄° *
∑th
);

62 
c⁄fig_˛o£
(
c⁄fig_t
 *
c⁄f
);

63 
boﬁ
 
c⁄fig_îr‹
(
c⁄fig_t
 *
c⁄f
, c⁄° *
fmt
, ...);

64 
boﬁ
 
c⁄fig_ªad_löe
(
c⁄fig_t
 *
c⁄f
, 
c⁄fig_löe_t
 *
l
);

66 
boﬁ
 
∑r£_boﬁ
(c⁄° *
vÆue
, boﬁ 
deÁu…_vÆue
);

67 
∑r£_l⁄g
(c⁄° *
vÆue
, 
deÁu…_vÆue
);

68 
∑r£_time_≥riod
(c⁄° *
°r
, 
deÁu…_vÆue
);

	@common/lwan-coro.c

20 
	#_GNU_SOURCE


	)

21 
	~<as£π.h
>

22 
	~<limôs.h
>

23 
	~<°d¨g.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 
	~"lw™.h
"

29 
	~"lw™-c‹o.h
"

31 #ifde‡
USE_VALGRIND


32 
	~<vÆgröd/vÆgröd.h
>

35 
	#CORO_STACK_MIN
 ((3 * (
PTHREAD_STACK_MIN
)Ë/ 2)

	)

37 
°©ic_as£π
(
DEFAULT_BUFFER_SIZE
 < (
CORO_STACK_MIN
 + 
PTHREAD_STACK_MIN
),

40 
c‹o_de„r_t_
 
	tc‹o_de„r_t
;

42 
	sc‹o_de„r_t_
 {

43 
c‹o_de„r_t
 *
	m√xt
;

44 (*
	mfunc
)();

45 *
	md©a1
;

46 *
	md©a2
;

49 
	sc‹o_t_
 {

50 
c‹o_swôchî_t
 *
	mswôchî
;

51 
c‹o_c⁄ãxt_t
 
	mc⁄ãxt
;

52 
	myõld_vÆue
;

54 #i‡!
deföed
(
NDEBUG
Ë&& deföed(
USE_VALGRIND
)

55 
	mvg_°ack_id
;

58 
c‹o_de„r_t
 *
	mde„r
;

59 *
	md©a
;

61 
boﬁ
 
	míded
;

64 
c‹o_íåy_poöt
(
c‹o_t
 *
d©a
, 
c‹o_fun˘i⁄_t
 
func
);

76 #i‡
deföed
(
__x86_64__
)

77 
	$c‹o_sw≠c⁄ãxt
(
c‹o_c⁄ãxt_t
 *
cuºít
, c‹o_c⁄ãxt_à*
Ÿhî
)

78 
	`__©åibuã__
((
noölöe
));

79 
	`asm
(

107 #ñi‡
	`deföed
(
__i386__
)

108 
	$c‹o_sw≠c⁄ãxt
(
c‹o_c⁄ãxt_t
 *
cuºít
, c‹o_c⁄ãxt_à*
Ÿhî
)

109 
	`__©åibuã__
((
noölöe
));

110 
	`asm
(

136 
	#c‹o_sw≠c⁄ãxt
(
cur
,
Ÿh
Ë
	`sw≠c⁄ãxt
(cur, oth)

	)

140 
	$c‹o_íåy_poöt
(
c‹o_t
 *
c‹o
, 
c‹o_fun˘i⁄_t
 
func
)

142 
ªtu∫_vÆue
 = 
	`func
(
c‹o
);

143 
c‹o
->
íded
 = 
åue
;

144 
	`c‹o_yõld
(
c‹o
, 
ªtu∫_vÆue
);

145 
	}
}

148 
	$c‹o_run_de„ºed
(
c‹o_t
 *
c‹o
)

150 
c‹o_de„r_t
 *
de„r
 = 
c‹o
->defer; defer;) {

151 
c‹o_de„r_t
 *
tmp
 = 
de„r
;

152 
de„r
->
	`func
(de„r->
d©a1
, de„r->
d©a2
);

153 
de„r
 = 
tmp
->
√xt
;

154 
	`‰ì
(
tmp
);

156 
c‹o
->
de„r
 = 
NULL
;

157 
	}
}

160 
	$c‹o_ª£t
(
c‹o_t
 *
c‹o
, 
c‹o_fun˘i⁄_t
 
func
, *
d©a
)

162 *
°ack
 = (*)(
c‹o
 + 1);

164 
c‹o
->
íded
 = 
Ál£
;

165 
c‹o
->
d©a
 = data;

167 
	`c‹o_run_de„ºed
(
c‹o
);

169 #i‡
	`deföed
(
__x86_64__
)

170 
c‹o
->
c⁄ãxt
[6 ] = (
uöçå_t
) coro;

171 
c‹o
->
c⁄ãxt
[7 ] = (
uöçå_t
Ë
func
;

172 
c‹o
->
c⁄ãxt
[8 ] = (
uöçå_t
Ë
c‹o_íåy_poöt
;

173 
c‹o
->
c⁄ãxt
[9 ] = (
uöçå_t
Ë
°ack
 + 
CORO_STACK_MIN
;

174 #ñi‡
	`deföed
(
__i386__
)

176 
°ack
 = (*)((
uöçå_t
)(°ack + 
CORO_STACK_MIN
 -

177 (
uöçå_t
) * 2) & 0xfffffff0);

179 
uöçå_t
 *
¨gp
 = (uöçå_à*)
°ack
;

180 *
¨gp
++ = 0;

181 *
¨gp
++ = (
uöçå_t
)
c‹o
;

182 *
¨gp
++ = (
uöçå_t
)
func
;

184 
c‹o
->
c⁄ãxt
[5 ] = (
uöçå_t
Ë
c‹o_íåy_poöt
;

185 
c‹o
->
c⁄ãxt
[6 ] = (
uöçå_t
Ë
°ack
;

187 
	`gëc⁄ãxt
(&
c‹o
->
c⁄ãxt
);

189 
c‹o
->
c⁄ãxt
.
uc_°ack
.
ss_•
 = 
°ack
;

190 
c‹o
->
c⁄ãxt
.
uc_°ack
.
ss_size
 = 
CORO_STACK_MIN
;

191 
c‹o
->
c⁄ãxt
.
uc_°ack
.
ss_Êags
 = 0;

192 
c‹o
->
c⁄ãxt
.
uc_lök
 = 
NULL
;

194 
	`makec⁄ãxt
(&
c‹o
->
c⁄ãxt
, ((*)())
c‹o_íåy_poöt
, 2, c‹o, 
func
);

196 
	}
}

198 
ALWAYS_INLINE
 
c‹o_t
 *

199 
	$c‹o_√w
(
c‹o_swôchî_t
 *
swôchî
, 
c‹o_fun˘i⁄_t
 
fun˘i⁄
, *
d©a
)

201 
c‹o_t
 *
c‹o
 = 
	`mÆloc
((*c‹oË+ 
CORO_STACK_MIN
);

202 i‡(!
c‹o
)

203  
NULL
;

205 
c‹o
->
swôchî
 = switcher;

206 
c‹o
->
de„r
 = 
NULL
;

207 
	`c‹o_ª£t
(
c‹o
, 
fun˘i⁄
, 
d©a
);

209 #i‡!
	`deföed
(
NDEBUG
Ë&& deföed(
USE_VALGRIND
)

210 *
°ack
 = (*)(
c‹o
 + 1);

211 
c‹o
->
vg_°ack_id
 = 
	`VALGRIND_STACK_REGISTER
(
°ack
, sèck + 
CORO_STACK_MIN
);

214  
c‹o
;

215 
	}
}

217 
ALWAYS_INLINE
 *

218 
	$c‹o_gë_d©a
(
c‹o_t
 *
c‹o
)

220  
	`LIKELY
(
c‹o
Ë? c‹o->
d©a
 : 
NULL
;

221 
	}
}

223 
ALWAYS_INLINE
 

224 
	$c‹o_ªsume
(
c‹o_t
 *
c‹o
)

226 
	`as£π
(
c‹o
);

227 
	`as£π
(
c‹o
->
íded
 =
Ál£
);

229 #i‡
	`deföed
(
__x86_64__
Ë|| deföed(
__i386__
)

230 
	`c‹o_sw≠c⁄ãxt
(&
c‹o
->
swôchî
->
ˇŒî
, &c‹o->
c⁄ãxt
);

231 i‡(!
c‹o
->
íded
)

232 
	`mem˝y
(&
c‹o
->
c⁄ãxt
, &c‹o->
swôchî
->
ˇŒì
,

233 (
c‹o
->
c⁄ãxt
));

235 
c‹o_c⁄ãxt_t
 
¥ev_ˇŒî
;

237 
	`mem˝y
(&
¥ev_ˇŒî
, &
c‹o
->
swôchî
->
ˇŒî
, (prev_caller));

238 
	`c‹o_sw≠c⁄ãxt
(&
c‹o
->
swôchî
->
ˇŒî
, &c‹o->
c⁄ãxt
);

239 i‡(!
c‹o
->
íded
) {

240 
	`mem˝y
(&
c‹o
->
c⁄ãxt
, &c‹o->
swôchî
->
ˇŒì
,

241 (
c‹o
->
c⁄ãxt
));

242 
	`mem˝y
(&
c‹o
->
swôchî
->
ˇŒî
, &
¥ev_ˇŒî
,

243 (
c‹o
->
swôchî
->
ˇŒî
));

247  
c‹o
->
yõld_vÆue
;

248 
	}
}

250 
ALWAYS_INLINE
 

251 
	$c‹o_ªsume_vÆue
(
c‹o_t
 *
c‹o
, 
vÆue
)

253 
	`as£π
(
c‹o
);

254 
	`as£π
(
c‹o
->
íded
 =
Ál£
);

256 
c‹o
->
yõld_vÆue
 = 
vÆue
;

257  
	`c‹o_ªsume
(
c‹o
);

258 
	}
}

260 
ALWAYS_INLINE
 

261 
	$c‹o_yõld
(
c‹o_t
 *
c‹o
, 
vÆue
)

263 
	`as£π
(
c‹o
);

264 
c‹o
->
yõld_vÆue
 = 
vÆue
;

265 
	`c‹o_sw≠c⁄ãxt
(&
c‹o
->
swôchî
->
ˇŒì
, &c‹o->swôchî->
ˇŒî
);

266  
c‹o
->
yõld_vÆue
;

267 
	}
}

270 
	$c‹o_‰ì
(
c‹o_t
 *
c‹o
)

272 
	`as£π
(
c‹o
);

273 #i‡!
	`deföed
(
NDEBUG
Ë&& deföed(
USE_VALGRIND
)

274 
	`VALGRIND_STACK_DEREGISTER
(
c‹o
->
vg_°ack_id
);

276 
	`c‹o_run_de„ºed
(
c‹o
);

277 
	`‰ì
(
c‹o
);

278 
	}
}

281 
c‹o_de„r_™y
(
c‹o_t
 *
c‹o
, (*
func
)(), *
d©a1
, *
d©a2
)

283 
c‹o_de„r_t
 *
	gde„r
 = 
mÆloc
((*
de„r
));

284 i‡(
UNLIKELY
(!
de„r
))

287 
as£π
(
func
);

290 
	gde„r
->
	g√xt
 = 
c‹o
->
de„r
;

291 
	gde„r
->
	gfunc
 = 
func
;

292 
	gde„r
->
	gd©a1
 = 
d©a1
;

293 
	gde„r
->
	gd©a2
 = 
d©a2
;

294 
	gc‹o
->
	gde„r
 = 
de„r
;

297 
ALWAYS_INLINE
 

298 
c‹o_de„r
(
c‹o_t
 *
c‹o
, (*
func
)(*
d©a
), *data)

300 
	`c‹o_de„r_™y
(
c‹o
, 
func
, 
d©a
, 
NULL
);

301 
	}
}

303 
ALWAYS_INLINE
 

304 
c‹o_de„r2
(
c‹o_t
 *
c‹o
, (*
func
)(*
d©a1
, *
d©a2
),

305 *
d©a1
, *
d©a2
)

307 
	`c‹o_de„r_™y
(
c‹o
, 
func
, 
d©a1
, 
d©a2
);

308 
	}
}

311 
c‹o_mÆloc_fuŒ
(
c‹o_t
 *
c‹o
, 
size_t
 
size
, (*
de°roy_func
)())

313 
c‹o_de„r_t
 *
de„r
 = 
	`mÆloc
((*de„rË+ 
size
);

314 i‡(
	`UNLIKELY
(!
de„r
))

315  
NULL
;

317 
de„r
->
√xt
 = 
c‹o
->defer;

318 
de„r
->
func
 = 
de°roy_func
;

319 
de„r
->
d©a1
 = defer + 1;

320 
de„r
->
d©a2
 = 
NULL
;

322 
c‹o
->
de„r
 = defer;

324  
de„r
 + 1;

325 
	}
}

327 
	$nŸhög
()

329 
	}
}

331 
ölöe
 *

332 
	$c‹o_mÆloc
(
c‹o_t
 *
c‹o
, 
size_t
 
size
)

334  
	`c‹o_mÆloc_fuŒ
(
c‹o
, 
size
, 
nŸhög
);

335 
	}
}

338 
	$c‹o_°rdup
(
c‹o_t
 *
c‹o
, c⁄° *
°r
)

340 
size_t
 
Àn
 = 
	`°æí
(
°r
) + 1;

341 *
dup
 = 
	`c‹o_mÆloc
(
c‹o
, 
Àn
);

342 i‡(
	`LIKELY
(
dup
))

343 
	`mem˝y
(
dup
, 
°r
, 
Àn
);

344  
dup
;

345 
	}
}

348 
	$c‹o_¥ötf
(
c‹o_t
 *
c‹o
, c⁄° *
fmt
, ...)

350 
va_li°
 
vÆues
;

351 
Àn
;

352 *
tmp_°r
;

354 
	`va_°¨t
(
vÆues
, 
fmt
);

355 
Àn
 = 
	`va•rötf
(&
tmp_°r
, 
fmt
, 
vÆues
);

356 
	`va_íd
(
vÆues
);

358 i‡(
	`UNLIKELY
(
Àn
 < 0))

359  
NULL
;

361 
	`c‹o_de„r
(
c‹o
, 
	`CORO_DEFER
(
‰ì
), 
tmp_°r
);

362  
tmp_°r
;

363 
	}
}

	@common/lwan-coro.h

20 #i‚de‡
__LWAN_CORO_H__


21 
	#__LWAN_CORO_H__


	)

23 
	~<°ddef.h
>

24 #i‡
deföed
(
__x86_64__
)

25 
	~<°döt.h
>

26 
uöçå_t
 
	tc‹o_c⁄ãxt_t
[10];

27 #ñi‡
deföed
(
__i386__
)

28 
	~<°döt.h
>

29 
uöçå_t
 
	tc‹o_c⁄ãxt_t
[7];

31 
	~<uc⁄ãxt.h
>

32 
uc⁄ãxt_t
 
	tc‹o_c⁄ãxt_t
;

35 
c‹o_t_
 
	tc‹o_t
;

36 
c‹o_swôchî_t_
 
	tc‹o_swôchî_t
;

38 (*
	tc‹o_fun˘i⁄_t
Ë(
	tc‹o_t
 *
	tc‹o
);

40 
	sc‹o_swôchî_t_
 {

41 
c‹o_c⁄ãxt_t
 
ˇŒî
;

42 
c‹o_c⁄ãxt_t
 
ˇŒì
;

45 
c‹o_t
 *
	`c‹o_√w
(
c‹o_swôchî_t
 *
swôchî
, 
c‹o_fun˘i⁄_t
 
fun˘i⁄
, *
d©a
);

46 
	`c‹o_‰ì
(
c‹o_t
 *
c‹o
);

48 
	`c‹o_ª£t
(
c‹o_t
 *
c‹o
, 
c‹o_fun˘i⁄_t
 
func
, *
d©a
);

50 
	`c‹o_ªsume
(
c‹o_t
 *
c‹o
);

51 
	`c‹o_ªsume_vÆue
(
c‹o_t
 *
c‹o
, 
vÆue
);

52 
	`c‹o_yõld
(
c‹o_t
 *
c‹o
, 
vÆue
);

54 *
	`c‹o_gë_d©a
(
c‹o_t
 *
c‹o
);

56 
	`c‹o_de„r
(
c‹o_t
 *
c‹o
, (*
func
)(*
d©a
), *data);

57 
	`c‹o_de„r2
(
c‹o_t
 *
c‹o
, (*
func
)(*
d©a1
, *
d©a2
),

58 *
d©a1
, *
d©a2
);

59 *
	`c‹o_mÆloc
(
c‹o_t
 *
c‹o
, 
size_t
 
sz
);

60 *
	`c‹o_mÆloc_fuŒ
(
c‹o_t
 *
c‹o
, 
size_t
 
size
, (*
de°roy_func
)());

61 *
	`c‹o_°rdup
(
c‹o_t
 *
c‹o
, c⁄° *
°r
);

62 *
	`c‹o_¥ötf
(
c‹o_t
 *
c‹o
, c⁄° *
fmt
, ...);

64 
	#CORO_DEFER
(
‚
Ë(((*)(*))(‚))

	)

65 
	#CORO_DEFER2
(
‚
Ë(((*)(*, *))(‚))

	)

	@common/lwan-http-authorize.c

20 
	~<î∫o.h
>

21 
	~<°dboﬁ.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

25 
	~"ba£64.h
"

26 
	~"lw™-ˇche.h
"

27 
	~"lw™-c⁄fig.h
"

28 
	~"lw™-hâp-auth‹ize.h
"

30 
	sªÆm_∑ssw‹d_fûe_t
 {

31 
ˇche_íåy_t
 
	mba£
;

32 
hash
 *
	míåõs
;

35 
ˇche_t
 *
	gªÆm_∑ssw‹d_ˇche
 = 
NULL
;

37 
	$fouπy_two_™d_‰ì
(*
°r
)

39 i‡(
	`LIKELY
(
°r
)) {

40 *
s
 = 
°r
;

41 *
s
)

42 *
s
++ = 42;

43 
	`‰ì
(
°r
);

45 
	}
}

47 
ˇche_íåy_t
 *
¸óã_ªÆm_fûe
(

48 c⁄° *
key
,

49 *
c⁄ãxt
 
__©åibuã__
((
unu£d
)))

51 
ªÆm_∑ssw‹d_fûe_t
 *
	gΩf
 = 
mÆloc
((*
Ωf
));

52 
c⁄fig_t
 
	gf
;

53 
c⁄fig_löe_t
 
	gl
;

55 i‡(
UNLIKELY
(!
Ωf
))

56  
	gNULL
;

58 
	gΩf
->
	gíåõs
 = 
hash_°r_√w
(
fouπy_two_™d_‰ì
, fourty_two_and_free);

59 i‡(
UNLIKELY
(!
Ωf
->
íåõs
))

60 
	gîr‹_no_˛o£
;

62 i‡(!
c⁄fig_›í
(&
f
, 
key
))

63 
	gîr‹_no_˛o£
;

65 
c⁄fig_ªad_löe
(&
f
, &
l
)) {

67 
	gl
.
	gty≥
) {

68 
	gCONFIG_LINE_TYPE_LINE
: {

69 *
u£∫ame
 = 
°rdup
(
l
.
löe
.
key
);

70 i‡(!
	gu£∫ame
)

71 
	gîr‹
;

73 *
	g∑ssw‹d
 = 
°rdup
(
l
.
löe
.
vÆue
);

74 i‡(!
	g∑ssw‹d
) {

75 
‰ì
(
u£∫ame
);

76 
	gîr‹
;

79 
	gîr
 = 
hash_add_unique
(
Ωf
->
íåõs
, 
u£∫ame
, 
∑ssw‹d
);

80 i‡(
LIKELY
(!
îr
))

83 
‰ì
(
u£∫ame
);

84 
‰ì
(
∑ssw‹d
);

86 i‡(
	gîr
 =-
EEXIST
) {

87 
lw™_°©us_w¨nög
(

89 
l
.
löe
.
key
);

93 
	gîr‹
;

96 
c⁄fig_îr‹
(&
f
, "Expected username =Öassword");

101 i‡(
	gf
.
	gîr‹_mesßge
) {

102 
lw™_°©us_îr‹
("Error onÖassword file \"%s\",Üine %d: %s",

103 
key
, 
f
.
löe
, f.
îr‹_mesßge
);

104 
	gîr‹
;

107 
c⁄fig_˛o£
(&
f
);

108  (
	gˇche_íåy_t
 *)
	gΩf
;

110 
	gîr‹
:

111 
c⁄fig_˛o£
(&
f
);

112 
	gîr‹_no_˛o£
:

113 
hash_‰ì
(
Ωf
->
íåõs
);

114 
‰ì
(
Ωf
);

115  
	gNULL
;

118 
de°roy_ªÆm_fûe
(
ˇche_íåy_t
 *
íåy
,

119 *
c⁄ãxt
 
__©åibuã__
((
unu£d
)))

121 
ªÆm_∑ssw‹d_fûe_t
 *
	gΩf
 = (ªÆm_∑ssw‹d_fûe_à*)
íåy
;

122 
hash_‰ì
(
Ωf
->
íåõs
);

123 
‰ì
(
Ωf
);

126 
boﬁ


127 
	$lw™_hâp_auth‹ize_öô
()

129 
ªÆm_∑ssw‹d_ˇche
 = 
	`ˇche_¸óã
(
¸óã_ªÆm_fûe
,

130 
de°roy_ªÆm_fûe
, 
NULL
, 60);

132  !!
ªÆm_∑ssw‹d_ˇche
;

133 
	}
}

136 
	$lw™_hâp_auth‹ize_shutdown
()

138 
	`ˇche_de°roy
(
ªÆm_∑ssw‹d_ˇche
);

139 
	}
}

141 
boﬁ


142 
	$auth‹ize
(
c‹o_t
 *
c‹o
,

143 
lw™_vÆue_t
 *
auth‹iz©i⁄
,

144 c⁄° *
∑ssw‹d_fûe
)

146 
ªÆm_∑ssw‹d_fûe_t
 *
Ωf
;

147 *
decoded
;

148 *
cﬁ⁄
;

149 *
∑ssw‹d
;

150 *
looked_∑ssw‹d
;

151 
size_t
 
decoded_Àn
;

152 
boﬁ
 
∑ssw‹d_ok
 = 
Ál£
;

154 
Ωf
 = (
ªÆm_∑ssw‹d_fûe_t
 *)
	`ˇche_c‹o_gë_™d_ªf_íåy
(

155 
ªÆm_∑ssw‹d_ˇche
, 
c‹o
, 
∑ssw‹d_fûe
);

156 i‡(
	`UNLIKELY
(!
Ωf
))

157  
Ál£
;

159 
decoded
 = 
	`ba£64_decode
((*)
auth‹iz©i⁄
->
vÆue
,

160 
auth‹iz©i⁄
->
Àn
, &
decoded_Àn
);

161 i‡(
	`UNLIKELY
(!
decoded
))

162  
Ál£
;

164 i‡(
	`UNLIKELY
(
decoded_Àn
 >(((
c⁄fig_löe_t
 *)0)->
buf„r
)))

165 
out
;

167 
cﬁ⁄
 = 
	`memchr
(
decoded
, ':', 
decoded_Àn
);

168 i‡(
	`UNLIKELY
(!
cﬁ⁄
))

169 
out
;

171 *
cﬁ⁄
 = '\0';

172 
∑ssw‹d
 = 
cﬁ⁄
 + 1;

174 
looked_∑ssw‹d
 = 
	`hash_föd
(
Ωf
->
íåõs
, 
decoded
);

175 i‡(
looked_∑ssw‹d
)

176 
∑ssw‹d_ok
 = !
	`°rcmp
(
∑ssw‹d
, 
looked_∑ssw‹d
);

178 
out
:

179 
	`‰ì
(
decoded
);

180  
∑ssw‹d_ok
;

181 
	}
}

183 
boﬁ


184 
	$lw™_hâp_auth‹ize
(
lw™_ªque°_t
 *
ªque°
,

185 
lw™_vÆue_t
 *
auth‹iz©i⁄
,

186 c⁄° *
ªÆm
,

187 c⁄° *
∑ssw‹d_fûe
)

189 c⁄° 
authítiˇã_tm∂
[] = "BasicÑealm=\"%s\"";

190 c⁄° 
size_t
 
basic_Àn
 = ("Basic ") - 1;

191 
lw™_key_vÆue_t
 *
hódîs
;

193 i‡(!
auth‹iz©i⁄
->
vÆue
)

194 
u«uth‹ized
;

196 i‡(
	`UNLIKELY
(
	`°∫cmp
(
auth‹iz©i⁄
->
vÆue
, "Basi¯", 
basic_Àn
)))

197 
u«uth‹ized
;

199 
auth‹iz©i⁄
->
vÆue
 +
basic_Àn
;

200 
auth‹iz©i⁄
->
Àn
 -
basic_Àn
;

202 i‡(
	`auth‹ize
(
ªque°
->
c⁄n
->
c‹o
, 
auth‹iz©i⁄
, 
∑ssw‹d_fûe
))

203  
åue
;

205 
u«uth‹ized
:

206 
hódîs
 = 
	`c‹o_mÆloc
(
ªque°
->
c⁄n
->
c‹o
, 2 * (*headers));

207 
hódîs
[0].
key
 = "WWW-Authenticate";

208 
hódîs
[0].
vÆue
 = 
	`c‹o_¥ötf
(
ªque°
->
c⁄n
->
c‹o
,

209 
authítiˇã_tm∂
, 
ªÆm
);

210 
hódîs
[1].
key
 = hódîs[1].
vÆue
 = 
NULL
;

212 
ªque°
->
ª•⁄£
.
hódîs
 = headers;

213  
Ál£
;

214 
	}
}

	@common/lwan-http-authorize.h

20 #i‚de‡
LWAN_HTTP_AUTHORIZE_H


21 
	#LWAN_HTTP_AUTHORIZE_H


	)

23 
	~"lw™.h
"

25 
boﬁ
 
lw™_hâp_auth‹ize_öô
();

26 
lw™_hâp_auth‹ize_shutdown
();

28 
boﬁ


29 
lw™_hâp_auth‹ize
(
lw™_ªque°_t
 *
ªque°
,

30 
lw™_vÆue_t
 *
auth‹iz©i⁄
,

31 c⁄° *
ªÆm
,

32 c⁄° *
∑ssw‹d_fûe
);

	@common/lwan-io-wrappers.c

20 
	~<as£π.h
>

21 
	~<î∫o.h
>

22 
	~<f˙é.h
>

23 
	~<uni°d.h
>

24 
	~<sys/£ndfûe.h
>

26 
	~"lw™.h
"

27 
	~"lw™-io-wøµîs.h
"

29 c⁄° 
	gMAX_FAILED_TRIES
 = 5;

30 c⁄° 
size_t
 
	gBUFFER_SIZE
 = 1400;

33 
	$lw™_›í©
(
lw™_ªque°_t
 *
ªque°
,

34 
dúfd
, c⁄° *
∑th«me
, 
Êags
)

36 
åõs
 = 
MAX_FAILED_TRIES
;Åries;Åries--) {

37 
fd
 = 
	`›í©
(
dúfd
, 
∑th«me
, 
Êags
);

38 i‡(
	`LIKELY
(
fd
 >= 0)) {

39 
	`c‹o_de„r
(
ªque°
->
c⁄n
->
c‹o
, 
	`CORO_DEFER
(
˛o£
), (*)(
öçå_t
)
fd
);

40  
fd
;

43 
î∫o
) {

44 
EINTR
:

45 
EMFILE
:

46 
ENFILE
:

47 
ENOMEM
:

48 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_MAY_RESUME
);

51  -
î∫o
;

55  -
ENFILE
;

56 
	}
}

58 
ssize_t


59 
	$lw™_wrôev
(
lw™_ªque°_t
 *
ªque°
, 
iovec
 *
iov
, 
iov_cou¡
)

61 
ssize_t
 
tŸÆ_wrôãn
 = 0;

62 
cuº_iov
 = 0;

64 
åõs
 = 
MAX_FAILED_TRIES
;Åries;) {

65 
ssize_t
 
wrôãn
 = 
	`wrôev
(
ªque°
->
fd
, 
iov
 + 
cuº_iov
, 
iov_cou¡
 - curr_iov);

66 i‡(
	`UNLIKELY
(
wrôãn
 < 0)) {

68 
åõs
--;

70 
î∫o
) {

71 
EAGAIN
:

72 
EINTR
:

73 
åy_agaö
;

75 
out
;

79 
tŸÆ_wrôãn
 +
wrôãn
;

81 
wrôãn
 >(
ssize_t
)
iov
[
cuº_iov
].
iov_Àn
)

82 
wrôãn
 -(
ssize_t
)
iov
[
cuº_iov
++].
iov_Àn
;

84 i‡(
cuº_iov
 =
iov_cou¡
)

85  
tŸÆ_wrôãn
;

87 
iov
[
cuº_iov
].
iov_ba£
 = (*)iov[cuº_iov].iov_ba£ + 
wrôãn
;

88 
iov
[
cuº_iov
].
iov_Àn
 -(
size_t
)
wrôãn
;

90 
åy_agaö
:

91 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_MAY_RESUME
);

94 
out
:

95 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_ABORT
);

96 
	`__buûtö_uƒóchabÀ
();

97 
	}
}

99 
ssize_t


100 
	$lw™_wrôe
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
buf
, 
size_t
 
cou¡
)

102 
ssize_t
 
tŸÆ_wrôãn
 = 0;

104 
åõs
 = 
MAX_FAILED_TRIES
;Åries;) {

105 
ssize_t
 
wrôãn
 = 
	`wrôe
(
ªque°
->
fd
, 
buf
, 
cou¡
);

106 i‡(
	`UNLIKELY
(
wrôãn
 < 0)) {

107 
åõs
--;

109 
î∫o
) {

110 
EAGAIN
:

111 
EINTR
:

112 
åy_agaö
;

114 
out
;

118 
tŸÆ_wrôãn
 +
wrôãn
;

119 i‡((
size_t
)
tŸÆ_wrôãn
 =
cou¡
)

120  
tŸÆ_wrôãn
;

121 i‡((
size_t
)
tŸÆ_wrôãn
 < 
cou¡
)

122 
buf
 = (*)bu‡+ 
wrôãn
;

124 
åy_agaö
:

125 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_MAY_RESUME
);

128 
out
:

129 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_ABORT
);

130 
	`__buûtö_uƒóchabÀ
();

131 
	}
}

133 
ssize_t


134 
	$lw™_£nd
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
buf
, 
size_t
 
cou¡
, 
Êags
)

136 
ssize_t
 
tŸÆ_£¡
 = 0;

138 
åõs
 = 
MAX_FAILED_TRIES
;Åries;) {

139 
ssize_t
 
wrôãn
 = 
	`£nd
(
ªque°
->
fd
, 
buf
, 
cou¡
, 
Êags
);

140 i‡(
	`UNLIKELY
(
wrôãn
 < 0)) {

141 
åõs
--;

143 
î∫o
) {

144 
EAGAIN
:

145 
EINTR
:

146 
åy_agaö
;

148 
out
;

152 
tŸÆ_£¡
 +
wrôãn
;

153 i‡((
size_t
)
tŸÆ_£¡
 =
cou¡
)

154  
tŸÆ_£¡
;

155 i‡((
size_t
)
tŸÆ_£¡
 < 
cou¡
)

156 
buf
 = (*)bu‡+ 
wrôãn
;

158 
åy_agaö
:

159 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_MAY_RESUME
);

162 
out
:

163 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_ABORT
);

164 
	`__buûtö_uƒóchabÀ
();

165 
	}
}

167 
ALWAYS_INLINE
 
ssize_t


168 
	$£ndfûe_ªad_wrôe
(
c‹o_t
 *
c‹o
, 
ö_fd
, 
out_fd
, 
off_t
 
off£t
, 
size_t
 
cou¡
)

171 
ssize_t
 
tŸÆ_byãs_wrôãn
 = 0;

174 *
buf„r
 = 
	`c‹o_mÆloc
(
c‹o
, 
BUFFER_SIZE
);

176 i‡(
off£t
 && 
	`l£ek
(
ö_fd
, off£t, 
SEEK_SET
) < 0) {

177 
	`lw™_°©us_≥º‹
("lseek");

181 
cou¡
 > 0) {

182 
ssize_t
 
ªad_byãs
 = 
	`ªad
(
ö_fd
, 
buf„r
, 
BUFFER_SIZE
);

183 i‡(
ªad_byãs
 < 0) {

184 
	`c‹o_yõld
(
c‹o
, 
CONN_CORO_ABORT
);

185 
	`__buûtö_uƒóchabÀ
();

188 
ssize_t
 
byãs_wrôãn
 = 
	`wrôe
(
out_fd
, 
buf„r
, (
size_t
)
ªad_byãs
);

189 i‡(
byãs_wrôãn
 < 0) {

190 
	`c‹o_yõld
(
c‹o
, 
CONN_CORO_ABORT
);

191 
	`__buûtö_uƒóchabÀ
();

194 
tŸÆ_byãs_wrôãn
 +
byãs_wrôãn
;

195 
cou¡
 -(
size_t
)
byãs_wrôãn
;

196 
	`c‹o_yõld
(
c‹o
, 
CONN_CORO_MAY_RESUME
);

199  
tŸÆ_byãs_wrôãn
;

200 
	}
}

202 
ALWAYS_INLINE
 
ssize_t


203 
	$£ndfûe_löux_£ndfûe
(
c‹o_t
 *
c‹o
, 
ö_fd
, 
out_fd
, 
off_t
 
off£t
, 
size_t
 
cou¡
)

205 
size_t
 
tŸÆ_wrôãn
 = 0;

206 
size_t
 
to_be_wrôãn
 = 
cou¡
;

209 
ssize_t
 
wrôãn
 = 
	`£ndfûe
(
out_fd
, 
ö_fd
, &
off£t
, 
to_be_wrôãn
);

210 i‡(
wrôãn
 < 0) {

211 
î∫o
) {

212 
EAGAIN
:

213 
EINTR
:

214 
	`c‹o_yõld
(
c‹o
, 
CONN_CORO_MAY_RESUME
);

218 
	`c‹o_yõld
(
c‹o
, 
CONN_CORO_ABORT
);

219 
	`__buûtö_uƒóchabÀ
();

223 
tŸÆ_wrôãn
 +(
size_t
)
wrôãn
;

224 
to_be_wrôãn
 -(
size_t
)
wrôãn
;

226 
	`c‹o_yõld
(
c‹o
, 
CONN_CORO_MAY_RESUME
);

227 } 
to_be_wrôãn
 > 0);

229  (
ssize_t
)
tŸÆ_wrôãn
;

230 
	}
}

232 
ssize_t


233 
	$lw™_£ndfûe
(
lw™_ªque°_t
 *
ªque°
, 
ö_fd
, 
off_t
 
off£t
, 
size_t
 
cou¡
)

235 i‡(
cou¡
 > 
BUFFER_SIZE
 * 5) {

236 i‡(
	`UNLIKELY
(
	`posix_Ádvi£
(
ö_fd
, 
off£t
, (
off_t
)
cou¡
,

237 
POSIX_FADV_SEQUENTIAL
) < 0))

238 
	`lw™_°©us_≥º‹
("posix_fadvise");

241 
ssize_t
 
wrôãn_byãs
 = 
	`£ndfûe_löux_£ndfûe
(

242 
ªque°
->
c⁄n
->
c‹o
, 
ö_fd
,Ñeque°->
fd
, 
off£t
, 
cou¡
);

244 i‡(
	`UNLIKELY
(
wrôãn_byãs
 < 0)) {

245 
î∫o
) {

246 
ENOSYS
:

247 
EINVAL
:

248  
	`£ndfûe_ªad_wrôe
(
ªque°
->
c⁄n
->
c‹o
, 
ö_fd
,Ñeque°->
fd
, 
off£t
, 
cou¡
);

251  
wrôãn_byãs
;

252 
	}
}

	@common/lwan-io-wrappers.h

20 #i‚de‡
__LWAN_IO_WRAPPERS_H__


21 
	#__LWAN_IO_WRAPPERS_H__


	)

23 
	~<uni°d.h
>

24 
	~<sys/uio.h
>

26 
	~"lw™.h
"

28 
lw™_›í©
(
lw™_ªque°_t
 *
ªque°
, 
dúfd
, c⁄° *
∑th«me
,

29 
Êags
);

30 
ssize_t
 
lw™_wrôev
(
lw™_ªque°_t
 *
ªque°
, 
iovec
 *
iov
,

31 
iov˙t
);

32 
ssize_t
 
lw™_wrôe
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
buf„r
,

33 
size_t
 
cou¡
);

34 
ssize_t
 
lw™_£nd
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
buf
, 
size_t
 
cou¡
,

35 
Êags
);

36 
ssize_t
 
lw™_£ndfûe
(
lw™_ªque°_t
 *
ªque°
, 
ö_fd
,

37 
off_t
 
off£t
, 
size_t
 
cou¡
);

	@common/lwan-job.c

20 
	#_GNU_SOURCE


	)

21 
	~<as£π.h
>

22 
	~<î∫o.h
>

23 
	~<±hªad.h
>

24 
	~<sched.h
>

25 
	~<°dboﬁ.h
>

26 
	~<°dlib.h
>

27 
	~<uni°d.h
>

29 
	~"lw™.h
"

30 
	~"lw™-°©us.h
"

31 
	~"li°.h
"

33 
	sjob_t
 {

34 
li°_node
 
	mjobs
;

35 
boﬁ
 (*
cb
)(*
	md©a
);

36 *
	md©a
;

39 
±hªad_t
 
	g£lf
;

40 
±hªad_muãx_t
 
	gqueue_muãx
;

41 
boﬁ
 
	gru¬ög
 = 
Ál£
;

42 
li°_hód
 
	gjobs
;

45 
job_thªad
(*
d©a
 
__©åibuã__
((
unu£d
)))

47 
time•ec
 
	grgç
 = { 1, 0 };

49 
	gru¬ög
) {

50 
job_t
 *
	gjob
;

51 
boﬁ
 
	ghad_job
 = 
Ál£
;

53 
±hªad_muãx_lock
(&
queue_muãx
);

54 
li°_f‹_óch
(&
jobs
, 
job
, jobs)

55 
	ghad_job
 |
job
->
cb
(job->
d©a
);

56 
±hªad_muãx_u∆ock
(&
queue_muãx
);

58 i‡(
	ghad_job
)

59 
	grgç
.
	gtv_£c
 = 1;

60 i‡(
	grgç
.
	gtv_£c
 <= 15)

61 
rgç
.
tv_£c
++;

63 i‡(
UNLIKELY
(
«no¶ìp
(&
rgç
, 
NULL
) < 0)) {

64 i‡(
	gî∫o
 =
EINTR
)

65 
¶ìp
(1);

69  
	gNULL
;

72 
	$lw™_job_thªad_öô
()

74 
	`as£π
(!
ru¬ög
);

76 
	`lw™_°©us_debug
("InitializingÜowÖriority jobÅhread");

78 
	`li°_hód_öô
(&
jobs
);

80 
ru¬ög
 = 
åue
;

81 i‡(
	`±hªad_¸óã
(&
£lf
, 
NULL
, 
job_thªad
, NULL) < 0)

82 
	`lw™_°©us_¸ôiˇl_≥º‹
("pthread_create");

84 #ifde‡
SCHED_IDLE


85 
sched_∑øm
 sched_param = {

86 .
sched_¥i‹ôy
 = 0

88 i‡(
	`±hªad_£tsched∑øm
(
£lf
, 
SCHED_IDLE
, &
sched_∑øm
) < 0)

89 
	`lw™_°©us_≥º‹
("pthread_setschedparam");

91 
	}
}

93 
	$lw™_job_thªad_shutdown
()

95 
	`lw™_°©us_debug
("Shutting down jobÅhread");

97 
	`±hªad_muãx_lock
(&
queue_muãx
);

98 
job_t
 *
node
, *
√xt
;

99 
	`li°_f‹_óch_ß„
(&
jobs
, 
node
, 
√xt
, jobs) {

100 
	`li°_dñ
(&
node
->
jobs
);

101 
	`‰ì
(
node
);

103 
ru¬ög
 = 
Ál£
;

104 i‡(
	`±hªad_åyjoö_≈
(
£lf
, 
NULL
) < 0)

105 
	`lw™_°©us_¸ôiˇl_≥º‹
("pthread_join");

106 
	`±hªad_muãx_u∆ock
(&
queue_muãx
);

107 
	}
}

109 
lw™_job_add
(
	$boﬁ
 (*
cb
)(*
d©a
), *data)

111 
	`as£π
(
cb
);

113 
job_t
 *
job
 = 
	`ˇŒoc
(1, (*job));

114 i‡(!
job
)

115 
	`lw™_°©us_¸ôiˇl_≥º‹
("calloc");

117 
job
->
cb
 = cb;

118 
job
->
d©a
 = data;

120 
	`±hªad_muãx_lock
(&
queue_muãx
);

121 
	`li°_add
(&
jobs
, &
job
->jobs);

122 
	`±hªad_muãx_u∆ock
(&
queue_muãx
);

123 
	}
}

125 
lw™_job_dñ
(
	$boﬁ
 (*
cb
)(*
d©a
), *data)

127 
job_t
 *
node
, *
√xt
;

129 
	`as£π
(
cb
);

131 
	`±hªad_muãx_lock
(&
queue_muãx
);

132 
	`li°_f‹_óch_ß„
(&
jobs
, 
node
, 
√xt
, jobs) {

133 i‡(
cb
 =
node
->cb && 
d©a
 ==Çode->data) {

134 
	`li°_dñ
(&
node
->
jobs
);

135 
	`‰ì
(
node
);

138 
	`±hªad_muãx_u∆ock
(&
queue_muãx
);

139 
	}
}

	@common/lwan-lua.c

20 
	#_GNU_SOURCE


	)

21 
	~<˘y≥.h
>

22 
	~<œuxlib.h
>

23 
	~<lua.h
>

24 
	~<luÆib.h
>

25 
	~<±hªad.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

29 
	~"lw™.h
"

30 
	~"lw™-ˇche.h
"

31 
	~"lw™-c⁄fig.h
"

32 
	~"lw™-lua.h
"

34 c⁄° *
	gªque°_më©abÀ_«me
 = "Lwan.Request";

36 
	slw™_lua_¥iv_t
 {

37 *
	mdeÁu…_ty≥
;

38 *
	ms¸ùt_fûe
;

39 
±hªad_key_t
 
	mˇche_key
;

40 
	mˇche_≥riod
;

43 
	slw™_lua_°©e_t
 {

44 
ˇche_íåy_t
 
	mba£
;

45 
lua_Sèã
 *
	mL
;

48 
ALWAYS_INLINE
 
lw™_ªque°_t
 *
	$u£rd©a_as_ªque°
(
lua_Sèã
 *
L
, 
n
)

50  *((
lw™_ªque°_t
 **)
	`luaL_checkud©a
(
L
, 
n
, 
ªque°_më©abÀ_«me
));

51 
	}
}

53 
	$ªq_ßy_cb
(
lua_Sèã
 *
L
)

55 
lw™_ªque°_t
 *
ªque°
 = 
	`u£rd©a_as_ªque°
(
L
, 1);

56 
size_t
 
ª•⁄£_°r_Àn
;

57 c⁄° *
ª•⁄£_°r
 = 
	`lua_tﬁ°rög
(
L
, -1, &
ª•⁄£_°r_Àn
);

59 
	`°rbuf_£t_°©ic
(
ªque°
->
ª•⁄£
.
buf„r
, 
ª•⁄£_°r
, 
ª•⁄£_°r_Àn
);

60 
	`lw™_ª•⁄£_£nd_chunk
(
ªque°
);

63 
	}
}

65 
	$ªq_£nd_evít_cb
(
lua_Sèã
 *
L
)

67 
lw™_ªque°_t
 *
ªque°
 = 
	`u£rd©a_as_ªque°
(
L
, 1);

68 
size_t
 
evít_°r_Àn
;

69 c⁄° *
evít_°r
 = 
	`lua_tﬁ°rög
(
L
, -1, &
evít_°r_Àn
);

70 c⁄° *
evít_«me
 = 
	`lua_to°rög
(
L
, -2);

72 
	`°rbuf_£t_°©ic
(
ªque°
->
ª•⁄£
.
buf„r
, 
evít_°r
, 
evít_°r_Àn
);

73 
	`lw™_ª•⁄£_£nd_evít
(
ªque°
, 
evít_«me
);

76 
	}
}

78 
	$ªq_yõld_cb
(
lua_Sèã
 *
L
)

80  
	`lua_yõld
(
L
, 0);

81 
	}
}

83 
	$ªq_£t_ª•⁄£_cb
(
lua_Sèã
 *
L
)

85 
lw™_ªque°_t
 *
ªque°
 = 
	`u£rd©a_as_ªque°
(
L
, 1);

86 
size_t
 
ª•⁄£_°r_Àn
;

87 c⁄° *
ª•⁄£_°r
 = 
	`lua_tﬁ°rög
(
L
, -1, &
ª•⁄£_°r_Àn
);

89 
	`°rbuf_£t
(
ªque°
->
ª•⁄£
.
buf„r
, 
ª•⁄£_°r
, 
ª•⁄£_°r_Àn
);

92 
	}
}

94 
ªque°_∑øm_gëãr
(
lua_Sèã
 *
L
,

95 c⁄° *(*
gëãr
)(
lw™_ªque°_t
 *
ªq
, c⁄° *
key
))

97 
lw™_ªque°_t
 *
	gªque°
 = 
u£rd©a_as_ªque°
(
L
, 1);

98 c⁄° *
	gkey_°r
 = 
lua_to°rög
(
L
, -1);

100 c⁄° *
	gvÆue
 = 
gëãr
(
ªque°
, 
key_°r
);

101 i‡(!
	gvÆue
)

102 
lua_pushnû
(
L
);

104 
lua_push°rög
(
L
, 
vÆue
);

109 
	$ªq_quîy_∑øm_cb
(
lua_Sèã
 *
L
)

111  
	`ªque°_∑øm_gëãr
(
L
, 
lw™_ªque°_gë_quîy_∑øm
);

112 
	}
}

114 
	$ªq_po°_∑øm_cb
(
lua_Sèã
 *
L
)

116  
	`ªque°_∑øm_gëãr
(
L
, 
lw™_ªque°_gë_po°_∑øm
);

117 
	}
}

119 c⁄° 
luaL_ªg
 
	glw™_ªque°_mëa_ªgs
[] = {

120 { "quîy_∑øm", 
ªq_quîy_∑øm_cb
 },

121 { "po°_∑øm", 
ªq_po°_∑øm_cb
 },

122 { "yõld", 
ªq_yõld_cb
 },

123 { "£t_ª•⁄£", 
ªq_£t_ª•⁄£_cb
 },

124 { "ßy", 
ªq_ßy_cb
 },

125 { "£nd_evít", 
ªq_£nd_evít_cb
 },

126 { 
NULL
, NULL }

129 
ˇche_íåy_t
 *
°©e_¸óã
(c⁄° *
key
 
__©åibuã__
((
unu£d
)),

130 *
c⁄ãxt
)

132 
lw™_lua_¥iv_t
 *
	g¥iv
 = 
c⁄ãxt
;

133 
lw™_lua_°©e_t
 *
	g°©e
 = 
mÆloc
((*
°©e
));

135 i‡(
UNLIKELY
(!
°©e
))

136  
	gNULL
;

138 
	g°©e
->
	gL
 = 
luaL_√w°©e
();

139 i‡(
UNLIKELY
(!
°©e
->
L
)) {

140 
‰ì
(
°©e
);

141  
	gNULL
;

144 
luaL_›ílibs
(
°©e
->
L
);

146 
luaL_√wmë©abÀ
(
°©e
->
L
, 
ªque°_më©abÀ_«me
);

147 
luaL_ªgi°î
(
°©e
->
L
, 
NULL
, 
lw™_ªque°_mëa_ªgs
);

148 
lua_£tfõld
(
°©e
->
L
, -1, "__index");

150 i‡(
UNLIKELY
(
luaL_dofûe
(
°©e
->
L
, 
¥iv
->
s¸ùt_fûe
) != 0)) {

151 
lw™_°©us_îr‹
("Eº‹ o≥nög Lu®s¸ùà%s", 
lua_to°rög
(
°©e
->
L
, -1));

152 
lua_˛o£
(
°©e
->
L
);

153 
‰ì
(
°©e
);

154  
	gNULL
;

157  (
	gˇche_íåy_t
 *)
	g°©e
;

160 
°©e_de°roy
(
ˇche_íåy_t
 *
íåy
,

161 *
c⁄ãxt
 
__©åibuã__
((
unu£d
)))

163 
lw™_lua_°©e_t
 *
	g°©e
 = (lw™_lua_°©e_à*)
íåy
;

165 
lua_˛o£
(
°©e
->
L
);

166 
‰ì
(
°©e
);

169 
ˇche_t
 *
	$gë_‹_¸óã_ˇche
(
lw™_lua_¥iv_t
 *
¥iv
)

171 
ˇche_t
 *
ˇche
 = 
	`±hªad_gë•ecific
(
¥iv
->
ˇche_key
);

172 i‡(
	`UNLIKELY
(!
ˇche
)) {

173 
	`lw™_°©us_debug
("Creating cache forÅhisÅhread");

174 
ˇche
 = 
	`ˇche_¸óã
(
°©e_¸óã
, 
°©e_de°roy
, 
¥iv
,Öriv->
ˇche_≥riod
);

175 i‡(
	`UNLIKELY
(!
ˇche
))

176 
	`lw™_°©us_îr‹
("CouldÇot create cache");

179 
	`±hªad_£t•ecific
(
¥iv
->
ˇche_key
, 
ˇche
);

181  
ˇche
;

182 
	}
}

184 
	$uƒef_thªad
(*
d©a1
, *
d©a2
)

186 
lua_Sèã
 *
L
 = 
d©a1
;

187 
thªad_ªf
 = ()(
öçå_t
)
d©a2
;

188 
	`luaL_uƒef
(
L
, 
LUA_REGISTRYINDEX
, 
thªad_ªf
);

189 
	}
}

191 
ALWAYS_INLINE
 c⁄° *
	$gë_h™dÀ_¥efix
(
lw™_ªque°_t
 *
ªque°
, 
size_t
 *
Àn
)

193 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_GET
) {

194 *
Àn
 = ("handle_get_");

197 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_POST
) {

198 *
Àn
 = ("handle_post_");

201 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_HEAD
) {

202 *
Àn
 = ("handle_head_");

206  
NULL
;

207 
	}
}

209 
boﬁ
 
	$gë_h™dÀr_fun˘i⁄
(
lua_Sèã
 *
L
, 
lw™_ªque°_t
 *
ªque°
)

211 
size_t
 
h™dÀ_¥efix_Àn
;

212 c⁄° *
h™dÀ_¥efix
 = 
	`gë_h™dÀ_¥efix
(
ªque°
, &
h™dÀ_¥efix_Àn
);

213 i‡(
	`UNLIKELY
(!
h™dÀ_¥efix
))

214  
Ál£
;

216 
h™dÀr_«me
[128];

217 *
mëhod_«me
 = 
	`memp˝y
(
h™dÀr_«me
, 
h™dÀ_¥efix
, 
h™dÀ_¥efix_Àn
);

219 *
uæ
;

220 
size_t
 
uæ_Àn
;

221 i‡(
ªque°
->
uæ
.
Àn
) {

222 
uæ
 = 
	`°rdu∑
(
ªque°
->uæ.
vÆue
);

223 *
c
 = 
uæ
; *c; c++) {

224 i‡(*
c
 == '/') {

225 *
c
 = '\0';

228 i‡(
	`UNLIKELY
(!
	`iß um
(*
c
) && *c != '_'))

229  
Ál£
;

231 
uæ_Àn
 = 
	`°æí
(
uæ
);

233 
uæ
 = "root";

234 
uæ_Àn
 = 4;

237 i‡(
	`UNLIKELY
((
h™dÀ_¥efix_Àn
 + 
uæ_Àn
 + 1Ë> (
h™dÀr_«me
)))

238  
Ál£
;

239 
	`mem˝y
(
mëhod_«me
 - 1, 
uæ
, (
h™dÀr_«me
Ë- 
uæ_Àn
 - 1);

241 
	`lua_gëglobÆ
(
L
, 
h™dÀr_«me
);

242  
	`lua_isfun˘i⁄
(
L
, -1);

243 
	}
}

245 
	$push_ªque°
(
lua_Sèã
 *
L
, 
lw™_ªque°_t
 *
ªque°
)

247 
lw™_ªque°_t
 **
u£rd©a
 = 
	`lua_√wu£rd©a
(
L
, (lwan_request_t *));

248 *
u£rd©a
 = 
ªque°
;

249 
	`luaL_gëmë©abÀ
(
L
, 
ªque°_më©abÀ_«me
);

250 
	`lua_£tmë©abÀ
(
L
, -2);

251 
	}
}

253 
lua_Sèã
 *
	$push_√wthªad
(
lua_Sèã
 *
L
, 
c‹o_t
 *
c‹o
)

255 
lua_Sèã
 *
L1
 = 
	`lua_√wthªad
(
L
);

256 i‡(
	`UNLIKELY
(!
L1
))

257  
NULL
;

259 
thªad_ªf
 = 
	`luaL_ªf
(
L
, 
LUA_REGISTRYINDEX
);

260 
	`c‹o_de„r2
(
c‹o
, 
	`CORO_DEFER2
(
uƒef_thªad
), 
L
, (*)(
öçå_t
)
thªad_ªf
);

262  
L1
;

263 
	}
}

265 
lw™_hâp_°©us_t


266 
	$lua_h™dÀ_cb
(
lw™_ªque°_t
 *
ªque°
,

267 
lw™_ª•⁄£_t
 *
ª•⁄£
,

268 *
d©a
)

270 
lw™_lua_¥iv_t
 *
¥iv
 = 
d©a
;

272 i‡(
	`UNLIKELY
(!
¥iv
))

273  
HTTP_INTERNAL_ERROR
;

275 
ˇche_t
 *
ˇche
 = 
	`gë_‹_¸óã_ˇche
(
¥iv
);

276 i‡(
	`UNLIKELY
(!
ˇche
))

277  
HTTP_INTERNAL_ERROR
;

279 
lw™_lua_°©e_t
 *
°©e
 = (lw™_lua_°©e_à*)
	`ˇche_c‹o_gë_™d_ªf_íåy
(

280 
ˇche
, 
ªque°
->
c⁄n
->
c‹o
, "");

281 i‡(
	`UNLIKELY
(!
°©e
))

282  
HTTP_NOT_FOUND
;

284 
lua_Sèã
 *
L
 = 
	`push_√wthªad
(
°©e
->L, 
ªque°
->
c⁄n
->
c‹o
);

285 i‡(
	`UNLIKELY
(!
L
))

286  
HTTP_INTERNAL_ERROR
;

288 i‡(
	`UNLIKELY
(!
	`gë_h™dÀr_fun˘i⁄
(
L
, 
ªque°
)))

289  
HTTP_NOT_FOUND
;

291 
n_¨gumíts
 = 1;

292 
	`push_ªque°
(
L
, 
ªque°
);

293 
ª•⁄£
->
mime_ty≥
 = 
¥iv
->
deÁu…_ty≥
;

294 
åue
) {

295 
	`lua_ªsume
(
L
, 
n_¨gumíts
)) {

296 
LUA_YIELD
:

297 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_MAY_RESUME
);

298 
n_¨gumíts
 = 0;

301  
HTTP_OK
;

303 
	`lw™_°©us_îr‹
("Eº‹ from Lu®s¸ùt: %s", 
	`lua_to°rög
(
L
, -1));

304  
HTTP_INTERNAL_ERROR
;

307 
	}
}

309 *
	$lua_öô
(*
d©a
)

311 
lw™_lua_£âögs_t
 *
£âögs
 = 
d©a
;

312 
lw™_lua_¥iv_t
 *
¥iv
;

314 
¥iv
 = 
	`mÆloc
((*priv));

315 i‡(!
¥iv
) {

316 
	`lw™_°©us_îr‹
("CouldÇotállocate memory forÖrivate Lua struct");

317  
NULL
;

320 
¥iv
->
deÁu…_ty≥
 = 
	`°rdup
(

321 
£âögs
->
deÁu…_ty≥
 ? settings->default_type : "text/plain");

322 i‡(!
¥iv
->
deÁu…_ty≥
) {

323 
	`lw™_°©us_≥º‹
("strdup");

324 
out_no_deÁu…_ty≥
;

327 i‡(!
£âögs
->
s¸ùt_fûe
) {

328 
	`lw™_°©us_îr‹
("No Lua script fileÖrovided");

329 
out_no_s¸ùt_fûe
;

331 
¥iv
->
s¸ùt_fûe
 = 
	`°rdup
(
£âögs
->script_file);

332 i‡(!
¥iv
->
s¸ùt_fûe
) {

333 
	`lw™_°©us_≥º‹
("strdup");

334 
out_no_s¸ùt_fûe
;

337 i‡(
	`±hªad_key_¸óã
(&
¥iv
->
ˇche_key
, 
NULL
)) {

338 
	`lw™_°©us_≥º‹
("pthread_key_create");

339 
out_key_¸óã
;

342 
¥iv
->
ˇche_≥riod
 = 
£âögs
->cache_period;

344  
¥iv
;

346 
out_key_¸óã
:

347 
	`‰ì
(
¥iv
->
s¸ùt_fûe
);

348 
out_no_s¸ùt_fûe
:

349 
	`‰ì
(
¥iv
->
deÁu…_ty≥
);

350 
out_no_deÁu…_ty≥
:

351 
	`‰ì
(
¥iv
);

352  
NULL
;

353 
	}
}

355 
	$lua_shutdown
(*
d©a
)

357 
lw™_lua_¥iv_t
 *
¥iv
 = 
d©a
;

358 i‡(
¥iv
) {

359 
	`±hªad_key_dñëe
(
¥iv
->
ˇche_key
);

360 
	`‰ì
(
¥iv
->
deÁu…_ty≥
);

361 
	`‰ì
(
¥iv
->
s¸ùt_fûe
);

362 
	`‰ì
(
¥iv
);

364 
	}
}

366 *
	$lua_öô_‰om_hash
(c⁄° 
hash
 *hash)

368 
lw™_lua_£âögs_t
 
£âögs
 = {

369 .
deÁu…_ty≥
 = 
	`hash_föd
(
hash
, "defaultÅype"),

370 .
s¸ùt_fûe
 = 
	`hash_föd
(
hash
, "script file"),

371 .
ˇche_≥riod
 = 
	`∑r£_time_≥riod
(
	`hash_föd
(
hash
, "cacheÖeriod"), 15)

373  
	`lua_öô
(&
£âögs
);

374 
	}
}

376 c⁄° 
lw™_moduÀ_t
 *
	$lw™_moduÀ_lua
()

378 c⁄° 
lw™_moduÀ_t
 
lua_moduÀ
 = {

379 .
«me
 = "lua",

380 .
öô
 = 
lua_öô
,

381 .
öô_‰om_hash
 = 
lua_öô_‰om_hash
,

382 .
shutdown
 = 
lua_shutdown
,

383 .
h™dÀ
 = 
lua_h™dÀ_cb
,

384 .
Êags
 = 
HANDLER_PARSE_QUERY_STRING


385 | 
HANDLER_REMOVE_LEADING_SLASH


388  &
lua_moduÀ
;

389 
	}
}

	@common/lwan-lua.h

20 #i‚de‡
__LWAN_LUA_H__


21 
	#__LWAN_LUA_H__


	)

23 
	~"lw™.h
"

25 
	slw™_lua_£âögs_t
 {

26 c⁄° *
	mdeÁu…_ty≥
;

27 c⁄° *
	ms¸ùt_fûe
;

28 
	mˇche_≥riod
;

31 
	#LUA
(
deÁu…_ty≥_
) \

32 .
moduÀ
 = 
	`lw™_moduÀ_lua
(), \

33 .
¨gs
 = ((
lw™_lua_t
[]) {{ \

34 .
deÁu…_ty≥
 = 
deÁu…_ty≥_
 \

36 .
Êags
 = 0

	)

38 c⁄° 
lw™_moduÀ_t
 *
lw™_moduÀ_lua
();

	@common/lwan-private.h

20 #i‚de‡
__LWAN_PRIVATE_H__


21 
	#__LWAN_PRIVATE_H__


	)

23 
	~"lw™.h
"

25 
lw™_ª•⁄£_öô
();

26 
lw™_ª•⁄£_shutdown
();

28 
lw™_sockë_öô
(
lw™_t
 *
l
);

29 
lw™_sockë_shutdown
(
lw™_t
 *
l
);

31 
lw™_thªad_öô
(
lw™_t
 *
l
);

32 
lw™_thªad_shutdown
(
lw™_t
 *
l
);

33 
lw™_thªad_add_˛õ¡
(
lw™_thªad_t
 *
t
, 
fd
);

35 
lw™_°©us_öô
(
lw™_t
 *
l
);

36 
lw™_°©us_shutdown
(
lw™_t
 *
l
);

38 
lw™_job_thªad_öô
();

39 
lw™_job_thªad_shutdown
();

40 
lw™_job_add
(
	$boﬁ
 (*
cb
)(*
d©a
), *data);

41 
	`lw™_job_dñ
(
	$boﬁ
 (*
cb
)(*
d©a
), *data);

43 
	`lw™_èbÀs_öô
();

44 
	`lw™_èbÀs_shutdown
();

	@common/lwan-redirect.c

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

23 
	~"lw™.h
"

24 
	~"lw™-ªdúe˘.h
"

26 
lw™_hâp_°©us_t


27 
	$ªdúe˘_h™dÀ_cb
(
lw™_ªque°_t
 *
ªque°
,

28 
lw™_ª•⁄£_t
 *
ª•⁄£
,

29 *
d©a
)

31 i‡(
	`UNLIKELY
(!
d©a
))

32  
HTTP_INTERNAL_ERROR
;

34 
lw™_key_vÆue_t
 *
hódîs
 = 
	`c‹o_mÆloc
(
ªque°
->
c⁄n
->
c‹o
, (*headers) * 2);

35 i‡(
	`UNLIKELY
(!
hódîs
))

36  
HTTP_INTERNAL_ERROR
;

38 
hódîs
[0].
key
 = "Location";

39 
hódîs
[0].
vÆue
 = 
d©a
;

40 
hódîs
[1].
key
 = 
NULL
;

41 
hódîs
[1].
vÆue
 = 
NULL
;

43 
ª•⁄£
->
hódîs
 = headers;

45  
HTTP_MOVED_PERMANENTLY
;

46 
	}
}

48 *
	$ªdúe˘_öô
(*
d©a
)

50 
lw™_ªdúe˘_£âögs_t
 *
£âögs
 = 
d©a
;

51  (
£âögs
->
to
Ë? 
	`°rdup
(£âögs->toË: 
NULL
;

52 
	}
}

54 *
	$ªdúe˘_öô_‰om_hash
(c⁄° 
hash
 *hash)

56 
lw™_ªdúe˘_£âögs_t
 
£âögs
 = {

57 .
to
 = 
	`hash_föd
(
hash
, "to")

59  
	`ªdúe˘_öô
(&
£âögs
);

60 
	}
}

62 c⁄° 
lw™_moduÀ_t
 *
	$lw™_moduÀ_ªdúe˘
()

64 c⁄° 
lw™_moduÀ_t
 
ªdúe˘_moduÀ
 = {

65 .
«me
 = "redirect",

66 .
öô
 = 
ªdúe˘_öô
,

67 .
öô_‰om_hash
 = 
ªdúe˘_öô_‰om_hash
,

68 .
shutdown
 = 
‰ì
,

69 .
h™dÀ
 = 
ªdúe˘_h™dÀ_cb
,

70 .
Êags
 = 0

73  &
ªdúe˘_moduÀ
;

74 
	}
}

	@common/lwan-redirect.h

20 #i‚de‡
__LWAN_REDIRECT_H__


21 
	#__LWAN_REDIRECT_H__


	)

23 
	~"lw™.h
"

25 
	slw™_ªdúe˘_£âögs_t
 {

26 *
	mto
;

29 
	#REDIRECT
(
to_
) \

30 .
moduÀ
 = 
	`lw™_moduÀ_ªdúe˘
(), \

31 .
¨gs
 = ((
lw™_ªdúe˘_t
[]) {{ \

32 .
to
 = 
to_
 \

34 .
Êags
 = 0

	)

36 c⁄° 
lw™_moduÀ_t
 *
lw™_moduÀ_ªdúe˘
();

	@common/lwan-request.c

20 
	#_GNU_SOURCE


	)

21 
	~<as£π.h
>

22 
	~<î∫o.h
>

23 
	~<öây≥s.h
>

24 
	~<°ddef.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

28 
	~<¨∑/öë.h
>

30 
	~"lw™.h
"

31 
	~"lw™-c⁄fig.h
"

32 
	~"lw™-hâp-auth‹ize.h
"

35 
	mFINALIZER_DONE
,

36 
	mFINALIZER_TRY_AGAIN
,

37 
	mFINALIZER_YIELD_TRY_AGAIN
,

38 
	mFINALIZER_ERROR_TOO_LARGE


39 } 
	tlw™_ªad_föÆizî_t
;

41 
lw™_ªque°_∑r£_t_
 
	tlw™_ªque°_∑r£_t
;

43 
	slw™_ªque°_∑r£_t_
 {

44 
lw™_vÆue_t
 
	mbuf„r
;

45 
lw™_vÆue_t
 
	mquîy_°rög
;

46 
lw™_vÆue_t
 
	mif_modifõd_sö˚
;

47 
lw™_vÆue_t
 
	mønge
;

48 
lw™_vÆue_t
 
	mac˚±_ícodög
;

49 
lw™_vÆue_t
 
	m‰agmít
;

50 
lw™_vÆue_t
 
	mc⁄ã¡_Àngth
;

51 
lw™_vÆue_t
 
	mpo°_d©a
;

52 
lw™_vÆue_t
 
	mc⁄ã¡_ty≥
;

53 
lw™_vÆue_t
 
	mauth‹iz©i⁄
;

54 
	mc⁄√˘i⁄
;

57 
	$decode_hex_digô
(
ch
Ë
	`__©åibuã__
((
puª
));

58 
boﬁ
 
	$is_hex_digô
(
ch
Ë
	`__©åibuã__
((
puª
));

59 
	$has_zîo_byã
(
n
Ë
	`__©åibuã__
((
puª
));

60 
	$is_•a˚
(
ch
Ë
	`__©åibuã__
((
puª
));

61 *
	$ign‹e_Àadög_whôe•a˚
(*
buf„r
Ë
	`__©åibuã__
((
puª
));

63 
ALWAYS_INLINE
 *

64 
	$idítify_hâp_mëhod
(
lw™_ªque°_t
 *
ªque°
, *
buf„r
)

67 
HTTP_STR_GET
 = 
	`MULTICHAR_CONSTANT
('G','E','T',' '),

68 
HTTP_STR_HEAD
 = 
	`MULTICHAR_CONSTANT
('H','E','A','D'),

69 
HTTP_STR_POST
 = 
	`MULTICHAR_CONSTANT
('P','O','S','T')

72 
	`STRING_SWITCH
(
buf„r
) {

73 
HTTP_STR_GET
:

74 
ªque°
->
Êags
 |
REQUEST_METHOD_GET
;

75  
buf„r
 + 4;

76 
HTTP_STR_HEAD
:

77 
ªque°
->
Êags
 |
REQUEST_METHOD_HEAD
;

78  
buf„r
 + 5;

79 
HTTP_STR_POST
:

80 
ªque°
->
Êags
 |
REQUEST_METHOD_POST
;

81  
buf„r
 + 5;

83  
NULL
;

84 
	}
}

86 
ALWAYS_INLINE
 

87 
	$decode_hex_digô
(
ch
)

89  ()((
ch
 <= '9') ? ch - '0' : (ch & 7) + 9);

90 
	}
}

92 
ALWAYS_INLINE
 
boﬁ


93 
	$is_hex_digô
(
ch
)

95  (
ch
 >= '0' && ch <= '9') || (ch >= 'a' && ch <= 'f') || (ch >= 'A' && ch <= 'F');

96 
	}
}

98 
size_t


99 
	$uæ_decode
(*
°r
)

101 i‡(
	`UNLIKELY
(!
°r
))

104 *
ch
, *
decoded
;

105 
decoded
 = 
ch
 = 
°r
; *ch; ch++) {

106 i‡(*
ch
 ='%' && 
	`LIKELY
(
	`is_hex_digô
(ch[1]) && is_hex_digit(ch[2]))) {

107 
tmp
 = ()(
	`decode_hex_digô
(
ch
[1]) << 4 | decode_hex_digit(ch[2]));

108 i‡(
	`UNLIKELY
(!
tmp
))

110 *
decoded
++ = 
tmp
;

111 
ch
 += 2;

112 } i‡(*
ch
 == '+') {

113 *
decoded
++ = ' ';

115 *
decoded
++ = *
ch
;

119 *
decoded
 = '\0';

120  (
size_t
)(
decoded
 - 
°r
);

121 
	}
}

124 
	$key_vÆue_com∑ª_qs‹t_key
(c⁄° *
a
, c⁄° *
b
)

126  
	`°rcmp
(((
lw™_key_vÆue_t
 *)
a
)->
key
, (÷w™_key_vÆue_à*)
b
)->key);

127 
	}
}

129 
	#DECODE_AND_ADD
() \

131 i‡(
	`LIKELY
(
	`uæ_decode
(
key
))) { \

132 
kvs
[
vÆues
].
key
 = key; \

133 i‡(
	`LIKELY
(
	`uæ_decode
(
vÆue
))) \

134 
kvs
[
vÆues
].
vÆue
 = value; \

136 
kvs
[
vÆues
].
vÆue
 = ""; \

137 ++
vÆues
; \

138 i‡(
	`UNLIKELY
(
vÆues
 >
	`N_ELEMENTS
(
kvs
))) \

139 
oom
; \

141 } 0)

	)

144 
	$∑r£_uæícoded_keyvÆues
(
lw™_ªque°_t
 *
ªque°
,

145 
lw™_vÆue_t
 *
hñ≥r_vÆue
, 
lw™_key_vÆue_t
 **
ba£
, 
size_t
 *
Àn
)

147 i‡(!
hñ≥r_vÆue
->
vÆue
)

150 *
key
 = 
hñ≥r_vÆue
->
vÆue
;

151 *
vÆue
 = 
NULL
;

152 
size_t
 
vÆues
 = 0;

153 
lw™_key_vÆue_t
 
kvs
[256];

155 *
ch
 = 
key
; *ch; ch++) {

156 *
ch
) {

158 *
ch
 = '\0';

159 
vÆue
 = 
ch
 + 1;

163 *
ch
 = '\0';

164 
	`DECODE_AND_ADD
();

165 
key
 = 
ch
 + 1;

166 
vÆue
 = 
NULL
;

170 
	`DECODE_AND_ADD
();

171 
oom
:

172 
kvs
[
vÆues
].
key
 = kvs[vÆues].
vÆue
 = 
NULL
;

174 
lw™_key_vÆue_t
 *
kv
 = 
	`c‹o_mÆloc
(
ªque°
->
c⁄n
->
c‹o
,

175 (1 + 
vÆues
Ë* (
lw™_key_vÆue_t
));

176 i‡(
	`LIKELY
(
kv
)) {

177 
	`qs‹t
(
kvs
, 
vÆues
, (
lw™_key_vÆue_t
), 
key_vÆue_com∑ª_qs‹t_key
);

178 *
ba£
 = 
	`mem˝y
(
kv
, 
kvs
, (1 + 
vÆues
Ë* (
lw™_key_vÆue_t
));

179 *
Àn
 = 
vÆues
;

181 
	}
}

183 #unde‡
DECODE_AND_ADD


186 
	$∑r£_quîy_°rög
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

188 
	`∑r£_uæícoded_keyvÆues
(
ªque°
, &
hñ≥r
->
quîy_°rög
,

189 &
ªque°
->
quîy_∑øms
.
ba£
, &ªque°->quîy_∑øms.
Àn
);

190 
	}
}

193 
	$∑r£_po°_d©a
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

195 c⁄° 
c⁄ã¡_ty≥
[] = "application/x-www-form-urlencoded";

197 i‡(
hñ≥r
->
c⁄ã¡_ty≥
.
Àn
 != (content_type) - 1)

199 i‡(
	`UNLIKELY
(
	`°rcmp
(
hñ≥r
->
c⁄ã¡_ty≥
.
vÆue
, content_type)))

202 
	`∑r£_uæícoded_keyvÆues
(
ªque°
, &
hñ≥r
->
po°_d©a
,

203 &
ªque°
->
po°_d©a
.
ba£
, &ªque°->po°_d©a.
Àn
);

204 
	}
}

207 
	$idítify_hâp_∑th
(
lw™_ªque°_t
 *
ªque°
, *
buf„r
,

208 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

210 c⁄° 
size_t
 
möimÆ_ªque°_löe_Àn
 = ("/ HTTP/1.0") - 1;

212 *
íd_of_löe
 = 
	`memchr
(
buf„r
, '\r',

213 (
hñ≥r
->
buf„r
.
Àn
 - (
size_t
)(buf„∏- hñ≥r->buf„r.
vÆue
)));

214 i‡(
	`UNLIKELY
(!
íd_of_löe
))

215  
NULL
;

216 i‡(
	`UNLIKELY
((
size_t
)(
íd_of_löe
 - 
buf„r
Ë< 
möimÆ_ªque°_löe_Àn
))

217  
NULL
;

218 *
íd_of_löe
 = '\0';

220 *
•a˚
 = 
íd_of_löe
 - ("HTTP/X.X");

221 i‡(
	`UNLIKELY
(*(
•a˚
 + 1) != 'H'))

222  
NULL
;

223 *
•a˚
 = '\0';

225 i‡(
	`UNLIKELY
(*(
•a˚
 + 6) != '1'))

226  
NULL
;

228 i‡(*(
•a˚
 + 8) == '0')

229 
ªque°
->
Êags
 |
REQUEST_IS_HTTP_1_0
;

231 i‡(
	`UNLIKELY
(*
buf„r
 != '/'))

232  
NULL
;

234 
ªque°
->
uæ
.
vÆue
 = 
buf„r
;

235 
ªque°
->
uæ
.
Àn
 = (
size_t
)(
•a˚
 - 
buf„r
);

238 *
‰agmít
 = 
	`memrchr
(
buf„r
, '#', 
ªque°
->
uæ
.
Àn
);

239 i‡(
‰agmít
) {

240 *
‰agmít
 = '\0';

241 
hñ≥r
->
‰agmít
.
vÆue
 = fragment + 1;

242 
hñ≥r
->
‰agmít
.
Àn
 = (
size_t
)(
•a˚
 - fragment - 1);

243 
ªque°
->
uæ
.
Àn
 -
hñ≥r
->
‰agmít
.len + 1;

248 *
quîy_°rög
 = 
	`memchr
(
buf„r
, '?', 
ªque°
->
uæ
.
Àn
);

249 i‡(
quîy_°rög
) {

250 *
quîy_°rög
 = '\0';

251 
hñ≥r
->
quîy_°rög
.
vÆue
 = query_string + 1;

252 
hñ≥r
->
quîy_°rög
.
Àn
 = (
size_t
)((
‰agmít
 ? føgmíà: 
•a˚
) - query_string - 1);

253 
ªque°
->
uæ
.
Àn
 -
hñ≥r
->
quîy_°rög
.len + 1;

256 
ªque°
->
‹igöÆ_uæ
.
vÆue
 = 
buf„r
;

257 
ªque°
->
‹igöÆ_uæ
.
Àn
 =Ñeque°->
uæ
.len;

259  
íd_of_löe
 + 1;

260 
	}
}

262 
	#MATCH_HEADER
(
hdr
) \

264 *
íd
; \

265 
p
 +(
hdr
) - 1; \

266 i‡(
p
 >
buf„r_íd
) \

267 
íd
; \

268 i‡(
	`UNLIKELY
(*
p
++ != ':')) \

269 
did_nŸ_m©ch
; \

270 i‡(
	`UNLIKELY
(*
p
++ != ' ')) \

271 
did_nŸ_m©ch
; \

272 i‡(
	`LIKELY
(
íd
 = 
	`°rchr
(
p
, '\r'))) { \

273 *
íd
 = '\0'; \

274 
vÆue
 = 
p
; \

275 
p
 = 
íd
 + 1; \

276 
Àngth
 = (
size_t
)(
íd
 - 
vÆue
); \

277 i‡(
	`UNLIKELY
(*
p
 != '\n')) \

278 
did_nŸ_m©ch
; \

279 } 
did_nŸ_m©ch
; \

280 } 0)

	)

282 
	#CASE_HEADER
(
hdr_c⁄°
,
hdr_«me
) \

283 
hdr_c⁄°
: 
	`MATCH_HEADER
(
hdr_«me
);

	)

286 
	$∑r£_hódîs
(
lw™_ªque°_∑r£_t
 *
hñ≥r
, *
buf„r
, *
buf„r_íd
)

289 
HTTP_HDR_CONNECTION
 = 
	`MULTICHAR_CONSTANT_L
('C','o','n','n'),

290 
HTTP_HDR_RANGE
 = 
	`MULTICHAR_CONSTANT_L
('R','a','n','g'),

291 
HTTP_HDR_IF_MODIFIED_SINCE
 = 
	`MULTICHAR_CONSTANT_L
('I','f','-','M'),

292 
HTTP_HDR_ACCEPT
 = 
	`MULTICHAR_CONSTANT_L
('A','c','c','e'),

293 
HTTP_HDR_CONTENT
 = 
	`MULTICHAR_CONSTANT_L
('C','o','n','t'),

294 
HTTP_HDR_ENCODING
 = 
	`MULTICHAR_CONSTANT_L
('-','E','n','c'),

295 
HTTP_HDR_LENGTH
 = 
	`MULTICHAR_CONSTANT_L
('-','L','e','n'),

296 
HTTP_HDR_TYPE
 = 
	`MULTICHAR_CONSTANT_L
('-','T','y','p'),

297 
HTTP_HDR_AUTHORIZATION
 = 
	`MULTICHAR_CONSTANT_L
('A','u','t','h'),

300 i‡(
	`UNLIKELY
(!
buf„r
))

301  
NULL
;

303 *
p
 = 
buf„r
; *p; buffer = ++p) {

304 *
vÆue
;

305 
size_t
 
Àngth
;

307 
ªåy
:

308 i‡((
p
 + (
öt32_t
)Ë>
buf„r_íd
)

311 
	`STRING_SWITCH_L
(
p
) {

312 
	`CASE_HEADER
(
HTTP_HDR_CONNECTION
, "Connection")

313 
hñ≥r
->
c⁄√˘i⁄
 = (*
vÆue
 | 0x20);

315 
	`CASE_HEADER
(
HTTP_HDR_IF_MODIFIED_SINCE
, "If-Modified-Since")

316 
hñ≥r
->
if_modifõd_sö˚
.
vÆue
 = value;

317 
hñ≥r
->
if_modifõd_sö˚
.
Àn
 = 
Àngth
;

319 
	`CASE_HEADER
(
HTTP_HDR_RANGE
, "Range")

320 
hñ≥r
->
ønge
.
vÆue
 = value;

321 
hñ≥r
->
ønge
.
Àn
 = 
Àngth
;

323 
	`CASE_HEADER
(
HTTP_HDR_AUTHORIZATION
, "Authorization")

324 
hñ≥r
->
auth‹iz©i⁄
.
vÆue
 = value;

325 
hñ≥r
->
auth‹iz©i⁄
.
Àn
 = 
Àngth
;

327 
	`CASE_HEADER
(
HTTP_HDR_ENCODING
, "-Encoding")

328 
hñ≥r
->
ac˚±_ícodög
.
vÆue
 = value;

329 
hñ≥r
->
ac˚±_ícodög
.
Àn
 = 
Àngth
;

331 
	`CASE_HEADER
(
HTTP_HDR_TYPE
, "-Type")

332 
hñ≥r
->
c⁄ã¡_ty≥
.
vÆue
 = value;

333 
hñ≥r
->
c⁄ã¡_ty≥
.
Àn
 = 
Àngth
;

335 
	`CASE_HEADER
(
HTTP_HDR_LENGTH
, "-Length")

336 
hñ≥r
->
c⁄ã¡_Àngth
.
vÆue
 = value;

337 
hñ≥r
->
c⁄ã¡_Àngth
.
Àn
 = 
Àngth
;

339 
HTTP_HDR_CONTENT
:

340 
p
 += ("Content") - 1;

341 
ªåy
;

342 
HTTP_HDR_ACCEPT
:

343 
p
 += ("Accept") - 1;

344 
ªåy
;

346 
did_nŸ_m©ch
:

347 
p
 = 
	`memchr
’, '\n', (
size_t
)(
buf„r_íd
 -Ö));

348 i‡(!
p
)

352 
íd
:

353  
buf„r
;

354 
	}
}

356 #unde‡
CASE_HEADER


357 #unde‡
MATCH_HEADER


360 
	$∑r£_if_modifõd_sö˚
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

362 i‡(
	`UNLIKELY
(!
hñ≥r
->
if_modifõd_sö˚
.
Àn
))

365 
tm
 
t
;

366 *
¥o˚s£d
 = 
	`°Ωtime
(
hñ≥r
->
if_modifõd_sö˚
.
vÆue
,

367 "%a, %d %b %Y %H:%M:%S GMT", &
t
);

369 i‡(
	`UNLIKELY
(!
¥o˚s£d
))

371 i‡(
	`UNLIKELY
(*
¥o˚s£d
))

374 
ªque°
->
hódî
.
if_modifõd_sö˚
 = 
	`timegm
(&
t
);

375 
	}
}

378 
	$∑r£_ønge
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

380 i‡(
	`UNLIKELY
(
hñ≥r
->
ønge
.
Àn
 <= (("bytes=") - 1)))

383 *
ønge
 = 
hñ≥r
->ønge.
vÆue
;

384 i‡(
	`UNLIKELY
(
	`°∫cmp
(
ønge
, "bytes=", ("bytes=") - 1)))

387 
ønge
 += ("bytes=") - 1;

388 
off_t
 
‰om
, 
to
;

390 i‡(
	`ssˇnf
(
ønge
, "%"
PRIu64
"-%"PRIu64, &
‰om
, &
to
) == 2) {

391 
ªque°
->
hódî
.
ønge
.
‰om
 = from;

392 
ªque°
->
hódî
.
ønge
.
to
 =Åo;

393 } i‡(
	`ssˇnf
(
ønge
, "-%"
PRIu64
, &
to
) == 1) {

394 
ªque°
->
hódî
.
ønge
.
‰om
 = 0;

395 
ªque°
->
hódî
.
ønge
.
to
 =Åo;

396 } i‡(
	`ssˇnf
(
ønge
, "%"
PRIu64
"-", &
‰om
) == 1) {

397 
ªque°
->
hódî
.
ønge
.
‰om
 = from;

398 
ªque°
->
hódî
.
ønge
.
to
 = -1;

400 
ªque°
->
hódî
.
ønge
.
‰om
 = -1;

401 
ªque°
->
hódî
.
ønge
.
to
 = -1;

403 
	}
}

406 
	$∑r£_ac˚±_ícodög
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

408 i‡(!
hñ≥r
->
ac˚±_ícodög
.
Àn
)

412 
ENCODING_DEFL1
 = 
	`MULTICHAR_CONSTANT
('d','e','f','l'),

413 
ENCODING_DEFL2
 = 
	`MULTICHAR_CONSTANT
(' ','d','e','f')

416 *
p
 = 
hñ≥r
->
ac˚±_ícodög
.
vÆue
;Ö && *p;Ö++) {

417 
	`STRING_SWITCH
(
p
) {

418 
ENCODING_DEFL1
:

419 
ENCODING_DEFL2
:

420 
ªque°
->
Êags
 |
REQUEST_ACCEPT_DEFLATE
;

424 i‡(!(
p
 = 
	`°rchr
(p, ',')))

427 
	}
}

429 
ALWAYS_INLINE
 

430 
	$has_zîo_byã
(
n
)

432  ((
n
 - 0x01010101UL) & ~n) & 0x80808080UL;

433 
	}
}

435 
ALWAYS_INLINE
 

436 
	$is_•a˚
(
ch
)

438  
	`has_zîo_byã
((0x1010101UL * ()
ch
) ^ 0x090a0d20UL);

439 
	}
}

441 
ALWAYS_INLINE
 *

442 
	$ign‹e_Àadög_whôe•a˚
(*
buf„r
)

444 *
buf„r
 && 
	`is_•a˚
(*buffer))

445 
buf„r
++;

446  
buf„r
;

447 
	}
}

449 
ALWAYS_INLINE
 

450 
	$compuã_kìp_Æive_Êag
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

452 
boﬁ
 
is_kìp_Æive
;

453 i‡(
ªque°
->
Êags
 & 
REQUEST_IS_HTTP_1_0
)

454 
is_kìp_Æive
 = (
hñ≥r
->
c⁄√˘i⁄
 == 'k');

456 
is_kìp_Æive
 = (
hñ≥r
->
c⁄√˘i⁄
 != 'c');

457 i‡(
is_kìp_Æive
)

458 
ªque°
->
c⁄n
->
Êags
 |
CONN_KEEP_ALIVE
;

460 
ªque°
->
c⁄n
->
Êags
 &~
CONN_KEEP_ALIVE
;

461 
	}
}

463 
lw™_hâp_°©us_t
 
ªad_‰om_ªque°_sockë
(
lw™_ªque°_t
 *
ªque°
,

464 
lw™_vÆue_t
 *
buf„r
, c⁄° 
size_t
 
buf„r_size
,

465 
	$lw™_ªad_föÆizî_t
 (*
föÆizî
)(
size_t
 
tŸÆ_ªad
, size_à
buf„r_size
, 
lw™_vÆue_t
 *
buf„r
))

467 
ssize_t
 
n
;

468 
size_t
 
tŸÆ_ªad
 = 0;

469 
∑ckës_ªmaöög
 = 16;

471 ; 
∑ckës_ªmaöög
 > 0;Öackets_remaining--) {

472 
n
 = 
	`ªad
(
ªque°
->
fd
, 
buf„r
->
vÆue
 + 
tŸÆ_ªad
,

473 (
size_t
)(
buf„r_size
 - 
tŸÆ_ªad
));

475 i‡(
	`UNLIKELY
(
n
 == 0)) {

476 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_ABORT
);

477 
	`__buûtö_uƒóchabÀ
();

480 i‡(
	`UNLIKELY
(
n
 < 0)) {

481 
î∫o
) {

482 
EAGAIN
:

483 
EINTR
:

484 
yõld_™d_ªad_agaö
:

487 
ªque°
->
c⁄n
->
Êags
 ^
CONN_WRITE_EVENTS
;

489 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_MAY_RESUME
);

491 
ªque°
->
c⁄n
->
Êags
 ^
CONN_WRITE_EVENTS
;

497 i‡(
	`UNLIKELY
(!
tŸÆ_ªad
))

498  
HTTP_BAD_REQUEST
;

501 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_ABORT
);

502 
	`__buûtö_uƒóchabÀ
();

505 
tŸÆ_ªad
 +(
size_t
)
n
;

506 
buf„r
->
vÆue
[
tŸÆ_ªad
] = '\0';

508 
	`föÆizî
(
tŸÆ_ªad
, 
buf„r_size
, 
buf„r
)) {

509 
FINALIZER_DONE
:

510 
buf„r
->
Àn
 = (
size_t
)
tŸÆ_ªad
;

511  
HTTP_OK
;

512 
FINALIZER_TRY_AGAIN
:

514 
FINALIZER_YIELD_TRY_AGAIN
:

515 
yõld_™d_ªad_agaö
;

516 
FINALIZER_ERROR_TOO_LARGE
:

517  
HTTP_TOO_LARGE
;

528  
HTTP_TIMEOUT
;

529 
	}
}

531 
lw™_ªad_föÆizî_t
 
	$ªad_ªque°_föÆizî
(
size_t
 
tŸÆ_ªad
,

532 
size_t
 
buf„r_size
, 
lw™_vÆue_t
 *
buf„r
)

534 i‡(
	`UNLIKELY
(
tŸÆ_ªad
 < 4))

535  
FINALIZER_YIELD_TRY_AGAIN
;

537 i‡(
	`UNLIKELY
(
tŸÆ_ªad
 =
buf„r_size
))

538  
FINALIZER_ERROR_TOO_LARGE
;

540 i‡(
	`LIKELY
(!
	`memcmp
(
buf„r
->
vÆue
 + 
tŸÆ_ªad
 - 4, "\r\n\r\n", 4)))

541  
FINALIZER_DONE
;

543 *
po°_d©a_£∑øt‹
 = 
	`°ºchr
(
buf„r
->
vÆue
, '\n');

544 i‡(
po°_d©a_£∑øt‹
) {

545 i‡(
	`LIKELY
(!
	`memcmp
(
po°_d©a_£∑øt‹
 - 3, "\r\n\r", 3)))

546  
FINALIZER_DONE
;

549  
FINALIZER_TRY_AGAIN
;

550 
	}
}

552 
ALWAYS_INLINE
 
lw™_hâp_°©us_t


553 
	$ªad_ªque°
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

555  
	`ªad_‰om_ªque°_sockë
(
ªque°
, &
hñ≥r
->
buf„r
,

556 
DEFAULT_BUFFER_SIZE
, 
ªad_ªque°_föÆizî
);

557 
	}
}

559 
lw™_ªad_föÆizî_t


560 
ªad_po°_d©a_föÆizî
(
size_t
 
tŸÆ_ªad
, size_à
buf„r_size
,

561 
lw™_vÆue_t
 *
buf„r
 
__©åibuã__
((
unu£d
)))

563 i‡(
LIKELY
(
tŸÆ_ªad
 =
buf„r_size
))

564  
FINALIZER_DONE
;

565  
	gFINALIZER_YIELD_TRY_AGAIN
;

568 
lw™_hâp_°©us_t


569 
	$ªad_po°_d©a
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ªque°_∑r£_t
 *
hñ≥r
, 

570 *
buf„r
)

572 
∑r£d_Àngth
;

574 i‡(!
hñ≥r
->
c⁄ã¡_Àngth
.
vÆue
)

575  
HTTP_BAD_REQUEST
;

576 
∑r£d_Àngth
 = 
	`∑r£_l⁄g
(
hñ≥r
->
c⁄ã¡_Àngth
.
vÆue
, 
DEFAULT_BUFFER_SIZE
);

577 i‡(
	`UNLIKELY
(
∑r£d_Àngth
 > 
DEFAULT_BUFFER_SIZE
))

578  
HTTP_TOO_LARGE
;

579 i‡(
	`UNLIKELY
(
∑r£d_Àngth
 < 0))

580  
HTTP_BAD_REQUEST
;

582 
size_t
 
po°_d©a_size
 = (size_t)
∑r£d_Àngth
;

583 
size_t
 
cuº_po°_d©a_Àn
 =

584 (
hñ≥r
->
buf„r
.
Àn
 - (
size_t
)(buf„∏- hñ≥r->buf„r.
vÆue
));

585 i‡(
cuº_po°_d©a_Àn
 =
po°_d©a_size
) {

586 
hñ≥r
->
po°_d©a
.
vÆue
 = 
buf„r
;

587 
hñ≥r
->
po°_d©a
.
Àn
 = (
size_t
)
po°_d©a_size
;

589  
HTTP_OK
;

592 
hñ≥r
->
po°_d©a
.
vÆue
 = 
	`c‹o_mÆloc
(
ªque°
->
c⁄n
->
c‹o
, (
size_t
)
po°_d©a_size
);

593 i‡(!
hñ≥r
->
po°_d©a
.
vÆue
)

594  
HTTP_INTERNAL_ERROR
;

596 
	`mem˝y
(
hñ≥r
->
po°_d©a
.
vÆue
, 
buf„r
, (
size_t
)
cuº_po°_d©a_Àn
);

597 
hñ≥r
->
po°_d©a
.
Àn
 = (
size_t
)
cuº_po°_d©a_Àn
;

598 
hñ≥r
->
po°_d©a
.
vÆue
 +
cuº_po°_d©a_Àn
;

600 
lw™_hâp_°©us_t
 
°©us
 = 
	`ªad_‰om_ªque°_sockë
(
ªque°
,

601 &
hñ≥r
->
po°_d©a
,

602 
po°_d©a_size
 - 
cuº_po°_d©a_Àn
,

603 
ªad_po°_d©a_föÆizî
);

604 i‡(
°©us
 !
HTTP_OK
)

605  
°©us
;

607 
hñ≥r
->
po°_d©a
.
vÆue
 -
cuº_po°_d©a_Àn
;

608  
HTTP_OK
;

609 
	}
}

611 
lw™_hâp_°©us_t


612 
	$∑r£_hâp_ªque°
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

614 *
buf„r
;

616 
buf„r
 = 
	`ign‹e_Àadög_whôe•a˚
(
hñ≥r
->buf„r.
vÆue
);

617 i‡(
	`UNLIKELY
(!*
buf„r
))

618  
HTTP_BAD_REQUEST
;

620 
buf„r
 = 
	`idítify_hâp_mëhod
(
ªque°
, buffer);

621 i‡(
	`UNLIKELY
(!
buf„r
))

622  
HTTP_NOT_ALLOWED
;

624 
buf„r
 = 
	`idítify_hâp_∑th
(
ªque°
, buf„r, 
hñ≥r
);

625 i‡(
	`UNLIKELY
(!
buf„r
))

626  
HTTP_BAD_REQUEST
;

628 
buf„r
 = 
	`∑r£_hódîs
(
hñ≥r
, buf„r, hñ≥r->buf„r.
vÆue
 + hñ≥r->buf„r.
Àn
);

629 i‡(
	`UNLIKELY
(!
buf„r
))

630  
HTTP_BAD_REQUEST
;

632 
size_t
 
decoded_Àn
 = 
	`uæ_decode
(
ªque°
->
uæ
.
vÆue
);

633 i‡(
	`UNLIKELY
(!
decoded_Àn
))

634  
HTTP_BAD_REQUEST
;

635 
ªque°
->
‹igöÆ_uæ
.
Àn
 =Ñeque°->
uæ
.À¿
decoded_Àn
;

637 
	`compuã_kìp_Æive_Êag
(
ªque°
, 
hñ≥r
);

639 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_POST
) {

640 
lw™_hâp_°©us_t
 
°©us
 = 
	`ªad_po°_d©a
(
ªque°
, 
hñ≥r
, 
buf„r
);

641 i‡(
	`UNLIKELY
(
°©us
 !
HTTP_OK
))

642  
°©us
;

645  
HTTP_OK
;

646 
	}
}

648 
lw™_hâp_°©us_t


649 
	$¥ï¨e_f‹_ª•⁄£
(
lw™_uæ_m≠_t
 *
uæ_m≠
,

650 
lw™_ªque°_t
 *
ªque°
,

651 
lw™_ªque°_∑r£_t
 *
hñ≥r
)

653 i‡(
uæ_m≠
->
Êags
 & 
HANDLER_PARSE_QUERY_STRING
)

654 
	`∑r£_quîy_°rög
(
ªque°
, 
hñ≥r
);

656 i‡(
uæ_m≠
->
Êags
 & 
HANDLER_PARSE_IF_MODIFIED_SINCE
)

657 
	`∑r£_if_modifõd_sö˚
(
ªque°
, 
hñ≥r
);

659 i‡(
uæ_m≠
->
Êags
 & 
HANDLER_PARSE_RANGE
)

660 
	`∑r£_ønge
(
ªque°
, 
hñ≥r
);

662 i‡(
uæ_m≠
->
Êags
 & 
HANDLER_PARSE_ACCEPT_ENCODING
)

663 
	`∑r£_ac˚±_ícodög
(
ªque°
, 
hñ≥r
);

665 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_POST
) {

666 i‡(
uæ_m≠
->
Êags
 & 
HANDLER_PARSE_POST_DATA
)

667 
	`∑r£_po°_d©a
(
ªque°
, 
hñ≥r
);

669  
HTTP_NOT_ALLOWED
;

672 i‡(
uæ_m≠
->
Êags
 & 
HANDLER_MUST_AUTHORIZE
) {

673 i‡(!
	`lw™_hâp_auth‹ize
(
ªque°
,

674 &
hñ≥r
->
auth‹iz©i⁄
,

675 
uæ_m≠
->
auth‹iz©i⁄
.
ªÆm
,

676 
uæ_m≠
->
auth‹iz©i⁄
.
∑ssw‹d_fûe
))

677  
HTTP_NOT_AUTHORIZED
;

680 i‡(
uæ_m≠
->
Êags
 & 
HANDLER_REMOVE_LEADING_SLASH
) {

681 *
ªque°
->
uæ
.
vÆue
 ='/' &&Ñeque°->uæ.
Àn
 > 0) {

682 ++
ªque°
->
uæ
.
vÆue
;

683 --
ªque°
->
uæ
.
Àn
;

687  
HTTP_OK
;

688 
	}
}

691 
	$lw™_¥o˚ss_ªque°
(
lw™_t
 *
l
, 
lw™_ªque°_t
 *
ªque°
)

693 
lw™_hâp_°©us_t
 
°©us
;

694 
lw™_uæ_m≠_t
 *
uæ_m≠
;

695 
buf„r
[
DEFAULT_BUFFER_SIZE
];

696 
lw™_ªque°_∑r£_t
 
hñ≥r
 = {

697 .
buf„r
 = {

698 .
vÆue
 = 
buf„r
,

699 .
Àn
 = 0

703 
°©us
 = 
	`ªad_ªque°
(
ªque°
, &
hñ≥r
);

704 i‡(
	`UNLIKELY
(
°©us
 !
HTTP_OK
)) {

706 i‡(
°©us
 !
HTTP_BAD_REQUEST
)

707 
	`lw™_deÁu…_ª•⁄£
(
ªque°
, 
°©us
);

712 
°©us
 = 
	`∑r£_hâp_ªque°
(
ªque°
, &
hñ≥r
);

713 i‡(
	`UNLIKELY
(
°©us
 !
HTTP_OK
)) {

714 
	`lw™_deÁu…_ª•⁄£
(
ªque°
, 
°©us
);

718 
uæ_m≠
 = 
	`lw™_åõ_lookup_¥efix
(
l
->
uæ_m≠_åõ
, 
ªque°
->
uæ
.
vÆue
);

719 i‡(
	`UNLIKELY
(!
uæ_m≠
)) {

720 
	`lw™_deÁu…_ª•⁄£
(
ªque°
, 
HTTP_NOT_FOUND
);

724 
ªque°
->
uæ
.
vÆue
 +
uæ_m≠
->
¥efix_Àn
;

725 
ªque°
->
uæ
.
Àn
 -
uæ_m≠
->
¥efix_Àn
;

727 
°©us
 = 
	`¥ï¨e_f‹_ª•⁄£
(
uæ_m≠
, 
ªque°
, &
hñ≥r
);

728 i‡(
	`UNLIKELY
(
°©us
 !
HTTP_OK
)) {

729 
	`lw™_deÁu…_ª•⁄£
(
ªque°
, 
°©us
);

733 
°©us
 = 
uæ_m≠
->
	`h™dÀr
(
ªque°
, &ªque°->
ª•⁄£
, uæ_m≠->
d©a
);

734 
	`lw™_ª•⁄£
(
ªque°
, 
°©us
);

735 
	}
}

738 
	$vÆue_¨øy_b£¨ch
(
lw™_key_vÆue_t
 *
ba£
, c⁄° 
size_t
 
Àn
, c⁄° *
key
)

740 i‡(
	`UNLIKELY
(!
Àn
))

741  
NULL
;

743 
size_t
 
lowî_bound
 = 0;

744 
size_t
 
uµî_bound
 = 
Àn
;

745 
size_t
 
key_Àn
 = 
	`°æí
(
key
);

747 
lowî_bound
 < 
uµî_bound
) {

749 
size_t
 
idx
 = (
lowî_bound
 + 
uµî_bound
) / 2;

750 
lw™_key_vÆue_t
 *
±r
 = 
ba£
 + 
idx
;

751 
cmp
 = 
	`°∫cmp
(
key
, 
±r
->key, 
key_Àn
);

752 i‡(
	`LIKELY
(!
cmp
))

753  
±r
->
vÆue
;

754 i‡(
cmp
 > 0)

755 
lowî_bound
 = 
idx
 + 1;

757 
uµî_bound
 = 
idx
;

760  
NULL
;

761 
	}
}

763 
ALWAYS_INLINE
 const *

764 
	$lw™_ªque°_gë_quîy_∑øm
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
key
)

766  
	`vÆue_¨øy_b£¨ch
(
ªque°
->
quîy_∑øms
.
ba£
,

767 
ªque°
->
quîy_∑øms
.
Àn
, 
key
);

768 
	}
}

770 
ALWAYS_INLINE
 const *

771 
	$lw™_ªque°_gë_po°_∑øm
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
key
)

773  
	`vÆue_¨øy_b£¨ch
(
ªque°
->
po°_d©a
.
ba£
,

774 
ªque°
->
po°_d©a
.
Àn
, 
key
);

775 
	}
}

777 
ALWAYS_INLINE
 

778 
	$lw™_c⁄√˘i⁄_gë_fd
(
lw™_c⁄√˘i⁄_t
 *
c⁄n
)

780  ()(
±rdiff_t
)(
c⁄n
 - c⁄n->
thªad
->
lw™
->
c⁄ns
);

781 
	}
}

784 
	$lw™_ªque°_gë_ªmŸe_addªss
(
lw™_ªque°_t
 *
ªque°
,

785 
buf„r
[
INET6_ADDRSTRLEN
])

787 
sockaddr_°‹age
 
sock_addr
 = { 0 };

788 
sockÀn_t
 
sock_Àn
 = (
sockaddr_°‹age
);

789 i‡(
	`UNLIKELY
(
	`gë≥î«me
(
ªque°
->
fd
, (
sockaddr
 *)&
sock_addr
, &
sock_Àn
) < 0))

790  
NULL
;

792 i‡(
sock_addr
.
ss_Ámûy
 =
AF_INET
)

793  
	`öë_¡›
(
AF_INET
, &((
sockaddr_ö
 *)&
sock_addr
)->
sö_addr
,

794 
buf„r
, 
INET6_ADDRSTRLEN
);

795  
	`öë_¡›
(
AF_INET6
, &((
sockaddr_ö6
 *)&
sock_addr
)->
sö6_addr
,

796 
buf„r
, 
INET6_ADDRSTRLEN
);

797 
	}
}

	@common/lwan-response.c

20 
	#_GNU_SOURCE


	)

21 
	~<as£π.h
>

22 
	~<°rög.h
>

23 
	~<sys/uio.h
>

24 
	~<uni°d.h
>

25 
	~<√töë/ö.h
>

27 
	~"öt-to-°r.h
"

28 
	~"lw™.h
"

29 
	~"lw™-io-wøµîs.h
"

30 
	~"lw™-ãm∂©e.h
"

32 
lw™_çl_t
 *
	gîr‹_ãm∂©e
 = 
NULL
;

34 c⁄° *
	gîr‹_ãm∂©e_°r
 = "<html><head><style>" \

59 
	sîr‹_ãm∂©e_t
 {

60 c⁄° *
	msh‹t_mesßge
;

61 c⁄° *
	ml⁄g_mesßge
;

65 
	$lw™_ª•⁄£_öô
()

67 
lw™_v¨_des¸ùt‹_t
 
îr‹_des¸ùt‹
[] = {

68 
	`TPL_VAR_STR
(
îr‹_ãm∂©e_t
, 
sh‹t_mesßge
),

69 
	`TPL_VAR_STR
(
îr‹_ãm∂©e_t
, 
l⁄g_mesßge
),

70 
TPL_VAR_SENTINEL


73 
	`as£π
(!
îr‹_ãm∂©e
);

75 
	`lw™_°©us_debug
("Initializing defaultÑesponse");

77 
îr‹_ãm∂©e
 = 
	`lw™_çl_compûe_°rög
(
îr‹_ãm∂©e_°r
, 
îr‹_des¸ùt‹
);

78 i‡(
	`UNLIKELY
(!
îr‹_ãm∂©e
))

79 
	`lw™_°©us_¸ôiˇl_≥º‹
("lwan_tpl_compile_string");

80 
	}
}

83 
	$lw™_ª•⁄£_shutdown
()

85 
	`lw™_°©us_debug
("Shutting downÑesponse");

86 
	`as£π
(
îr‹_ãm∂©e
);

87 
	`lw™_çl_‰ì
(
îr‹_ãm∂©e
);

88 
	}
}

90 #i‚de‡
NDEBUG


92 
	$gë_ªque°_mëhod
(
lw™_ªque°_t
 *
ªque°
)

94 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_GET
)

96 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_HEAD
)

98 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_POST
)

101 
	}
}

104 
	$log_ªque°
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
)

106 
ù_buf„r
[
INET6_ADDRSTRLEN
];

108 
	`lw™_°©us_debug
("%s \"%s %s HTTP/%s\" %d %s",

109 
	`lw™_ªque°_gë_ªmŸe_addªss
(
ªque°
, 
ù_buf„r
),

110 
	`gë_ªque°_mëhod
(
ªque°
),

111 
ªque°
->
‹igöÆ_uæ
.
vÆue
,

112 
ªque°
->
Êags
 & 
REQUEST_IS_HTTP_1_0
 ? "1.0" : "1.1",

113 
°©us
,

114 
ªque°
->
ª•⁄£
.
mime_ty≥
);

115 
	}
}

117 
	#log_ªque°
(...)

	)

121 
	$lw™_ª•⁄£
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
)

123 
hódîs
[
DEFAULT_HEADERS_SIZE
];

125 i‡(
ªque°
->
Êags
 & 
RESPONSE_CHUNKED_ENCODING
) {

127 i‡(
	`UNLIKELY
(!
	`°rbuf_ª£t_Àngth
(
ªque°
->
ª•⁄£
.
buf„r
)))

128 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_ABORT
);

129 
	`lw™_ª•⁄£_£nd_chunk
(
ªque°
);

130 
	`log_ªque°
(
ªque°
, 
°©us
);

134 i‡(
	`UNLIKELY
(
ªque°
->
Êags
 & 
RESPONSE_SENT_HEADERS
)) {

135 
	`lw™_°©us_debug
("Headersálready sent, ignoring call");

141 i‡(
	`UNLIKELY
(!
ªque°
->
ª•⁄£
.
mime_ty≥
)) {

142 
	`lw™_deÁu…_ª•⁄£
(
ªque°
, 
°©us
);

146 
	`log_ªque°
(
ªque°
, 
°©us
);

148 i‡(
ªque°
->
ª•⁄£
.
°ªam
.
ˇŒback
) {

149 
lw™_hâp_°©us_t
 
ˇŒback_°©us
;

151 
ˇŒback_°©us
 = 
ªque°
->
ª•⁄£
.
°ªam
.
	`ˇŒback
(request,

152 
ªque°
->
ª•⁄£
.
°ªam
.
d©a
);

154 
ªque°
->
ª•⁄£
.
°ªam
.
ˇŒback
 = 
NULL
;

156 i‡(
ˇŒback_°©us
 >
HTTP_BAD_REQUEST
)

157 
	`lw™_deÁu…_ª•⁄£
(
ªque°
, 
ˇŒback_°©us
);

161 
size_t
 
hódî_Àn
 = 
	`lw™_¥ï¨e_ª•⁄£_hódî
(
ªque°
, 
°©us
, 
hódîs
, (headers));

162 i‡(
	`UNLIKELY
(!
hódî_Àn
)) {

163 
	`lw™_deÁu…_ª•⁄£
(
ªque°
, 
HTTP_INTERNAL_ERROR
);

167 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_HEAD
) {

168 
	`lw™_wrôe
(
ªque°
, 
hódîs
, 
hódî_Àn
);

172 
iovec
 
ª•⁄£_vec
[] = {

173 { .
iov_ba£
 = 
hódîs
, .
iov_Àn
 = 
hódî_Àn
 },

174 { .
iov_ba£
 = 
	`°rbuf_gë_buf„r
(
ªque°
->
ª•⁄£
.
buf„r
), .
iov_Àn
 = 
	`°rbuf_gë_Àngth
(request->response.buffer) }

177 
	`lw™_wrôev
(
ªque°
, 
ª•⁄£_vec
, 
	`N_ELEMENTS
(response_vec));

178 
	}
}

181 
	$lw™_deÁu…_ª•⁄£
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
)

183 
ªque°
->
ª•⁄£
.
mime_ty≥
 = "text/html";

185 
	`lw™_çl_≠∂y_wôh_buf„r
(
îr‹_ãm∂©e
, 
ªque°
->
ª•⁄£
.
buf„r
,

186 (
îr‹_ãm∂©e_t
[]) {{

187 .
sh‹t_mesßge
 = 
	`lw™_hâp_°©us_as_°rög
(
°©us
),

188 .
l⁄g_mesßge
 = 
	`lw™_hâp_°©us_as_des¸ùtive_°rög
(
°©us
)

191 
	`lw™_ª•⁄£
(
ªque°
, 
°©us
);

192 
	}
}

194 
	#RETURN_0_ON_OVERFLOW
(
Àn_
) \

195 i‡(
	`UNLIKELY
(
p_hódîs
 + (
Àn_
Ë>
p_hódîs_íd
)Ë 0

	)

197 
	#APPEND_STRING_LEN
(
c⁄°_°r_
,
Àn_
) \

199 
	`RETURN_0_ON_OVERFLOW
(
Àn_
); \

200 
p_hódîs
 = 
	`memp˝y
’_hódîs, (
c⁄°_°r_
), (
Àn_
)); \

201 } 0)

	)

203 
	#APPEND_STRING
(
°r_
) \

205 
size_t
 
Àn
 = 
	`°æí
(
°r_
); \

206 
	`APPEND_STRING_LEN
((
°r_
), 
Àn
); \

207 } 0)

	)

209 
	#APPEND_CHAR
(
vÆue_
) \

211 
	`RETURN_0_ON_OVERFLOW
(1); \

212 *
p_hódîs
++ = (
vÆue_
); \

213 } 0)

	)

215 
	#APPEND_CHAR_NOCHECK
(
vÆue_
) \

216 *
p_hódîs
++ = (
vÆue_
)

	)

218 
	#APPEND_UINT
(
vÆue_
) \

220 
size_t
 
Àn
; \

221 *
tmp
 = 
	`uöt_to_°rög
((
vÆue_
), 
buf„r
, &
Àn
); \

222 
	`RETURN_0_ON_OVERFLOW
(
Àn
); \

223 
	`APPEND_STRING_LEN
(
tmp
, 
Àn
); \

224 } 0)

	)

226 
	#APPEND_CONSTANT
(
c⁄°_°r_
) \

227 
	`APPEND_STRING_LEN
((
c⁄°_°r_
), (c⁄°_°r_Ë- 1)

	)

229 
ALWAYS_INLINE
 
size_t


230 
	$lw™_¥ï¨e_ª•⁄£_hódî
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
, 
hódîs
[], 
size_t
 
hódîs_buf_size
)

232 *
p_hódîs
;

233 *
p_hódîs_íd
 = 
hódîs
 + 
hódîs_buf_size
;

234 
buf„r
[
INT_TO_STR_BUFFER_SIZE
];

235 
boﬁ
 
d©e_ovîriddí
 = 
Ál£
;

236 
boﬁ
 
expúes_ovîriddí
 = 
Ál£
;

238 
p_hódîs
 = 
hódîs
;

240 i‡(
ªque°
->
Êags
 & 
REQUEST_IS_HTTP_1_0
)

241 
	`APPEND_CONSTANT
("HTTP/1.0 ");

243 
	`APPEND_CONSTANT
("HTTP/1.1 ");

244 
	`APPEND_STRING
(
	`lw™_hâp_°©us_as_°rög_wôh_code
(
°©us
));

246 i‡(
ªque°
->
Êags
 & 
RESPONSE_CHUNKED_ENCODING
) {

247 
	`APPEND_CONSTANT
("\r\nTransfer-Encoding: chunked");

248 } i‡(
ªque°
->
Êags
 & 
RESPONSE_NO_CONTENT_LENGTH
) {

251 
	`APPEND_CONSTANT
("\r\nContent-Length: ");

252 i‡(
ªque°
->
ª•⁄£
.
°ªam
.
ˇŒback
)

253 
	`APPEND_UINT
(
ªque°
->
ª•⁄£
.
c⁄ã¡_Àngth
);

255 
	`APPEND_UINT
(
	`°rbuf_gë_Àngth
(
ªque°
->
ª•⁄£
.
buf„r
));

258 
	`APPEND_CONSTANT
("\r\nContent-Type: ");

259 
	`APPEND_STRING
(
ªque°
->
ª•⁄£
.
mime_ty≥
);

261 i‡(
ªque°
->
c⁄n
->
Êags
 & 
CONN_KEEP_ALIVE
)

262 
	`APPEND_CONSTANT
("\r\nConnection: keep-alive");

264 
	`APPEND_CONSTANT
("\r\nConnection: close");

266 i‡((
°©us
 < 
HTTP_BAD_REQUEST
 && 
ªque°
->
ª•⁄£
.
hódîs
)) {

267 
lw™_key_vÆue_t
 *
hódî
;

269 
hódî
 = 
ªque°
->
ª•⁄£
.
hódîs
; hódî->
key
; header++) {

270 i‡(
	`UNLIKELY
(!
	`°rcmp
(
hódî
->
key
, "Server")))

272 i‡(
	`UNLIKELY
(!
	`°rcmp
(
hódî
->
key
, "Date")))

273 
d©e_ovîriddí
 = 
åue
;

274 i‡(
	`UNLIKELY
(!
	`°rcmp
(
hódî
->
key
, "Expires")))

275 
expúes_ovîriddí
 = 
åue
;

277 
	`RETURN_0_ON_OVERFLOW
(4);

278 
	`APPEND_CHAR_NOCHECK
('\r');

279 
	`APPEND_CHAR_NOCHECK
('\n');

280 
	`APPEND_STRING
(
hódî
->
key
);

281 
	`APPEND_CHAR_NOCHECK
(':');

282 
	`APPEND_CHAR_NOCHECK
(' ');

283 
	`APPEND_STRING
(
hódî
->
vÆue
);

285 } i‡(
°©us
 =
HTTP_NOT_AUTHORIZED
) {

286 
lw™_key_vÆue_t
 *
hódî
;

288 
hódî
 = 
ªque°
->
ª•⁄£
.
hódîs
; hódî->
key
; header++) {

289 i‡(!
	`°rcmp
(
hódî
->
key
, "WWW-Authenticate")) {

290 
	`APPEND_CONSTANT
("\r\nWWW-Authenticate: ");

291 
	`APPEND_STRING
(
hódî
->
vÆue
);

297 i‡(
	`LIKELY
(!
d©e_ovîriddí
)) {

298 
	`APPEND_CONSTANT
("\r\nDate: ");

299 
	`APPEND_STRING_LEN
(
ªque°
->
c⁄n
->
thªad
->
d©e
.date, 29);

302 i‡(
	`LIKELY
(!
expúes_ovîriddí
)) {

303 
	`APPEND_CONSTANT
("\r\nExpires: ");

304 
	`APPEND_STRING_LEN
(
ªque°
->
c⁄n
->
thªad
->
d©e
.
expúes
, 29);

307 
	`APPEND_CONSTANT
("\r\nServer:Üwan\r\n\r\n\0");

309  (
size_t
)(
p_hódîs
 - 
hódîs
 - 1);

310 
	}
}

312 #unde‡
APPEND_CHAR


313 #unde‡
APPEND_CHAR_NOCHECK


314 #unde‡
APPEND_CONSTANT


315 #unde‡
APPEND_STRING


316 #unde‡
APPEND_STRING_LEN


317 #unde‡
APPEND_UINT


318 #unde‡
RETURN_0_ON_OVERFLOW


320 
boﬁ


321 
	$lw™_ª•⁄£_£t_chunked
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
)

323 
buf„r
[
DEFAULT_BUFFER_SIZE
];

324 
size_t
 
buf„r_Àn
;

326 i‡(
ªque°
->
Êags
 & 
RESPONSE_SENT_HEADERS
)

327  
Ál£
;

329 
ªque°
->
Êags
 |
RESPONSE_CHUNKED_ENCODING
;

330 
buf„r_Àn
 = 
	`lw™_¥ï¨e_ª•⁄£_hódî
(
ªque°
, 
°©us
,

331 
buf„r
, 
DEFAULT_BUFFER_SIZE
);

332 i‡(
	`UNLIKELY
(!
buf„r_Àn
))

333  
Ál£
;

335 
ªque°
->
Êags
 |
RESPONSE_SENT_HEADERS
;

336 
	`lw™_£nd
(
ªque°
, 
buf„r
, 
buf„r_Àn
, 
MSG_MORE
);

338  
åue
;

339 
	}
}

342 
	$lw™_ª•⁄£_£nd_chunk
(
lw™_ªque°_t
 *
ªque°
)

344 i‡(!(
ªque°
->
Êags
 & 
RESPONSE_SENT_HEADERS
)) {

345 i‡(
	`UNLIKELY
(!
	`lw™_ª•⁄£_£t_chunked
(
ªque°
, 
HTTP_OK
)))

349 
size_t
 
buf„r_Àn
 = 
	`°rbuf_gë_Àngth
(
ªque°
->
ª•⁄£
.
buf„r
);

350 i‡(
	`UNLIKELY
(!
buf„r_Àn
)) {

351 c⁄° 
œ°_chunk
[] = "0\r\n\r\n";

352 
	`lw™_£nd
(
ªque°
, 
œ°_chunk
, (last_chunk) - 1, 0);

356 
chunk_size
[3 * (
size_t
) + 2];

357 
c⁄vîãd_Àn
 = 
	`¢¥ötf
(
chunk_size
, (chunk_size), "%zx\r\n", 
buf„r_Àn
);

358 i‡(
	`UNLIKELY
(
c⁄vîãd_Àn
 < 0))

359 
ab‹t_c‹o
;

360 
size_t
 
chunk_size_Àn
 = (size_t)
c⁄vîãd_Àn
;

362 
iovec
 
chunk_vec
[] = {

363 { .
iov_ba£
 = 
chunk_size
, .
iov_Àn
 = 
chunk_size_Àn
 },

364 { .
iov_ba£
 = 
	`°rbuf_gë_buf„r
(
ªque°
->
ª•⁄£
.
buf„r
), .
iov_Àn
 = 
buf„r_Àn
 },

365 { .
iov_ba£
 = "\r\n", .
iov_Àn
 = 2 }

368 
	`lw™_wrôev
(
ªque°
, 
chunk_vec
, 
	`N_ELEMENTS
(chunk_vec));

370 i‡(
	`LIKELY
(
	`°rbuf_ª£t_Àngth
(
ªque°
->
ª•⁄£
.
buf„r
))) {

371 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_MAY_RESUME
);

375 
ab‹t_c‹o
:

376 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_ABORT
);

377 
	`__buûtö_uƒóchabÀ
();

378 
	}
}

380 
boﬁ


381 
	$lw™_ª•⁄£_£t_evít_°ªam
(
lw™_ªque°_t
 *
ªque°
,

382 
lw™_hâp_°©us_t
 
°©us
)

384 
buf„r
[
DEFAULT_BUFFER_SIZE
];

385 
size_t
 
buf„r_Àn
;

387 i‡(
ªque°
->
Êags
 & 
RESPONSE_SENT_HEADERS
)

388  
Ál£
;

390 
ªque°
->
ª•⁄£
.
mime_ty≥
 = "text/event-stream";

391 
ªque°
->
Êags
 |
RESPONSE_NO_CONTENT_LENGTH
;

392 
buf„r_Àn
 = 
	`lw™_¥ï¨e_ª•⁄£_hódî
(
ªque°
, 
°©us
,

393 
buf„r
, 
DEFAULT_BUFFER_SIZE
);

394 i‡(
	`UNLIKELY
(!
buf„r_Àn
))

395  
Ál£
;

397 
ªque°
->
Êags
 |
RESPONSE_SENT_HEADERS
;

398 
	`lw™_£nd
(
ªque°
, 
buf„r
, 
buf„r_Àn
, 
MSG_MORE
);

400  
åue
;

401 
	}
}

404 
	$lw™_ª•⁄£_£nd_evít
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
evít
)

406 i‡(!(
ªque°
->
Êags
 & 
RESPONSE_SENT_HEADERS
)) {

407 i‡(
	`UNLIKELY
(!
	`lw™_ª•⁄£_£t_evít_°ªam
(
ªque°
, 
HTTP_OK
)))

411 
iovec
 
vec
[6];

412 
œ°
 = 0;

414 i‡(
evít
) {

415 
vec
[
œ°
].
iov_ba£
 = "event: ";

416 
vec
[
œ°
].
iov_Àn
 = ("event: ") - 1;

417 
œ°
++;

419 
vec
[
œ°
].
iov_ba£
 = (*)
evít
;

420 
vec
[
œ°
].
iov_Àn
 = 
	`°æí
(
evít
);

421 
œ°
++;

423 
vec
[
œ°
].
iov_ba£
 = "\r\n";

424 
vec
[
œ°
].
iov_Àn
 = 2;

425 
œ°
++;

428 
size_t
 
buf„r_Àn
 = 
	`°rbuf_gë_Àngth
(
ªque°
->
ª•⁄£
.
buf„r
);

429 i‡(
buf„r_Àn
) {

430 
vec
[
œ°
].
iov_ba£
 = "data: ";

431 
vec
[
œ°
].
iov_Àn
 = ("data: ") - 1;

432 
œ°
++;

434 
vec
[
œ°
].
iov_ba£
 = 
	`°rbuf_gë_buf„r
(
ªque°
->
ª•⁄£
.
buf„r
);

435 
vec
[
œ°
].
iov_Àn
 = 
buf„r_Àn
;

436 
œ°
++;

440 
vec
[
œ°
].
iov_ba£
 = "\r\n\r\n";

441 
vec
[
œ°
].
iov_Àn
 = 4;

442 
œ°
++;

444 
	`lw™_wrôev
(
ªque°
, 
vec
, 
œ°
);

446 i‡(
	`UNLIKELY
(!
	`°rbuf_ª£t_Àngth
(
ªque°
->
ª•⁄£
.
buf„r
))) {

447 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_ABORT
);

448 
	`__buûtö_uƒóchabÀ
();

451 
	`c‹o_yõld
(
ªque°
->
c⁄n
->
c‹o
, 
CONN_CORO_MAY_RESUME
);

452 
	}
}

	@common/lwan-serve-files.c

20 
	#_GNU_SOURCE


	)

21 
	~<dúít.h
>

22 
	~<î∫o.h
>

23 
	~<f˙é.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<sys/mm™.h
>

27 
	~<sys/°©.h
>

28 
	~<zlib.h
>

30 
	~"lw™.h
"

31 
	~"lw™-ˇche.h
"

32 
	~"lw™-io-wøµîs.h
"

33 
	~"lw™-£rve-fûes.h
"

34 
	~"lw™-ãm∂©e.h
"

35 
	~"ªÆ∑th©.h
"

36 
	~"hash.h
"

38 
	#SET_NTH_HEADER
(
numbî_
, 
key_
, 
vÆue_
) \

40 
hódîs
[
numbî_
].
key
 = (
key_
); \

41 
hódîs
[
numbî_
].
vÆue
 = (
vÆue_
); \

42 } 0)

	)

44 
£rve_fûes_¥iv_t_
 
	t£rve_fûes_¥iv_t
;

45 
fûe_ˇche_íåy_t_
 
	tfûe_ˇche_íåy_t
;

46 
ˇche_funcs_t_
 
	tˇche_funcs_t
;

47 
mm≠_ˇche_d©a_t_
 
	tmm≠_ˇche_d©a_t
;

48 
£ndfûe_ˇche_d©a_t_
 
	t£ndfûe_ˇche_d©a_t
;

49 
dú_li°_ˇche_d©a_t_
 
	tdú_li°_ˇche_d©a_t
;

50 
ªdú_ˇche_d©a_t_
 
	tªdú_ˇche_d©a_t
;

52 
	s£rve_fûes_¥iv_t_
 {

54 *
	m∑th
;

55 
size_t
 
	m∑th_Àn
;

56 
	mfd
;

57 } 
	mroŸ
;

59 
	m›í_mode
;

60 c⁄° *
	mödex_html
;

62 
ˇche_t
 *
	mˇche
;

63 
lw™_çl_t
 *
	mdúe˘‹y_li°_çl
;

66 
	sˇche_funcs_t_
 {

67 
lw™_hâp_°©us_t
 (*
£rve
)(
lw™_ªque°_t
 *
	mªque°
,

68 *
	md©a
);

69 
boﬁ
 (*
öô
)(
fûe_ˇche_íåy_t
 *
	m˚
,

70 
£rve_fûes_¥iv_t
 *
	m¥iv
,

71 c⁄° *
	mfuŒ_∑th
,

72 
°©
 *
	m°
);

73 (*
	m‰ì
)(*
	md©a
);

74 
size_t
 
	m°ru˘_size
;

77 
	smm≠_ˇche_d©a_t_
 {

79 *
	mc⁄ã¡s
;

81 
	msize
;

82 } 
	mcom¥es£d
, 
	muncom¥es£d
;

85 
	s£ndfûe_ˇche_d©a_t_
 {

92 *
	mfûíame
;

93 
size_t
 
	msize
;

96 
	sdú_li°_ˇche_d©a_t_
 {

97 
°rbuf_t
 *
	mªndîed
;

100 
	sªdú_ˇche_d©a_t_
 {

101 *
	mªdú_to
;

104 
	sfûe_ˇche_íåy_t_
 {

105 
ˇche_íåy_t
 
	mba£
;

108 
	m°rög
[31];

109 
time_t
 
	möãgî
;

110 } 
	mœ°_modifõd
;

112 c⁄° *
	mmime_ty≥
;

113 c⁄° 
ˇche_funcs_t
 *
	mfuncs
;

116 
	sfûe_li°_t
 {

117 c⁄° *
	mfuŒ_∑th
;

118 c⁄° *
	mªl_∑th
;

120 
lw™_çl_li°_gíî©‹_t
 
	mgíî©‹
;

122 c⁄° *
	mic⁄
;

123 c⁄° *
	mic⁄_Æt
;

124 c⁄° *
	m«me
;

125 c⁄° *
	mty≥
;

127 
	msize
;

128 c⁄° *
	munô
;

129 } 
	mfûe_li°
;

132 
dúe˘‹y_li°_gíî©‹
(
c‹o_t
 *
c‹o
);

134 
boﬁ
 
mm≠_öô
(
fûe_ˇche_íåy_t
 *
˚
, 
£rve_fûes_¥iv_t
 *
¥iv
,

135 c⁄° *
fuŒ_∑th
, 
°©
 *
°
);

136 
mm≠_‰ì
(*
d©a
);

137 
lw™_hâp_°©us_t
 
mm≠_£rve
(
lw™_ªque°_t
 *
ªque°
, *
d©a
);

138 
boﬁ
 
£ndfûe_öô
(
fûe_ˇche_íåy_t
 *
˚
, 
£rve_fûes_¥iv_t
 *
¥iv
,

139 c⁄° *
fuŒ_∑th
, 
°©
 *
°
);

140 
£ndfûe_‰ì
(*
d©a
);

141 
lw™_hâp_°©us_t
 
£ndfûe_£rve
(
lw™_ªque°_t
 *
ªque°
, *
d©a
);

142 
boﬁ
 
dúli°_öô
(
fûe_ˇche_íåy_t
 *
˚
, 
£rve_fûes_¥iv_t
 *
¥iv
,

143 c⁄° *
fuŒ_∑th
, 
°©
 *
°
);

144 
dúli°_‰ì
(*
d©a
);

145 
lw™_hâp_°©us_t
 
dúli°_£rve
(
lw™_ªque°_t
 *
ªque°
, *
d©a
);

146 
boﬁ
 
ªdú_öô
(
fûe_ˇche_íåy_t
 *
˚
, 
£rve_fûes_¥iv_t
 *
¥iv
,

147 c⁄° *
fuŒ_∑th
, 
°©
 *
°
);

148 
ªdú_‰ì
(*
d©a
);

149 
lw™_hâp_°©us_t
 
ªdú_£rve
(
lw™_ªque°_t
 *
ªque°
, *
d©a
);

152 c⁄° 
ˇche_funcs_t
 
	gmm≠_funcs
 = {

153 .
öô
 = 
mm≠_öô
,

154 .
	g‰ì
 = 
mm≠_‰ì
,

155 .
	g£rve
 = 
mm≠_£rve
,

156 .
	g°ru˘_size
 = (
mm≠_ˇche_d©a_t
)

159 c⁄° 
ˇche_funcs_t
 
	g£ndfûe_funcs
 = {

160 .
öô
 = 
£ndfûe_öô
,

161 .
	g‰ì
 = 
£ndfûe_‰ì
,

162 .
	g£rve
 = 
£ndfûe_£rve
,

163 .
	g°ru˘_size
 = (
£ndfûe_ˇche_d©a_t
)

166 c⁄° 
ˇche_funcs_t
 
	gdúli°_funcs
 = {

167 .
öô
 = 
dúli°_öô
,

168 .
	g‰ì
 = 
dúli°_‰ì
,

169 .
	g£rve
 = 
dúli°_£rve
,

170 .
	g°ru˘_size
 = (
dú_li°_ˇche_d©a_t
)

173 c⁄° 
ˇche_funcs_t
 
	gªdú_funcs
 = {

174 .
öô
 = 
ªdú_öô
,

175 .
	g‰ì
 = 
ªdú_‰ì
,

176 .
	g£rve
 = 
ªdú_£rve
,

177 .
	g°ru˘_size
 = (
ªdú_ˇche_d©a_t
)

180 c⁄° 
lw™_v¨_des¸ùt‹_t
 
	gfûe_li°_ôem_desc
[] = {

181 
TPL_VAR_STR
(
fûe_li°_t
, 
fûe_li°
.
ic⁄
),

182 
TPL_VAR_STR
(
fûe_li°_t
, 
fûe_li°
.
ic⁄_Æt
),

183 
TPL_VAR_STR_ESCAPE
(
fûe_li°_t
, 
fûe_li°
.
«me
),

184 
TPL_VAR_STR
(
fûe_li°_t
, 
fûe_li°
.
ty≥
),

185 
TPL_VAR_INT
(
fûe_li°_t
, 
fûe_li°
.
size
),

186 
TPL_VAR_STR
(
fûe_li°_t
, 
fûe_li°
.
unô
),

187 
TPL_VAR_SENTINEL


190 c⁄° 
lw™_v¨_des¸ùt‹_t
 
	gfûe_li°_desc
[] = {

191 
TPL_VAR_STR_ESCAPE
(
fûe_li°_t
, 
fuŒ_∑th
),

192 
TPL_VAR_STR_ESCAPE
(
fûe_li°_t
, 
ªl_∑th
),

193 
TPL_VAR_SEQUENCE
(
fûe_li°_t
, 
fûe_li°
,

194 
dúe˘‹y_li°_gíî©‹
, 
fûe_li°_ôem_desc
),

195 
TPL_VAR_SENTINEL


198 c⁄° *
	gdúe˘‹y_li°_çl_°r
 = "<html>\n"

233 
	$dúe˘‹y_li°_gíî©‹
(
c‹o_t
 *
c‹o
)

235 
DIR
 *
dú
;

236 
dúít
 
íåy
, *
buf„r
;

237 
fûe_li°_t
 *
Ê
 = 
	`c‹o_gë_d©a
(
c‹o
);

238 
fd
;

240 
dú
 = 
	`›ídú
(
Ê
->
fuŒ_∑th
);

241 i‡(!
dú
)

244 
fd
 = 
	`dúfd
(
dú
);

245 i‡(
fd
 < 0)

246 
out
;

248 !
	`ªaddú_r
(
dú
, &
íåy
, &
buf„r
)) {

249 
°©
 
°
;

251 i‡(!
buf„r
)

254 i‡(
íåy
.
d_«me
[0] == '.')

257 i‡(
	`f°©©
(
fd
, 
íåy
.
d_«me
, &
°
, 0) < 0)

260 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

261 
Ê
->
fûe_li°
.
ic⁄
 = "folder";

262 
Ê
->
fûe_li°
.
ic⁄_Æt
 = "DIR";

263 
Ê
->
fûe_li°
.
ty≥
 = "directory";

264 } i‡(
	`S_ISREG
(
°
.
°_mode
)) {

265 
Ê
->
fûe_li°
.
ic⁄
 = "file";

266 
Ê
->
fûe_li°
.
ic⁄_Æt
 = "FILE";

267 
Ê
->
fûe_li°
.
ty≥
 = 
	`lw™_dëîmöe_mime_ty≥_f‹_fûe_«me
(
íåy
.
d_«me
);

272 i‡(
°
.
°_size
 < 1024) {

273 
Ê
->
fûe_li°
.
size
 = ()
°
.
°_size
;

274 
Ê
->
fûe_li°
.
unô
 = "B";

275 } i‡(
°
.
°_size
 < 1024 * 1024) {

276 
Ê
->
fûe_li°
.
size
 = ()(
°
.
°_size
 / 1024);

277 
Ê
->
fûe_li°
.
unô
 = "KiB";

278 } i‡(
°
.
°_size
 < 1024 * 1024 * 1024) {

279 
Ê
->
fûe_li°
.
size
 = ()(
°
.
°_size
 / (1024 * 1024));

280 
Ê
->
fûe_li°
.
unô
 = "MiB";

282 
Ê
->
fûe_li°
.
size
 = ()(
°
.
°_size
 / (1024 * 1024 * 1024));

283 
Ê
->
fûe_li°
.
unô
 = "GiB";

286 
Ê
->
fûe_li°
.
«me
 = 
íåy
.
d_«me
;

288 i‡(
	`c‹o_yõld
(
c‹o
, 1))

292 
out
:

293 
	`˛o£dú
(
dú
);

295 
	}
}

298 
	$com¥ess_ˇched_íåy
(
mm≠_ˇche_d©a_t
 *
md
)

300 c⁄° 
size_t
 
deÊ©ed_hódî_size
 = ("Content-Encoding: deflate");

302 
md
->
com¥es£d
.
size
 = 
	`com¥essBound
(md->
uncom¥es£d
.size);

304 i‡(
	`UNLIKELY
(!(
md
->
com¥es£d
.
c⁄ã¡s
 = 
	`mÆloc
(md->com¥es£d.
size
))))

305 
îr‹_zîo_out
;

307 i‡(
	`UNLIKELY
(
	`com¥ess
(
md
->
com¥es£d
.
c⁄ã¡s
, &md->com¥es£d.
size
,

308 
md
->
uncom¥es£d
.
c⁄ã¡s
, md->uncom¥es£d.
size
Ë!
Z_OK
))

309 
îr‹_‰ì_com¥es£d
;

311 i‡((
md
->
com¥es£d
.
size
 + 
deÊ©ed_hódî_size
Ë< md->
uncom¥es£d
.size)

314 
îr‹_‰ì_com¥es£d
:

315 
	`‰ì
(
md
->
com¥es£d
.
c⁄ã¡s
);

316 
md
->
com¥es£d
.
c⁄ã¡s
 = 
NULL
;

317 
îr‹_zîo_out
:

318 
md
->
com¥es£d
.
size
 = 0;

319 
	}
}

321 
boﬁ


322 
	$mm≠_öô
(
fûe_ˇche_íåy_t
 *
˚
,

323 
£rve_fûes_¥iv_t
 *
¥iv
,

324 c⁄° *
fuŒ_∑th
,

325 
°©
 *
°
)

327 
mm≠_ˇche_d©a_t
 *
md
 = (mm≠_ˇche_d©a_à*)(
˚
 + 1);

328 
fûe_fd
;

329 
boﬁ
 
suc˚ss
;

331 
fûe_fd
 = 
	`›í©
(
¥iv
->
roŸ
.
fd
, 
fuŒ_∑th
 +Öriv->roŸ.
∑th_Àn
 + 1,

332 
¥iv
->
›í_mode
);

333 i‡(
	`UNLIKELY
(
fûe_fd
 < 0))

334  
Ál£
;

336 
md
->
uncom¥es£d
.
c⁄ã¡s
 = 
	`mm≠
(
NULL
, (
size_t
)
°
->
°_size
, 
PROT_READ
,

337 
MAP_SHARED
, 
fûe_fd
, 0);

338 i‡(
	`UNLIKELY
(
md
->
uncom¥es£d
.
c⁄ã¡s
 =
MAP_FAILED
)) {

339 
suc˚ss
 = 
Ál£
;

340 
˛o£_fûe
;

343 i‡(
	`UNLIKELY
(
	`madvi£
(
md
->
uncom¥es£d
.
c⁄ã¡s
, (
size_t
)
°
->
°_size
,

344 
MADV_WILLNEED
) < 0))

345 
	`lw™_°©us_≥º‹
("madvise");

347 
md
->
uncom¥es£d
.
size
 = (
size_t
)
°
->
°_size
;

348 
	`com¥ess_ˇched_íåy
(
md
);

350 
˚
->
mime_ty≥
 = 
	`lw™_dëîmöe_mime_ty≥_f‹_fûe_«me
(

351 
fuŒ_∑th
 + 
¥iv
->
roŸ
.
∑th_Àn
);

353 
suc˚ss
 = 
åue
;

355 
˛o£_fûe
:

356 
	`˛o£
(
fûe_fd
);

358  
suc˚ss
;

359 
	}
}

361 
boﬁ


362 
	$£ndfûe_öô
(
fûe_ˇche_íåy_t
 *
˚
,

363 
£rve_fûes_¥iv_t
 *
¥iv
,

364 c⁄° *
fuŒ_∑th
,

365 
°©
 *
°
)

367 
£ndfûe_ˇche_d©a_t
 *
sd
 = (£ndfûe_ˇche_d©a_à*)(
˚
 + 1);

369 
sd
->
size
 = (
size_t
)
°
->
°_size
;

370 
sd
->
fûíame
 = 
	`°rdup
(
fuŒ_∑th
 + 
¥iv
->
roŸ
.
∑th_Àn
 + 1);

372 
˚
->
mime_ty≥
 = 
	`lw™_dëîmöe_mime_ty≥_f‹_fûe_«me
(

373 
fuŒ_∑th
 + 
¥iv
->
roŸ
.
∑th_Àn
);

375  !!
sd
->
fûíame
;

376 
	}
}

378 
boﬁ


379 
dúli°_öô
(
fûe_ˇche_íåy_t
 *
˚
,

380 
£rve_fûes_¥iv_t
 *
¥iv
,

381 c⁄° *
fuŒ_∑th
,

382 
°©
 *
°
 
__©åibuã__
((
unu£d
)))

384 
dú_li°_ˇche_d©a_t
 *
	gdd
 = (dú_li°_ˇche_d©a_à*)(
˚
 + 1);

385 
fûe_li°_t
 
	gv¨s
 = {

386 .
fuŒ_∑th
 = full_path,

387 .
	gªl_∑th
 = 
fuŒ_∑th
 + 
¥iv
->
roŸ
.
∑th_Àn


390 
	gdd
->
	gªndîed
 = 
lw™_çl_≠∂y
(
¥iv
->
dúe˘‹y_li°_çl
, &
v¨s
);

391 
	g˚
->
	gmime_ty≥
 = "text/html";

393  !!
	gdd
->
	gªndîed
;

396 
boﬁ


397 
ªdú_öô
(
fûe_ˇche_íåy_t
 *
˚
,

398 
£rve_fûes_¥iv_t
 *
¥iv
,

399 c⁄° *
fuŒ_∑th
,

400 
°©
 *
°
 
__©åibuã__
((
unu£d
)))

402 
ªdú_ˇche_d©a_t
 *
	grd
 = (ªdú_ˇche_d©a_à*)(
˚
 + 1);

404 i‡(
a•rötf
(&
rd
->
ªdú_to
, "%s/", 
fuŒ_∑th
 + 
¥iv
->
roŸ
.
∑th_Àn
) < 0)

405  
	gÁl£
;

407 
	g˚
->
	gmime_ty≥
 = "text/plain";

408  
	gåue
;

411 c⁄° 
ˇche_funcs_t
 *

412 
	$gë_funcs
(
£rve_fûes_¥iv_t
 *
¥iv
, c⁄° *
key
, *
fuŒ_∑th
,

413 
°©
 *
°
)

415 
ödex_html_∑th_buf
[
PATH_MAX
];

416 *
ödex_html_∑th
 = 
ödex_html_∑th_buf
;

418 i‡(
	`S_ISDIR
(
°
->
°_mode
)) {

422 i‡(*
key
 == '\0') {

423 
ödex_html_∑th
 = (*)
¥iv
->
ödex_html
;

428 c⁄° *
key_íd
 = 
	`øwmemchr
(
key
, '\0');

429 i‡(*(
key_íd
 - 1) != '/')

430  &
ªdú_funcs
;

432 i‡(
	`UNLIKELY
(
	`¢¥ötf
(
ödex_html_∑th
, 
PATH_MAX
, "%s%s",

433 
key
, 
¥iv
->
ödex_html
) < 0))

434  
NULL
;

438 i‡(
	`f°©©
(
¥iv
->
roŸ
.
fd
, 
ödex_html_∑th
, 
°
, 0) < 0) {

439 i‡(
	`UNLIKELY
(
î∫o
 !
ENOENT
))

440  
NULL
;

443  &
dúli°_funcs
;

449 i‡(
	`UNLIKELY
(
¥iv
->
roŸ
.
∑th_Àn
 + 1 +

450 
	`°æí
(
ödex_html_∑th
Ë+ 1 >
PATH_MAX
))

451  
NULL
;

453 
fuŒ_∑th
[
¥iv
->
roŸ
.
∑th_Àn
] = '/';

454 
	`°∫˝y
(
fuŒ_∑th
 + 
¥iv
->
roŸ
.
∑th_Àn
 + 1, 
ödex_html_∑th
,

455 
PATH_MAX
 - 
¥iv
->
roŸ
.
∑th_Àn
 - 1);

460 i‡(
°
->
°_size
 < 16384)

461  &
mm≠_funcs
;

463  &
£ndfûe_funcs
;

464 
	}
}

466 
fûe_ˇche_íåy_t
 *

467 
	$¸óã_ˇche_íåy_‰om_funcs
(
£rve_fûes_¥iv_t
 *
¥iv
, c⁄° *
fuŒ_∑th
,

468 
°©
 *
°
, c⁄° 
ˇche_funcs_t
 *
funcs
)

470 
fûe_ˇche_íåy_t
 *
f˚
;

472 
f˚
 = 
	`mÆloc
((*f˚Ë+ 
funcs
->
°ru˘_size
);

473 i‡(
	`UNLIKELY
(!
f˚
))

474  
NULL
;

476 i‡(
	`LIKELY
(
funcs
->
	`öô
(
f˚
, 
¥iv
, 
fuŒ_∑th
, 
°
))) {

477 
f˚
->
funcs
 = funcs;

478  
f˚
;

481 
	`‰ì
(
f˚
);

483 i‡(
funcs
 !&
mm≠_funcs
)

484  
NULL
;

486  
	`¸óã_ˇche_íåy_‰om_funcs
(
¥iv
, 
fuŒ_∑th
, 
°
, &
£ndfûe_funcs
);

487 
	}
}

489 
ˇche_íåy_t
 *

490 
	$¸óã_ˇche_íåy
(c⁄° *
key
, *
c⁄ãxt
)

492 
£rve_fûes_¥iv_t
 *
¥iv
 = 
c⁄ãxt
;

493 
fûe_ˇche_íåy_t
 *
f˚
;

494 
°©
 
°
;

495 c⁄° 
ˇche_funcs_t
 *
funcs
;

496 
fuŒ_∑th
[
PATH_MAX
];

498 i‡(
	`UNLIKELY
(!
	`ªÆ∑th©2
(
¥iv
->
roŸ
.
fd
,Öriv->roŸ.
∑th
,

499 
key
, 
fuŒ_∑th
, &
°
)))

500  
NULL
;

502 i‡(
	`UNLIKELY
(
	`°∫cmp
(
fuŒ_∑th
, 
¥iv
->
roŸ
.
∑th
,Öriv->roŸ.
∑th_Àn
)))

503  
NULL
;

505 
funcs
 = 
	`gë_funcs
(
¥iv
, 
key
, 
fuŒ_∑th
, &
°
);

506 i‡(
	`UNLIKELY
(!
funcs
))

507  
NULL
;

509 
f˚
 = 
	`¸óã_ˇche_íåy_‰om_funcs
(
¥iv
, 
fuŒ_∑th
, &
°
, 
funcs
);

510 i‡(
	`UNLIKELY
(!
f˚
))

511  
NULL
;

513 
	`lw™_f‹m©_rfc_time
(
°
.
°_mtime
, 
f˚
->
œ°_modifõd
.
°rög
);

514 
f˚
->
œ°_modifõd
.
öãgî
 = 
°
.
°_mtime
;

516  (
ˇche_íåy_t
 *)
f˚
;

517 
	}
}

520 
	$mm≠_‰ì
(*
d©a
)

522 
mm≠_ˇche_d©a_t
 *
md
 = 
d©a
;

524 
	`munm≠
(
md
->
uncom¥es£d
.
c⁄ã¡s
, md->uncom¥es£d.
size
);

525 
	`‰ì
(
md
->
com¥es£d
.
c⁄ã¡s
);

526 
	}
}

529 
	$£ndfûe_‰ì
(*
d©a
)

531 
£ndfûe_ˇche_d©a_t
 *
sd
 = 
d©a
;

533 
	`‰ì
(
sd
->
fûíame
);

534 
	}
}

537 
	$dúli°_‰ì
(*
d©a
)

539 
dú_li°_ˇche_d©a_t
 *
dd
 = 
d©a
;

541 
	`°rbuf_‰ì
(
dd
->
ªndîed
);

542 
	}
}

545 
	$ªdú_‰ì
(*
d©a
)

547 
ªdú_ˇche_d©a_t
 *
rd
 = 
d©a
;

549 
	`‰ì
(
rd
->
ªdú_to
);

550 
	}
}

553 
de°roy_ˇche_íåy
(
ˇche_íåy_t
 *
íåy
, *
c⁄ãxt
 
__©åibuã__
((
unu£d
)))

555 
fûe_ˇche_íåy_t
 *
	gf˚
 = (fûe_ˇche_íåy_à*)
íåy
;

557 
	gf˚
->
	gfuncs
->
‰ì
(
f˚
 + 1);

558 
‰ì
(
f˚
);

562 
	$åy_›í_dúe˘‹y
(c⁄° *
∑th
, *
›í_mode
)

564 
fd
;

566 *
›í_mode
 = 
O_RDONLY
 | 
O_NOATIME
 | 
O_NONBLOCK
;

568 
fd
 = 
	`›í
(
∑th
, *
›í_mode
 | 
O_DIRECTORY
);

569 i‡(
fd
 < 0) {

571 *
›í_mode
 &~
O_NOATIME
;

573 
fd
 = 
	`›í
(
∑th
, *
›í_mode
 | 
O_DIRECTORY
);

574 i‡(
fd
 < 0) {

576 *
›í_mode
 &~
O_NONBLOCK
;

578 
fd
 = 
	`›í
(
∑th
, *
›í_mode
 | 
O_DIRECTORY
);

582  
fd
;

583 
	}
}

586 
	$£rve_fûes_öô
(*
¨gs
)

588 
lw™_£rve_fûes_£âögs_t
 *
£âögs
 = 
¨gs
;

589 *
ˇn⁄iˇl_roŸ
;

590 
roŸ_fd
;

591 
£rve_fûes_¥iv_t
 *
¥iv
;

592 
›í_mode
;

594 i‡(!
£âögs
->
roŸ_∑th
) {

595 
	`lw™_°©us_îr‹
("root_pathÇot specified");

596  
NULL
;

599 
ˇn⁄iˇl_roŸ
 = 
	`ªÆ∑th
(
£âögs
->
roŸ_∑th
, 
NULL
);

600 i‡(!
ˇn⁄iˇl_roŸ
) {

601 
	`lw™_°©us_≥º‹
("CouldÇot obtainÑealÖath of \"%s\"",

602 
£âögs
->
roŸ_∑th
);

603 
out_ªÆ∑th
;

606 
roŸ_fd
 = 
	`åy_›í_dúe˘‹y
(
ˇn⁄iˇl_roŸ
, &
›í_mode
);

607 i‡(
roŸ_fd
 < 0) {

608 
	`lw™_°©us_≥º‹
("CouldÇot open directory \"%s\"",

609 
ˇn⁄iˇl_roŸ
);

610 
out_›í
;

613 
¥iv
 = 
	`mÆloc
((*priv));

614 i‡(!
¥iv
) {

615 
	`lw™_°©us_≥º‹
("malloc");

616 
out_mÆloc
;

619 
¥iv
->
ˇche
 = 
	`ˇche_¸óã
(
¸óã_ˇche_íåy
, 
de°roy_ˇche_íåy
,

620 
¥iv
, 5);

621 i‡(!
¥iv
->
ˇche
) {

622 
	`lw™_°©us_îr‹
("Couldn't create cache");

623 
out_ˇche_¸óã
;

626 
¥iv
->
dúe˘‹y_li°_çl
 = 
	`lw™_çl_compûe_°rög
(

627 
dúe˘‹y_li°_çl_°r
, 
fûe_li°_desc
);

628 i‡(!
¥iv
->
dúe˘‹y_li°_çl
) {

629 
	`lw™_°©us_îr‹
("CouldÇot compile directoryÜistÅemplate");

630 
out_çl_compûe
;

633 
¥iv
->
roŸ
.
∑th
 = 
ˇn⁄iˇl_roŸ
;

634 
¥iv
->
roŸ
.
∑th_Àn
 = 
	`°æí
(
ˇn⁄iˇl_roŸ
);

635 
¥iv
->
roŸ
.
fd
 = 
roŸ_fd
;

636 
¥iv
->
›í_mode
 = open_mode;

637 
¥iv
->
ödex_html
 = 
£âögs
->index_html ? settings->index_html : "index.html";

639  
¥iv
;

641 
out_çl_compûe
:

642 
	`ˇche_de°roy
(
¥iv
->
ˇche
);

643 
out_ˇche_¸óã
:

644 
	`‰ì
(
¥iv
);

645 
out_mÆloc
:

646 
	`˛o£
(
roŸ_fd
);

647 
out_›í
:

648 
	`‰ì
(
ˇn⁄iˇl_roŸ
);

649 
out_ªÆ∑th
:

650  
NULL
;

651 
	}
}

654 
	$£rve_fûes_öô_‰om_hash
(c⁄° 
hash
 *hash)

656 
lw™_£rve_fûes_£âögs_t
 
£âögs
 = {

657 .
roŸ_∑th
 = 
	`hash_föd
(
hash
, "path"),

658 .
ödex_html
 = 
	`hash_föd
(
hash
, "index_path")

660  
	`£rve_fûes_öô
(&
£âögs
);

661 
	}
}

664 
	$£rve_fûes_shutdown
(*
d©a
)

666 
£rve_fûes_¥iv_t
 *
¥iv
 = 
d©a
;

668 i‡(!
¥iv
) {

669 
	`lw™_°©us_w¨nög
("NothingÅo shutdown");

673 
	`lw™_çl_‰ì
(
¥iv
->
dúe˘‹y_li°_çl
);

674 
	`ˇche_de°roy
(
¥iv
->
ˇche
);

675 
	`˛o£
(
¥iv
->
roŸ
.
fd
);

676 
	`‰ì
(
¥iv
->
roŸ
.
∑th
);

677 
	`‰ì
(
¥iv
);

678 
	}
}

680 
ALWAYS_INLINE
 
boﬁ


681 
	$˛õ¡_has_‰esh_c⁄ã¡
(
lw™_ªque°_t
 *
ªque°
, 
time_t
 
mtime
)

683  
ªque°
->
hódî
.
if_modifõd_sö˚
 && 
mtime
 <=Ñequest->header.if_modified_since;

684 
	}
}

686 
size_t


687 
	$¥ï¨e_hódîs
(
lw™_ªque°_t
 *
ªque°
,

688 
lw™_hâp_°©us_t
 
ªtu∫_°©us
,

689 
fûe_ˇche_íåy_t
 *
f˚
,

690 
size_t
 
size
,

691 
boﬁ
 
deÊ©ed
,

692 *
hódî_buf
,

693 
size_t
 
hódî_buf_size
)

695 
lw™_key_vÆue_t
 
hódîs
[3];

697 
ªque°
->
ª•⁄£
.
hódîs
 = headers;

698 
ªque°
->
ª•⁄£
.
c⁄ã¡_Àngth
 = 
size
;

700 
	`SET_NTH_HEADER
(0, "La°-Modifõd", 
f˚
->
œ°_modifõd
.
°rög
);

702 i‡(
deÊ©ed
) {

703 
	`SET_NTH_HEADER
(1, "Content-Encoding", "deflate");

704 
	`SET_NTH_HEADER
(2, 
NULL
, NULL);

706 
	`SET_NTH_HEADER
(1, 
NULL
, NULL);

709  
	`lw™_¥ï¨e_ª•⁄£_hódî
(
ªque°
, 
ªtu∫_°©us
,

710 
hódî_buf
, 
hódî_buf_size
);

711 
	}
}

713 
ALWAYS_INLINE
 
lw™_hâp_°©us_t


714 
	$compuã_ønge
(
lw™_ªque°_t
 *
ªque°
, 
off_t
 *
‰om
, off_à*
to
, off_à
size
)

716 
off_t
 
f
, 
t
;

718 
f
 = 
ªque°
->
hódî
.
ønge
.
‰om
;

719 
t
 = 
ªque°
->
hódî
.
ønge
.
to
;

724 i‡(
	`LIKELY
(
t
 <0 && 
f
 <= 0)) {

725 *
‰om
 = 0;

726 *
to
 = 
size
;

727  
HTTP_OK
;

733 i‡(
	`UNLIKELY
(
t
 >
f
))

734  
HTTP_RANGE_UNSATISFIABLE
;

739 i‡(
	`UNLIKELY
(
f
 >
size
 || 
t
 >= size))

740  
HTTP_RANGE_UNSATISFIABLE
;

745 i‡(
t
 < 0)

746 
t
 = 
size
 - 
f
;

748 
t
 -
f
;

754 i‡(
	`UNLIKELY
(
t
 <= 0))

755  
HTTP_RANGE_UNSATISFIABLE
;

757 *
‰om
 = 
f
;

758 *
to
 = 
t
;

760  
HTTP_PARTIAL_CONTENT
;

761 
	}
}

763 
lw™_hâp_°©us_t


764 
	$£ndfûe_£rve
(
lw™_ªque°_t
 *
ªque°
, *
d©a
)

766 
fûe_ˇche_íåy_t
 *
f˚
 = 
d©a
;

767 
£ndfûe_ˇche_d©a_t
 *
sd
 = (£ndfûe_ˇche_d©a_à*)(
f˚
 + 1);

768 
hódîs
[
DEFAULT_BUFFER_SIZE
];

769 
size_t
 
hódî_Àn
;

770 
lw™_hâp_°©us_t
 
ªtu∫_°©us
;

771 
off_t
 
‰om
, 
to
;

773 
ªtu∫_°©us
 = 
	`compuã_ønge
(
ªque°
, &
‰om
, &
to
, (
off_t
)
sd
->
size
);

774 i‡(
	`UNLIKELY
(
ªtu∫_°©us
 =
HTTP_RANGE_UNSATISFIABLE
))

775  
HTTP_RANGE_UNSATISFIABLE
;

777 i‡(
	`˛õ¡_has_‰esh_c⁄ã¡
(
ªque°
, 
f˚
->
œ°_modifõd
.
öãgî
))

778 
ªtu∫_°©us
 = 
HTTP_NOT_MODIFIED
;

780 
hódî_Àn
 = 
	`¥ï¨e_hódîs
(
ªque°
, 
ªtu∫_°©us
,

781 
f˚
, 
sd
->
size
, 
Ál£
,

782 
hódîs
, 
DEFAULT_HEADERS_SIZE
);

783 i‡(
	`UNLIKELY
(!
hódî_Àn
))

784  
HTTP_INTERNAL_ERROR
;

786 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_HEAD
 || 
ªtu∫_°©us
 =
HTTP_NOT_MODIFIED
) {

787 
	`lw™_wrôe
(
ªque°
, 
hódîs
, 
hódî_Àn
);

789 
£rve_fûes_¥iv_t
 *
¥iv
 = 
ªque°
->
ª•⁄£
.
°ªam
.priv;

797 
fûe_fd
 = 
	`lw™_›í©
(
ªque°
, 
¥iv
->
roŸ
.
fd
, 
sd
->
fûíame
,

798 
¥iv
->
›í_mode
);

799 i‡(
	`UNLIKELY
(
fûe_fd
 < 0)) {

800 
fûe_fd
) {

801 -
EACCES
:

802  
HTTP_FORBIDDEN
;

803 -
ENFILE
:

804  
HTTP_UNAVAILABLE
;

806  
HTTP_NOT_FOUND
;

810 
	`lw™_£nd
(
ªque°
, 
hódîs
, 
hódî_Àn
, 
MSG_MORE
);

811 
	`lw™_£ndfûe
(
ªque°
, 
fûe_fd
, 
‰om
, (
size_t
)
to
);

814  
ªtu∫_°©us
;

815 
	}
}

817 
lw™_hâp_°©us_t


818 
	$£rve_c⁄ã¡s_™d_size
(
lw™_ªque°_t
 *
ªque°
, 
fûe_ˇche_íåy_t
 *
f˚
,

819 
boﬁ
 
deÊ©ed
, *
c⁄ã¡s
, 
size_t
 
size
)

821 
hódîs
[
DEFAULT_BUFFER_SIZE
];

822 
size_t
 
hódî_Àn
;

823 
lw™_hâp_°©us_t
 
ªtu∫_°©us
 = 
HTTP_OK
;

825 i‡(
	`˛õ¡_has_‰esh_c⁄ã¡
(
ªque°
, 
f˚
->
œ°_modifõd
.
öãgî
))

826 
ªtu∫_°©us
 = 
HTTP_NOT_MODIFIED
;

828 
hódî_Àn
 = 
	`¥ï¨e_hódîs
(
ªque°
, 
ªtu∫_°©us
,

829 
f˚
, 
size
, 
deÊ©ed
,

830 
hódîs
, 
DEFAULT_HEADERS_SIZE
);

831 i‡(
	`UNLIKELY
(!
hódî_Àn
))

832  
HTTP_INTERNAL_ERROR
;

834 i‡(
ªque°
->
Êags
 & 
REQUEST_METHOD_HEAD
 || 
ªtu∫_°©us
 =
HTTP_NOT_MODIFIED
) {

835 
	`lw™_wrôe
(
ªque°
, 
hódîs
, 
hódî_Àn
);

837 
iovec
 
ª•⁄£_vec
[] = {

838 { .
iov_ba£
 = 
hódîs
, .
iov_Àn
 = 
hódî_Àn
 },

839 { .
iov_ba£
 = 
c⁄ã¡s
, .
iov_Àn
 = 
size
 }

842 
	`lw™_wrôev
(
ªque°
, 
ª•⁄£_vec
, 
	`N_ELEMENTS
(response_vec));

845  
ªtu∫_°©us
;

846 
	}
}

848 
lw™_hâp_°©us_t


849 
	$mm≠_£rve
(
lw™_ªque°_t
 *
ªque°
, *
d©a
)

851 
fûe_ˇche_íåy_t
 *
f˚
 = 
d©a
;

852 
mm≠_ˇche_d©a_t
 *
md
 = (mm≠_ˇche_d©a_à*)(
f˚
 + 1);

853 *
c⁄ã¡s
;

854 
size_t
 
size
;

855 
boﬁ
 
com¥es£d
;

857 i‡(
md
->
com¥es£d
.
size
 && (
ªque°
->
Êags
 & 
REQUEST_ACCEPT_DEFLATE
)) {

858 
c⁄ã¡s
 = 
md
->
com¥es£d
.contents;

859 
size
 = 
md
->
com¥es£d
.size;

860 
com¥es£d
 = 
åue
;

862 
c⁄ã¡s
 = 
md
->
uncom¥es£d
.contents;

863 
size
 = 
md
->
uncom¥es£d
.size;

864 
com¥es£d
 = 
Ál£
;

867  
	`£rve_c⁄ã¡s_™d_size
(
ªque°
, 
f˚
, 
com¥es£d
, 
c⁄ã¡s
, 
size
);

868 
	}
}

870 
lw™_hâp_°©us_t


871 
	$dúli°_£rve
(
lw™_ªque°_t
 *
ªque°
, *
d©a
)

873 
fûe_ˇche_íåy_t
 *
f˚
 = 
d©a
;

874 
dú_li°_ˇche_d©a_t
 *
dd
 = (dú_li°_ˇche_d©a_à*)(
f˚
 + 1);

876  
	`£rve_c⁄ã¡s_™d_size
(
ªque°
, 
f˚
, 
Ál£
,

877 
	`°rbuf_gë_buf„r
(
dd
->
ªndîed
), 
	`°rbuf_gë_Àngth
(dd->rendered));

878 
	}
}

880 
lw™_hâp_°©us_t


881 
	$ªdú_£rve
(
lw™_ªque°_t
 *
ªque°
, *
d©a
)

883 
fûe_ˇche_íåy_t
 *
f˚
 = 
d©a
;

884 
ªdú_ˇche_d©a_t
 *
rd
 = (ªdú_ˇche_d©a_à*)(
f˚
 + 1);

885 
hódî_buf
[
DEFAULT_BUFFER_SIZE
];

886 
size_t
 
hódî_buf_size
;

887 
lw™_key_vÆue_t
 
hódîs
[2];

889 
ªque°
->
ª•⁄£
.
hódîs
 = headers;

890 
ªque°
->
ª•⁄£
.
c⁄ã¡_Àngth
 = 
	`°æí
(
rd
->
ªdú_to
);

892 
	`SET_NTH_HEADER
(0, "Loˇti⁄", 
rd
->
ªdú_to
);

893 
	`SET_NTH_HEADER
(1, 
NULL
, NULL);

895 
hódî_buf_size
 = 
	`lw™_¥ï¨e_ª•⁄£_hódî
(
ªque°
,

896 
HTTP_MOVED_PERMANENTLY
, 
hódî_buf
, 
DEFAULT_BUFFER_SIZE
);

897 i‡(
	`UNLIKELY
(!
hódî_buf_size
))

898  
HTTP_INTERNAL_ERROR
;

900 
iovec
 
ª•⁄£_vec
[] = {

901 { .
iov_ba£
 = 
hódî_buf
, .
iov_Àn
 = 
hódî_buf_size
 },

902 { .
iov_ba£
 = 
rd
->
ªdú_to
, .
iov_Àn
 = 
ªque°
->
ª•⁄£
.
c⁄ã¡_Àngth
 },

905 
	`lw™_wrôev
(
ªque°
, 
ª•⁄£_vec
, 
	`N_ELEMENTS
(response_vec));

907  
HTTP_MOVED_PERMANENTLY
;

908 
	}
}

910 
lw™_hâp_°©us_t


911 
	$£rve_fûes_h™dÀ_cb
(
lw™_ªque°_t
 *
ªque°
, 
lw™_ª•⁄£_t
 *
ª•⁄£
, *
d©a
)

913 
lw™_hâp_°©us_t
 
ªtu∫_°©us
 = 
HTTP_NOT_FOUND
;

914 
£rve_fûes_¥iv_t
 *
¥iv
 = 
d©a
;

915 
ˇche_íåy_t
 *
˚
;

917 i‡(
	`UNLIKELY
(!
¥iv
)) {

918 
ªtu∫_°©us
 = 
HTTP_INTERNAL_ERROR
;

919 
Áû
;

922 
˚
 = 
	`ˇche_c‹o_gë_™d_ªf_íåy
(
¥iv
->
ˇche
, 
ªque°
->
c⁄n
->
c‹o
,

923 
ªque°
->
uæ
.
vÆue
);

924 i‡(
	`LIKELY
(
˚
)) {

925 
fûe_ˇche_íåy_t
 *
f˚
 = (fûe_ˇche_íåy_à*)
˚
;

926 
ª•⁄£
->
mime_ty≥
 = 
f˚
->mime_type;

927 
ª•⁄£
->
°ªam
.
ˇŒback
 = 
f˚
->
funcs
->
£rve
;

928 
ª•⁄£
->
°ªam
.
d©a
 = 
˚
;

929 
ª•⁄£
->
°ªam
.
¥iv
 =Öriv;

931  
HTTP_OK
;

934 
Áû
:

935 
ª•⁄£
->
°ªam
.
ˇŒback
 = 
NULL
;

936  
ªtu∫_°©us
;

937 
	}
}

939 c⁄° 
lw™_moduÀ_t
 *
	$lw™_moduÀ_£rve_fûes
()

941 c⁄° 
lw™_moduÀ_t
 
£rve_fûes
 = {

942 .
«me
 = "serve_files",

943 .
öô
 = 
£rve_fûes_öô
,

944 .
öô_‰om_hash
 = 
£rve_fûes_öô_‰om_hash
,

945 .
shutdown
 = 
£rve_fûes_shutdown
,

946 .
h™dÀ
 = 
£rve_fûes_h™dÀ_cb
,

947 .
Êags
 = 
HANDLER_REMOVE_LEADING_SLASH


948 | 
HANDLER_PARSE_IF_MODIFIED_SINCE


949 | 
HANDLER_PARSE_RANGE


950 | 
HANDLER_PARSE_ACCEPT_ENCODING


953  &
£rve_fûes
;

954 
	}
}

	@common/lwan-serve-files.h

20 #i‚de‡
__LWAN_SERVE_FILES_H__


21 
	#__LWAN_SERVE_FILES_H__


	)

23 
	~"lw™.h
"

25 
	slw™_£rve_fûes_£âögs_t
 {

26 *
	mroŸ_∑th
;

27 *
	mödex_html
;

30 
	#SERVE_FILES_SETTINGS
(
roŸ_∑th_
, 
ödex_html_
) \

31 .
moduÀ
 = 
	`lw™_moduÀ_£rve_fûes
(), \

32 .
¨gs
 = ((
lw™_£rve_fûes_£âögs_t
[]) {{ \

33 .
roŸ_∑th
 = 
roŸ_∑th_
, \

34 .
ödex_html
 = 
ödex_html_
 \

36 .
Êags
 = 0

	)

38 
	#SERVE_FILES
(
roŸ_∑th
) \

39 
	`SERVE_FILES_SETTINGS
(
roŸ_∑th
, 
NULL
)

	)

41 c⁄° 
lw™_moduÀ_t
 *
lw™_moduÀ_£rve_fûes
();

	@common/lwan-socket.c

20 
	#_GNU_SOURCE


	)

21 
	~<¨∑/öë.h
>

22 
	~<f˙é.h
>

23 
	~<√tdb.h
>

24 
	~<√töë/t˝.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<sys/ªsour˚.h
>

28 
	~<sys/sockë.h
>

29 
	~<sys/ty≥s.h
>

30 
	~<uni°d.h
>

32 
	~"lw™.h
"

33 
	~"sd-d´m⁄.h
"

34 
	~"öt-to-°r.h
"

38 
	$gë_backlog_size
()

40 #ifde‡
SOMAXCONN


41 
backlog
 = 
SOMAXCONN
;

43 
backlog
 = 128;

45 
FILE
 *
somaxc⁄n
;

47 
somaxc⁄n
 = 
	`f›í
("/proc/sys/net/core/somaxconn", "r");

48 i‡(
somaxc⁄n
) {

49 
tmp
;

50 i‡(
	`fsˇnf
(
somaxc⁄n
, "%d", &
tmp
) == 1)

51 
backlog
 = 
tmp
;

52 
	`f˛o£
(
somaxc⁄n
);

55  
backlog
;

56 
	}
}

59 
	$£tup_sockë_‰om_sy°emd
()

61 
fd
 = 
SD_LISTEN_FDS_START
;

63 i‡(!
	`sd_is_sockë_öë
(
fd
, 
AF_UNSPEC
, 
SOCK_STREAM
, 1, 0))

64 
	`lw™_°©us_¸ôiˇl
("Passed file descriptor isÇotá "

67  
fd
;

68 
	}
}

70 
ß_Ámûy_t


71 
	$∑r£_li°íî_ùv4
(*
li°íî
, **
node
, **
p‹t
)

73 *
cﬁ⁄
 = 
	`°ºchr
(
li°íî
, ':');

74 i‡(!
cﬁ⁄
) {

75 *
p‹t
 = "8080";

76 i‡(!
	`°rchr
(
li°íî
, '.')) {

78 *
node
 = "0.0.0.0";

81 *
node
 = 
li°íî
;

88 *
cﬁ⁄
 = '\0';

89 *
node
 = 
li°íî
;

90 *
p‹t
 = 
cﬁ⁄
 + 1;

92 i‡(!
	`°rcmp
(*
node
, "*")) {

94 *
node
 = "0.0.0.0";

98  
AF_INET
;

99 
	}
}

101 
ß_Ámûy_t


102 
	$∑r£_li°íî_ùv6
(*
li°íî
, **
node
, **
p‹t
)

104 *
œ°_cﬁ⁄
 = 
	`°ºchr
(
li°íî
, ':');

105 i‡(!
œ°_cﬁ⁄
)

106  
AF_UNSPEC
;

108 i‡(*(
œ°_cﬁ⁄
 - 1) == ']') {

110 *(
œ°_cﬁ⁄
 - 1) = '\0';

111 *
node
 = 
li°íî
 + 1;

112 *
p‹t
 = 
œ°_cﬁ⁄
 + 1;

115 
li°íî
[
	`°æí
(listener) - 1] = '\0';

116 *
node
 = 
li°íî
 + 1;

117 *
p‹t
 = "8080";

120  
AF_INET6
;

121 
	}
}

123 
ß_Ámûy_t


124 
	$∑r£_li°íî
(*
li°íî
, **
node
, **
p‹t
)

126 i‡(*
li°íî
 == '[')

127  
	`∑r£_li°íî_ùv6
(
li°íî
, 
node
, 
p‹t
);

128  
	`∑r£_li°íî_ùv4
(
li°íî
, 
node
, 
p‹t
);

129 
	}
}

132 
	$li°í_addröfo
(
fd
, c⁄° 
addröfo
 *
addr
)

134 i‡(
	`li°í
(
fd
, 
	`gë_backlog_size
()) < 0)

135 
	`lw™_°©us_¸ôiˇl_≥º‹
("listen");

137 
ho°_buf
[
NI_MAXHOST
], 
£rv_buf
[
NI_MAXSERV
];

138 
ªt
 = 
	`gë«meöfo
(
addr
->
ai_addr
,áddr->
ai_addæí
, 
ho°_buf
, (host_buf),

139 
£rv_buf
, (£rv_buf), 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
);

140 i‡(
ªt
)

141 
	`lw™_°©us_¸ôiˇl
("gë«meöfo: %s", 
	`gai_°ªº‹
(
ªt
));

143 i‡(
addr
->
ai_Ámûy
 =
AF_INET6
)

144 
	`lw™_°©us_öfo
("Li°íög o¿hâp://[%s]:%s", 
ho°_buf
, 
£rv_buf
);

146 
	`lw™_°©us_öfo
("Li°íög o¿hâp://%s:%s", 
ho°_buf
, 
£rv_buf
);

148  
fd
;

149 
	}
}

151 
	#SET_SOCKET_OPTION
(
_domaö
,
_›ti⁄
,
_∑øm
,
_size
) \

153 i‡(
	`£tsock›t
(
fd
, (
_domaö
), (
_›ti⁄
), (
_∑øm
), (
_size
)) < 0) \

154 
	`lw™_°©us_¸ôiˇl_≥º‹
("setsockopt"); \

155 } 0)

	)

157 
	#SET_SOCKET_OPTION_MAY_FAIL
(
_domaö
,
_›ti⁄
,
_∑øm
,
_size
) \

159 i‡(
	`£tsock›t
(
fd
, (
_domaö
), (
_›ti⁄
), (
_∑øm
), (
_size
)) < 0) \

160 
	`lw™_°©us_w¨nög
("%sÇot supported byÅhe kernel", \

162 } 0)

	)

164 #i‚de‡
SO_REUSEPORT


165 
	#SO_REUSEPORT
 15

	)

169 
	$böd_™d_li°í_addröfos
(
addröfo
 *
addrs
, 
boﬁ
 
ªu£_p‹t
)

171 c⁄° 
addröfo
 *
addr
;

174 
addr
 = 
addrs
;áddr;ádd∏addr->
ai_√xt
) {

175 
fd
 = 
	`sockë
(
addr
->
ai_Ámûy
,áddr->
ai_sockty≥
,áddr->
ai_¥Ÿocﬁ
);

176 i‡(
fd
 < 0)

179 
	`SET_SOCKET_OPTION
(
SOL_SOCKET
, 
SO_REUSEADDR
, ([]){ 1 }, ());

180 
	`SET_SOCKET_OPTION_MAY_FAIL
(
SOL_SOCKET
, 
SO_REUSEPORT
,

181 ([]){ 
ªu£_p‹t
 }, ());

183 i‡(!
	`böd
(
fd
, 
addr
->
ai_addr
,áddr->
ai_addæí
))

184  
	`li°í_addröfo
(
fd
, 
addr
);

186 
	`˛o£
(
fd
);

189 
	`lw™_°©us_¸ôiˇl
("CouldÇot bind socket");

190 
	}
}

193 
	$£tup_sockë_n‹mÆly
(
lw™_t
 *
l
)

195 *
node
, *
p‹t
;

196 *
li°íî
 = 
	`°rdu∑
(
l
->
c⁄fig
.listener);

197 
ß_Ámûy_t
 
Ámûy
 = 
	`∑r£_li°íî
(
li°íî
, &
node
, &
p‹t
);

198 i‡(
Ámûy
 =
AF_UNSPEC
)

199 
	`lw™_°©us_¸ôiˇl
("CouldÇŸÖ¨£Üi°íî: %s", 
l
->
c⁄fig
.
li°íî
);

201 
addröfo
 *
addrs
;

202 
addröfo
 
höts
 = {

203 .
ai_Ámûy
 = 
Ámûy
,

204 .
ai_sockty≥
 = 
SOCK_STREAM
,

205 .
ai_Êags
 = 
AI_PASSIVE


208 
ªt
 = 
	`gëaddröfo
(
node
, 
p‹t
, &
höts
, &
addrs
);

209 i‡(
ªt
)

210 
	`lw™_°©us_¸ôiˇl
("gëaddröfo: %s", 
	`gai_°ªº‹
(
ªt
));

212 
fd
 = 
	`böd_™d_li°í_addröfos
(
addrs
, 
l
->
c⁄fig
.
ªu£_p‹t
);

213 
	`‰ìaddröfo
(
addrs
);

214  
fd
;

215 
	}
}

217 #i‚de‡
TCP_FASTOPEN


218 
	#TCP_FASTOPEN
 23

	)

222 
	$lw™_sockë_öô
(
lw™_t
 *
l
)

224 
fd
, 
n
;

226 
	`lw™_°©us_debug
("Initializing sockets");

228 
n
 = 
	`sd_li°í_fds
(1);

229 i‡(
n
 > 1) {

230 
	`lw™_°©us_¸ôiˇl
("Too many file descriptorsÑeceived");

231 } i‡(
n
 == 1) {

232 
fd
 = 
	`£tup_sockë_‰om_sy°emd
();

234 
fd
 = 
	`£tup_sockë_n‹mÆly
(
l
);

237 
	`SET_SOCKET_OPTION
(
SOL_SOCKET
, 
SO_LINGER
,

238 ((
lögî
[]){{ .
l_⁄off
 = 1, .
l_lögî
 = 1 }}), (linger));

240 
	`SET_SOCKET_OPTION_MAY_FAIL
(
SOL_TCP
, 
TCP_FASTOPEN
,

242 
	`SET_SOCKET_OPTION_MAY_FAIL
(
SOL_TCP
, 
TCP_QUICKACK
,

245 
l
->
maö_sockë
 = 
fd
;

246 
	}
}

248 #unde‡
SET_SOCKET_OPTION


249 #unde‡
SET_SOCKET_OPTION_MAY_FAIL


	@common/lwan-status.c

20 
	#_GNU_SOURCE


	)

21 
	~<î∫o.h
>

22 
	~<±hªad.h
>

23 
	~<°d¨g.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 #i‚de‡
NDEBUG


29 
	~<uni°d.h
>

30 
	~<sys/sysˇŒ.h
>

33 
	~"lw™.h
"

36 
	mSTATUS_INFO
 = 1<<0,

37 
	mSTATUS_WARNING
 = 1<<1,

38 
	mSTATUS_ERROR
 = 1<<2,

39 
	mSTATUS_PERROR
 = 1<<3,

40 
	mSTATUS_CRITICAL
 = 1<<4,

41 
	mSTATUS_DEBUG
 = 1<<5,

42 } 
	tlw™_°©us_ty≥_t
;

44 vﬁ©ûê
boﬁ
 
	gquõt
 = 
Ál£
;

45 
±hªad_muãx_t
 
	gmuãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

48 
	$lw™_°©us_öô
(
lw™_t
 *
l
)

50 #ifde‡
NDEBUG


51 
quõt
 = 
l
->
c⁄fig
.quiet;

53 
quõt
 = 
Ál£
;

54 (Ë
l
;

56 
	}
}

59 
lw™_°©us_shutdown
(
lw™_t
 *
l
 
__©åibuã__
((
unu£d
)))

64 
	$gë_cﬁ‹_°¨t_f‹_ty≥
(
lw™_°©us_ty≥_t
 
ty≥
, 
size_t
 *
Àn_out
)

66 c⁄° *
ªtvÆ
;

68 i‡(
ty≥
 & 
STATUS_INFO
)

69 
ªtvÆ
 = "\033[36m";

70 i‡(
ty≥
 & 
STATUS_WARNING
)

71 
ªtvÆ
 = "\033[33m";

72 i‡(
ty≥
 & 
STATUS_CRITICAL
)

73 
ªtvÆ
 = "\033[31;1m";

74 i‡(
ty≥
 & 
STATUS_DEBUG
)

75 
ªtvÆ
 = "\033[37m";

76 i‡(
ty≥
 & 
STATUS_PERROR
)

77 
ªtvÆ
 = "\033[35m";

79 
ªtvÆ
 = "\033[32m";

81 *
Àn_out
 = 
	`°æí
(
ªtvÆ
);

83  
ªtvÆ
;

84 
	}
}

87 
gë_cﬁ‹_íd_f‹_ty≥
(
lw™_°©us_ty≥_t
 
ty≥
 
__©åibuã__
((
unu£d
)),

88 
size_t
 *
Àn_out
)

90 c⁄° *
	gªtvÆ
 = "\033[0m";

91 *
	gÀn_out
 = 
°æí
(
ªtvÆ
);

92  
	gªtvÆ
;

96 #ifde‡
NDEBUG


97 
	$°©us_out_msg
(
lw™_°©us_ty≥_t
 
ty≥
, c⁄° *
msg
, 
size_t
 
msg_Àn
)

99 
	$°©us_out_msg
(c⁄° *
fûe
, c⁄° 
löe
, c⁄° *
func
,

100 
lw™_°©us_ty≥_t
 
ty≥
, c⁄° *
msg
, 
size_t
 
msg_Àn
)

103 
îr‹_numbî
 = 
î∫o
;

104 
size_t
 
°¨t_Àn
, 
íd_Àn
;

105 c⁄° *
°¨t_cﬁ‹
 = 
	`gë_cﬁ‹_°¨t_f‹_ty≥
(
ty≥
, &
°¨t_Àn
);

106 c⁄° *
íd_cﬁ‹
 = 
	`gë_cﬁ‹_íd_f‹_ty≥
(
ty≥
, &
íd_Àn
);

108 i‡(
	`UNLIKELY
(
	`±hªad_muãx_lock
(&
muãx
) < 0))

109 
	`≥º‹
("pthread_mutex_lock");

111 #i‚de‡
NDEBUG


112 
	`Ârötf
(
°dout
, "\033[32;1m%ld\033[0m", 
	`sysˇŒ
(
SYS_gëtid
));

113 
	`Ârötf
(
°dout
, " \033[3m%s:%d\033[0m", 
	`ba£«me
(
fûe
), 
löe
);

114 
	`Ârötf
(
°dout
, " \033[33m%s()\033[0m", 
func
);

115 
	`Ârötf
(
°dout
, " ");

118 
	`fwrôe
(
°¨t_cﬁ‹
, 
°¨t_Àn
, 1, 
°dout
);

119 
	`fwrôe
(
msg
, 
msg_Àn
, 1, 
°dout
);

121 i‡(
ty≥
 & 
STATUS_PERROR
) {

122 
buf„r
[512];

123 *
îr‹_msg
 = 
	`°ªº‹_r
(
îr‹_numbî
, 
buf„r
, (buffer) - 1);

124 
	`Âutc
(':', 
°dout
);

125 
	`Âutc
(' ', 
°dout
);

126 
	`fwrôe
(
îr‹_msg
, 
	`°æí
”º‹_msg), 1, 
°dout
);

129 
	`Âutc
('.', 
°dout
);

130 
	`fwrôe
(
íd_cﬁ‹
, 
íd_Àn
, 1, 
°dout
);

131 
	`Âutc
('\n', 
°dout
);

133 i‡(
	`UNLIKELY
(
	`±hªad_muãx_u∆ock
(&
muãx
) < 0))

134 
	`≥º‹
("pthread_mutex_unlock");

135 
	}
}

138 #ifde‡
NDEBUG


139 
	$°©us_out
(
lw™_°©us_ty≥_t
 
ty≥
, c⁄° *
fmt
, 
va_li°
 
vÆues
)

141 
	$°©us_out
(c⁄° *
fûe
, c⁄° 
löe
, c⁄° *
func
,

142 
lw™_°©us_ty≥_t
 
ty≥
, c⁄° *
fmt
, 
va_li°
 
vÆues
)

145 *
ouçut
;

146 
Àn
;

148 
Àn
 = 
	`va•rötf
(&
ouçut
, 
fmt
, 
vÆues
);

149 i‡(
Àn
 >= 0) {

150 #ifde‡
NDEBUG


151 
	`°©us_out_msg
(
ty≥
, 
ouçut
, (
size_t
)
Àn
);

153 
	`°©us_out_msg
(
fûe
, 
löe
, 
func
, 
ty≥
, 
ouçut
, (
size_t
)
Àn
);

155 
	`‰ì
(
ouçut
);

157 
	}
}

159 #ifde‡
NDEBUG


160 
	#IMPLEMENT_FUNCTION
(
‚_«me_
, 
ty≥_
) \

162 
lw™_°©us_
##
	`‚_«me_
(c⁄° *
fmt
, ...) \

164 i‡(!
quõt
) { \

165 
va_li°
 
vÆues
; \

166 
	`va_°¨t
(
vÆues
, 
fmt
); \

167 
	`°©us_out
(
ty≥_
, 
fmt
, 
vÆues
); \

168 
	`va_íd
(
vÆues
); \

170 i‡((
ty≥_
Ë& 
STATUS_CRITICAL
Ë
	`ab‹t
(); \

171 }

	)

173 
	#IMPLEMENT_FUNCTION
(
‚_«me_
, 
ty≥_
) \

175 
lw™_°©us_
##
‚_«me_
##
	`_debug
(c⁄° *
fûe
, \

176 c⁄° 
löe
, c⁄° *
func
, \

177 c⁄° *
fmt
, ...) \

179 i‡(!
quõt
) { \

180 
va_li°
 
vÆues
; \

181 
	`va_°¨t
(
vÆues
, 
fmt
); \

182 
	`°©us_out
(
fûe
, 
löe
, 
func
, 
ty≥_
, 
fmt
, 
vÆues
); \

183 
	`va_íd
(
vÆues
); \

185 i‡((
ty≥_
Ë& 
STATUS_CRITICAL
Ë
	`ab‹t
(); \

186 }

	)

188 
	$IMPLEMENT_FUNCTION
(
debug
, 
STATUS_DEBUG
)

191 
	$IMPLEMENT_FUNCTION
(
öfo
, 
STATUS_INFO
)

192 
	$IMPLEMENT_FUNCTION
(
w¨nög
, 
STATUS_WARNING
)

193 
	$IMPLEMENT_FUNCTION
(
îr‹
, 
STATUS_ERROR
)

194 
	$IMPLEMENT_FUNCTION
(
≥º‹
, 
STATUS_PERROR
)

196 
	$IMPLEMENT_FUNCTION
(
¸ôiˇl
, 
STATUS_CRITICAL
)

197 
	`IMPLEMENT_FUNCTION
(
¸ôiˇl_≥º‹
, 
STATUS_CRITICAL
 | 
STATUS_PERROR
)

199 #unde‡
IMPLEMENT_FUNCTION


	@common/lwan-status.h

20 #i‚de‡
_LWAN_STATUS_H_


21 
	#_LWAN_STATUS_H_


	)

23 #ifde‡
NDEBUG


24 
	#DECLARE_STATUS_PROTO
(
ty≥_
, ...) \

25 
lw™_°©us_
##
	`ty≥_
(c⁄° *
fmt
, ...) \

26 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 1, 2))) \

27 
__VA_ARGS__
;

	)

29 
	#lw™_°©us_debug
(
fmt
, ...)

	)

31 
	#DECLARE_STATUS_PROTO
(
ty≥_
, ...) \

32 
lw™_°©us_
##
ty≥_
##
	`_debug
(c⁄° *
fûe
, c⁄° 
löe
, \

33 c⁄° *
func
, c⁄° *
fmt
, ...) \

34 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 4, 5))) \

35 
__VA_ARGS__
;

	)

37 
	#lw™_°©us_öfo
(
fmt
, ...) \

38 
	`lw™_°©us_öfo_debug
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 
fmt
, ##
__VA_ARGS__
)

	)

39 
	#lw™_°©us_w¨nög
(
fmt
, ...) \

40 
	`lw™_°©us_w¨nög_debug
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 
fmt
, ##
__VA_ARGS__
)

	)

41 
	#lw™_°©us_îr‹
(
fmt
, ...) \

42 
	`lw™_°©us_îr‹_debug
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 
fmt
, ##
__VA_ARGS__
)

	)

43 
	#lw™_°©us_≥º‹
(
fmt
, ...) \

44 
	`lw™_°©us_≥º‹_debug
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 
fmt
, ##
__VA_ARGS__
)

	)

45 
	#lw™_°©us_¸ôiˇl
(
fmt
, ...) \

46 
	`lw™_°©us_¸ôiˇl_debug
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 
fmt
, ##
__VA_ARGS__
)

	)

47 
	#lw™_°©us_¸ôiˇl_≥º‹
(
fmt
, ...) \

48 
	`lw™_°©us_¸ôiˇl_≥º‹_debug
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 
fmt
, ##
__VA_ARGS__
)

	)

49 
	#lw™_°©us_debug
(
fmt
, ...) \

50 
	`lw™_°©us_debug_debug
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 
fmt
, ##
__VA_ARGS__
)

	)

52 
	$DECLARE_STATUS_PROTO
(
debug
)

55 
	$DECLARE_STATUS_PROTO
(
öfo
)

56 
	$DECLARE_STATUS_PROTO
(
w¨nög
)

57 
	$DECLARE_STATUS_PROTO
(
îr‹
)

58 
	$DECLARE_STATUS_PROTO
(
≥º‹
)

59 
	`DECLARE_STATUS_PROTO
(
¸ôiˇl
, 
	`__©åibuã__
((
n‹ëu∫
)))

60 
	`DECLARE_STATUS_PROTO
(
¸ôiˇl_≥º‹
, 
	`__©åibuã__
((
n‹ëu∫
)))

	@common/lwan-tables.c

20 
	#_GNU_SOURCE


	)

21 
	~<as£π.h
>

22 
	~<°rög.h
>

23 
	~<°dlib.h
>

24 
	~<zlib.h
>

26 
	~"lw™.h
"

27 
	~"mime-ty≥s.h
"

30 
	guncom¥es£d_mime_íåõs
[
MIME_UNCOMPRESSED_LEN
];

31 
mime_íåy
 
	gmime_íåõs
[
MIME_ENTRIES
];

32 
boﬁ
 
	gmime_íåõs_öôülized
 = 
Ál£
;

35 
	$lw™_èbÀs_öô
()

37 i‡(
mime_íåõs_öôülized
)

40 
	`lw™_°©us_debug
("Uncompressing MIMEÅypeÅable");

41 
uL⁄gf
 
uncom¥es£d_Àngth
 = 
MIME_UNCOMPRESSED_LEN
;

42 
ªt
 = 
	`uncom¥ess
((
Byãf
*)
uncom¥es£d_mime_íåõs
,

43 &
uncom¥es£d_Àngth
, (c⁄° 
Byãf
*)
mime_íåõs_com¥es£d
,

44 
MIME_COMPRESSED_LEN
);

45 i‡(
ªt
 !
Z_OK
)

46 
	`lw™_°©us_¸ôiˇl
(

47 "Eº‹ whûêuncom¥essögÅabÀ: zlibÉº‹ %d", 
ªt
);

49 i‡(
uncom¥es£d_Àngth
 !
MIME_UNCOMPRESSED_LEN
)

50 
	`lw™_°©us_¸ôiˇl
("Expected uncompressedÜength %d, got %ld",

51 
MIME_UNCOMPRESSED_LEN
, 
uncom¥es£d_Àngth
);

53 *
±r
 = 
uncom¥es£d_mime_íåõs
;

54 
size_t
 
i
 = 0; i < 
MIME_ENTRIES
; i++) {

55 
mime_íåõs
[
i
].
exãnsi⁄
 = (*)
±r
;

56 
±r
 = (*)
	`øwmemchr
(ptr + 1, '\0') + 1;

57 
mime_íåõs
[
i
].
ty≥
 = (*)
±r
;

58 
±r
 = (*)
	`øwmemchr
(ptr + 1, '\0') + 1;

61 
mime_íåõs_öôülized
 = 
åue
;

62 
	}
}

65 
	$lw™_èbÀs_shutdown
()

67 
	}
}

70 
	$com∑ª_mime_íåy
(c⁄° *
a
, c⁄° *
b
)

72 c⁄° 
mime_íåy
 *
me1
 = 
a
;

73 c⁄° 
mime_íåy
 *
me2
 = 
b
;

74  
	`°rcmp
(
me1
->
exãnsi⁄
, 
me2
->extension);

75 
	}
}

78 
	$lw™_dëîmöe_mime_ty≥_f‹_fûe_«me
(c⁄° *
fûe_«me
)

80 *
œ°_dŸ
 = 
	`°ºchr
(
fûe_«me
, '.');

81 i‡(
	`UNLIKELY
(!
œ°_dŸ
))

82 
ÁŒback
;

85 
EXT_JPG
 = 
	`MULTICHAR_CONSTANT_L
('.','j','p','g'),

86 
EXT_PNG
 = 
	`MULTICHAR_CONSTANT_L
('.','p','n','g'),

87 
EXT_HTM
 = 
	`MULTICHAR_CONSTANT_L
('.','h','t','m'),

88 
EXT_CSS
 = 
	`MULTICHAR_CONSTANT_L
('.','c','s','s'),

89 
EXT_TXT
 = 
	`MULTICHAR_CONSTANT_L
('.','t','x','t'),

90 
EXT_JS
 = 
	`MULTICHAR_CONSTANT_L
('.','j','s',0),

93 
	`STRING_SWITCH_L
(
œ°_dŸ
) {

94 
EXT_CSS
:  "text/css";

95 
EXT_HTM
:  "text/html";

96 
EXT_JPG
:  "image/jpeg";

97 
EXT_JS
:  "application/javascript";

98 
EXT_PNG
:  "image/png";

99 
EXT_TXT
:  "text/plain";

102 i‡(
	`LIKELY
(*
œ°_dŸ
)) {

103 
mime_íåy
 *
íåy
, 
key
 = { .
exãnsi⁄
 = 
œ°_dŸ
 + 1 };

105 
íåy
 = 
	`b£¨ch
(&
key
, 
mime_íåõs
, 
MIME_ENTRIES
,

106 (
mime_íåy
), 
com∑ª_mime_íåy
);

107 i‡(
	`LIKELY
(
íåy
))

108  
íåy
->
ty≥
;

111 
ÁŒback
:

113 
	}
}

116 
	$lw™_hâp_°©us_as_°rög_wôh_code
(
lw™_hâp_°©us_t
 
°©us
)

118 
°©us
) {

119 
HTTP_OK
:  "200 OK";

120 
HTTP_PARTIAL_CONTENT
:  "206 Partial content";

121 
HTTP_MOVED_PERMANENTLY
:  "301 MovedÖermanently";

122 
HTTP_NOT_MODIFIED
:  "304 Not modified";

123 
HTTP_BAD_REQUEST
:  "400 BadÑequest";

124 
HTTP_NOT_AUTHORIZED
:  "401 Notáuthorized";

125 
HTTP_FORBIDDEN
:  "403 Forbidden";

126 
HTTP_NOT_FOUND
:  "404 Not found";

127 
HTTP_NOT_ALLOWED
:  "405 Notállowed";

128 
HTTP_TIMEOUT
:  "408 RequestÅimeout";

129 
HTTP_TOO_LARGE
:  "413 RequestÅooÜarge";

130 
HTTP_RANGE_UNSATISFIABLE
:  "416 RequestedÑange unsatisfiable";

131 
HTTP_INTERNAL_ERROR
:  "500 Internal serverÉrror";

132 
HTTP_UNAVAILABLE
:  "503 Service unavailable";

135 
	}
}

137 
ALWAYS_INLINE
 const *

138 
	$lw™_hâp_°©us_as_°rög
(
lw™_hâp_°©us_t
 
°©us
)

140  
	`lw™_hâp_°©us_as_°rög_wôh_code
(
°©us
) + 4;

141 
	}
}

144 
	$lw™_hâp_°©us_as_des¸ùtive_°rög
(
lw™_hâp_°©us_t
 
°©us
)

146 
°©us
) {

147 
HTTP_OK
:  "Success!";

148 
HTTP_PARTIAL_CONTENT
:  "DeliveringÖart ofÑequestedÑesource.";

149 
HTTP_MOVED_PERMANENTLY
:  "This content has movedÅoánotherÖlace.";

150 
HTTP_NOT_MODIFIED
:  "The content hasÇot changed sinceÖreviousÑequest.";

151 
HTTP_BAD_REQUEST
:  "The client has issuedá badÑequest.";

152 
HTTP_NOT_AUTHORIZED
:  "Client hasÇoáuthorizationÅoáccessÅhisÑesource.";

153 
HTTP_FORBIDDEN
:  "AccessÅoÅhisÑesource has been denied.";

154 
HTTP_NOT_FOUND
:  "TheÑequestedÑesource couldÇot be found onÅhis server.";

155 
HTTP_NOT_ALLOWED
:  "TheÑequested method isÇotállowed byÅhis server.";

156 
HTTP_TIMEOUT
:  "Client didÇotÖroduceáÑequest withinÉxpectedÅimeframe.";

157 
HTTP_TOO_LARGE
:  "TheÑequestÉntity isÅooÜarge.";

158 
HTTP_RANGE_UNSATISFIABLE
:  "The server can't supplyÅheÑequestedÖortion ofÅheÑequestedÑesource.";

159 
HTTP_INTERNAL_ERROR
:  "The serverÉncounteredán internalÉrrorÅhat couldn't beÑecovered from.";

160 
HTTP_UNAVAILABLE
:  "The server isÉither overloaded or down for maintenance.";

163 
	}
}

	@common/lwan-template.c

23 
	~<î∫o.h
>

24 
	~<f˙é.h
>

25 
	~<limôs.h
>

26 
	~<°dboﬁ.h
>

27 
	~<°döt.h
>

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~<sys/mm™.h
>

31 
	~<sys/°©.h
>

32 
	~<uni°d.h
>

34 
	~"hash.h
"

35 
	~"öt-to-°r.h
"

36 
	~"li°.h
"

37 
	~"lw™-ãm∂©e.h
"

38 
	~"°rbuf.h
"

40 
lw™_çl_chunk_t_
 
	tlw™_çl_chunk_t
;

43 
	mTPL_ACTION_APPEND
,

44 
	mTPL_ACTION_APPEND_CHAR
,

45 
	mTPL_ACTION_VARIABLE
,

46 
	mTPL_ACTION_LIST_START_ITER
,

47 
	mTPL_ACTION_LIST_END_ITER
,

48 
	mTPL_ACTION_IF_VARIABLE_NOT_EMPTY
,

49 
	mTPL_ACTION_END_IF_VARIABLE_NOT_EMPTY
,

50 
	mTPL_ACTION_APPLY_TPL
,

51 
	mTPL_ACTION_LAST


52 } 
	tlw™_çl_a˘i⁄_t
;

55 
	mTPL_FLAG_NEGATE
 = 1<<0

56 } 
	tlw™_çl_Êag_t
;

59 
	mSTATE_DEFAULT
,

60 
	mSTATE_FIRST_BRACE
,

61 
	mSTATE_SECOND_BRACE
,

62 
	mSTATE_FIRST_CLOSING_BRACE
,

63 
	mSTATE_SECOND_CLOSING_BRACE
,

64 
	mSTATE_PARSE_ERROR


67 
	slw™_çl_chunk_t_
 {

68 
li°_node
 
	mli°
;

69 
lw™_çl_a˘i⁄_t
 
	ma˘i⁄
;

70 
lw™_çl_Êag_t
 
	mÊags
;

71 *
	md©a
;

74 
	slw™_çl_t_
 {

75 
li°_hód
 
	mchunks
;

76 
size_t
 
	mmöimum_size
;

79 
	ssymèb
 {

80 
hash
 *
	mhash
;

81 
symèb
 *
	m√xt
;

84 
	s∑r£r_°©e
 {

85 
lw™_çl_t
 *
	mçl
;

86 
symèb
 *
	msymèb
;

89 
	schunk_des¸ùt‹
 {

90 
lw™_çl_chunk_t
 *
	mchunk
;

91 
lw™_v¨_des¸ùt‹_t
 *
	mdes¸ùt‹
;

94 
lw™_v¨_des¸ùt‹_t
 *

95 
	$symèb_lookup
(
∑r£r_°©e
 *
°©e
, c⁄° *
v¨_«me
)

97 
symèb
 *
èb
 = 
°©e
->symèb;Åab;Åab =Åab->
√xt
) {

98 
lw™_v¨_des¸ùt‹_t
 *
v¨
 = 
	`hash_föd
(
èb
->
hash
, 
v¨_«me
);

99 i‡(
v¨
)

100  
v¨
;

103  
NULL
;

104 
	}
}

106 
boﬁ


107 
	$symèb_push
(
∑r£r_°©e
 *
°©e
, c⁄° 
lw™_v¨_des¸ùt‹_t
 *
des¸ùt‹
)

109 
symèb
 *
èb
 = 
	`mÆloc
((*tab));

111 i‡(!
èb
)

112  
Ál£
;

114 
èb
->
hash
 = 
	`hash_°r_√w
(
NULL
, NULL);

115 i‡(!
èb
->
hash
) {

116 
	`‰ì
(
èb
);

117  
Ál£
;

120 
èb
->
√xt
 = 
°©e
->
symèb
;

121 
°©e
->
symèb
 = 
èb
;

123 ; 
des¸ùt‹
->
«me
; descriptor++)

124 
	`hash_add
(
°©e
->
symèb
->
hash
, 
des¸ùt‹
->
«me
, descriptor);

126  
åue
;

127 
	}
}

130 
	$symèb_p›
(
∑r£r_°©e
 *
°©e
)

132 
symèb
 *
èb
 = 
°©e
->symtab;

134 
	`as£π
(
èb
);

136 
	`hash_‰ì
(
èb
->
hash
);

137 
°©e
->
symèb
 = 
èb
->
√xt
;

138 
	`‰ì
(
èb
);

139 
	}
}

142 
	$lw™_≠≥nd_öt_to_°rbuf
(
°rbuf_t
 *
buf
, *
±r
)

144 
c⁄vîtbuf
[
INT_TO_STR_BUFFER_SIZE
];

145 
size_t
 
Àn
;

146 *
c⁄vîãd
;

148 
c⁄vîãd
 = 
	`öt_to_°rög
(*(*)
±r
, 
c⁄vîtbuf
, &
Àn
);

149 
	`°rbuf_≠≥nd_°r
(
buf
, 
c⁄vîãd
, 
Àn
);

150 
	}
}

152 
boﬁ


153 
	$lw™_çl_öt_is_em±y
(*
±r
)

155  (*(*)
±r
) == 0;

156 
	}
}

159 
	$lw™_≠≥nd_doubÀ_to_°rbuf
(
°rbuf_t
 *
buf
, *
±r
)

161 
	`°rbuf_≠≥nd_¥ötf
(
buf
, "%f", *(*)
±r
);

162 
	}
}

164 
boﬁ


165 
	$lw™_çl_doubÀ_is_em±y
(*
±r
)

167  (*(*)
±r
) == 0.0f;

168 
	}
}

171 
	$lw™_≠≥nd_°r_to_°rbuf
(
°rbuf_t
 *
buf
, *
±r
)

173 
	sv
 {

174 *
°r
;

175 } *
v
 = 
±r
;

177 i‡(
	`LIKELY
(
v
->
°r
))

178 
	`°rbuf_≠≥nd_°r
(
buf
, 
v
->
°r
, 0);

179 
	}
}

182 
	$lw™_≠≥nd_°r_esˇ≥d_to_°rbuf
(
°rbuf_t
 *
buf
, *
±r
)

184 
	sv
 {

185 *
°r
;

186 } *
v
 = 
±r
;

188 i‡(
	`UNLIKELY
(!
v
->
°r
))

191 *
p
 = 
v
->
°r
; *p;Ö++) {

192 i‡(*
p
 == '<')

193 
	`°rbuf_≠≥nd_°r
(
buf
, "&lt;", 4);

194 i‡(*
p
 == '>')

195 
	`°rbuf_≠≥nd_°r
(
buf
, "&gt;", 4);

196 i‡(*
p
 == '&')

197 
	`°rbuf_≠≥nd_°r
(
buf
, "&amp;", 5);

198 i‡(*
p
 == '"')

199 
	`°rbuf_≠≥nd_°r
(
buf
, "&quot;", 6);

200 i‡(*
p
 == '\'')

201 
	`°rbuf_≠≥nd_°r
(
buf
, "&#x27;", 6);

202 i‡(*
p
 == '/')

203 
	`°rbuf_≠≥nd_°r
(
buf
, "&#x2f;", 6);

205 
	`°rbuf_≠≥nd_ch¨
(
buf
, *
p
);

207 
	}
}

209 
boﬁ


210 
	$lw™_çl_°r_is_em±y
(*
±r
)

212 *
°r
 = 
±r
;

213 i‡(!
°r
)

214  
åue
;

215 i‡(*
°r
 == '\0')

216  
åue
;

217  
Ál£
;

218 
	}
}

221 
	$compûe_≠≥nd_ãxt
(
∑r£r_°©e
 *
°©e
, 
°rbuf_t
 *
buf
)

223 
size_t
 
Àngth
 = 
	`°rbuf_gë_Àngth
(
buf
);

224 i‡(!
Àngth
)

227 
lw™_çl_chunk_t
 *
chunk
 = 
	`mÆloc
((*chunk));

228 i‡(!
chunk
)

229  -
ENOMEM
;

231 i‡(
Àngth
 == 1) {

232 
chunk
->
a˘i⁄
 = 
TPL_ACTION_APPEND_CHAR
;

233 
chunk
->
d©a
 = (*)((
uöçå_t
)
	`°rbuf_gë_buf„r
(
buf
)[0]);

235 
chunk
->
a˘i⁄
 = 
TPL_ACTION_APPEND
;

236 
chunk
->
d©a
 = 
	`°rbuf_√w_wôh_size
(
Àngth
);

237 
	`°rbuf_£t
(
chunk
->
d©a
, 
	`°rbuf_gë_buf„r
(
buf
), 
Àngth
);

240 
	`li°_add_èû
(&
°©e
->
çl
->
chunks
, &
chunk
->
li°
);

241 
°©e
->
çl
->
möimum_size
 +
Àngth
;

242 
	`°rbuf_ª£t
(
buf
);

245 
	}
}

248 
	$compûe_≠≥nd_v¨
(
∑r£r_°©e
 *
°©e
, 
°rbuf_t
 *
buf
,

249 c⁄° 
lw™_v¨_des¸ùt‹_t
 *
des¸ùt‹
)

251 
lw™_çl_chunk_t
 *
chunk
 = 
	`mÆloc
((*chunk));

252 i‡(!
chunk
)

253  -
ENOMEM
;

255 *
v¨übÀ
 = 
	`°rbuf_gë_buf„r
(
buf
);

256 
size_t
 
Àngth
 = 
	`°rbuf_gë_Àngth
(
buf
);

257 i‡(!
Àngth
)

258 
em±y_v¨übÀ
;

260 
Àngth
--;

261 
chunk
->
Êags
 = 0;

263 
√xt_ch¨
:

264 *
v¨übÀ
) {

266 
em±y_v¨übÀ
;

269 
chunk
->
Êags
 ^
TPL_FLAG_NEGATE
;

270 
v¨übÀ
++;

271 
Àngth
--;

272 
√xt_ch¨
;

275 
	`‰ì
(
chunk
);

276 
	`°rbuf_ª£t
(
buf
);

280 i‡(
chunk
->
Êags
 & 
TPL_FLAG_NEGATE
)

281 
övÆid_√g©e
;

283 
ãm∂©e_fûe
[
PATH_MAX
];

284 
	`¢¥ötf
(
ãm∂©e_fûe
, —em∂©e_fûe), "%s.çl", 
v¨übÀ
 + 1);

286 
lw™_çl_t
 *
ö˛uded
 = 
	`lw™_çl_compûe_fûe
(
ãm∂©e_fûe
, 
des¸ùt‹
);

287 i‡(!
ö˛uded
) {

288 
	`‰ì
(
chunk
);

289  -
ENOENT
;

291 
chunk
->
a˘i⁄
 = 
TPL_ACTION_APPLY_TPL
;

292 
chunk
->
d©a
 = 
ö˛uded
;

296 
chunk
->
d©a
 = 
	`symèb_lookup
(
°©e
, 
v¨übÀ
 + 1);

297 i‡(!
chunk
->
d©a
)

298 
no_such_key
;

300 
chunk
->
a˘i⁄
 = 
TPL_ACTION_LIST_START_ITER
;

301 
lw™_v¨_des¸ùt‹_t
 *
chûd
 = 
chunk
->
d©a
;

302 
	`symèb_push
(
°©e
, 
chûd
->
li°_desc
);

305 i‡(
chunk
->
Êags
 & 
TPL_FLAG_NEGATE
)

306 
övÆid_√g©e
;

308 
lw™_çl_chunk_t
 *
°¨t_chunk
;

309 
lw™_v¨_des¸ùt‹_t
 *
des¸
;

310 
boﬁ
 
was_if
 = 
Ál£
;

312 i‡(
v¨übÀ
[
Àngth
] == '?') {

313 
v¨übÀ
[
Àngth
] = '\0';

314 
was_if
 = 
åue
;

317 
des¸
 = 
	`symèb_lookup
(
°©e
, 
v¨übÀ
 + 1);

318 i‡(!
des¸
)

319 
no_such_key
;

321 i‡(
was_if
) {

322 
chunk
->
a˘i⁄
 = 
TPL_ACTION_END_IF_VARIABLE_NOT_EMPTY
;

323 
	`li°_f‹_óch_ªv
(&
°©e
->
çl
->
chunks
, 
°¨t_chunk
, 
li°
) {

324 i‡(
°¨t_chunk
->
a˘i⁄
 !
TPL_ACTION_IF_VARIABLE_NOT_EMPTY
)

326 i‡(
°¨t_chunk
->
d©a
 !
des¸
)

329 
chunk
->
d©a
 = 
des¸
;

330 
add_chunk
;

333 
chunk
->
a˘i⁄
 = 
TPL_ACTION_LIST_END_ITER
;

334 
	`li°_f‹_óch_ªv
(&
°©e
->
çl
->
chunks
, 
°¨t_chunk
, 
li°
) {

335 i‡(
°¨t_chunk
->
d©a
 =
des¸
) {

336 
chunk
->
d©a
 = 
°¨t_chunk
;

337 
	`symèb_p›
(
°©e
);

338 
add_chunk
;

343 
no_such_key
;

346 i‡(
chunk
->
Êags
 & 
TPL_FLAG_NEGATE
)

347 
övÆid_√g©e
;

349 i‡(
v¨übÀ
[
Àngth
] == '?') {

350 
chunk
->
a˘i⁄
 = 
TPL_ACTION_IF_VARIABLE_NOT_EMPTY
;

351 
v¨übÀ
[
Àngth
] = '\0';

353 
chunk
->
a˘i⁄
 = 
TPL_ACTION_VARIABLE
;

355 
chunk
->
d©a
 = 
	`symèb_lookup
(
°©e
, 
v¨übÀ
);

356 i‡(!
chunk
->
d©a
)

357 
no_such_key
;

360 
add_chunk
:

361 
	`li°_add_èû
(&
°©e
->
çl
->
chunks
, &
chunk
->
li°
);

362 
°©e
->
çl
->
möimum_size
 +
Àngth
 + 1;

363 
	`°rbuf_ª£t
(
buf
);

367 
no_such_key
:

368 
	`‰ì
(
chunk
);

369  -
ENOKEY
;

371 
övÆid_√g©e
:

372 
	`‰ì
(
chunk
);

373  -
EILSEQ
;

375 
em±y_v¨übÀ
:

376 
	`‰ì
(
chunk
);

377  -
ENOTNAM
;

378 
	}
}

381 
	$‰ì_chunk
(
lw™_çl_chunk_t
 *
chunk
)

383 i‡(!
chunk
)

386 
chunk
->
a˘i⁄
) {

387 
TPL_ACTION_LAST
:

388 
TPL_ACTION_APPEND_CHAR
:

389 
TPL_ACTION_VARIABLE
:

390 
TPL_ACTION_END_IF_VARIABLE_NOT_EMPTY
:

391 
TPL_ACTION_LIST_END_ITER
:

394 
TPL_ACTION_IF_VARIABLE_NOT_EMPTY
:

395 
TPL_ACTION_LIST_START_ITER
:

396 
	`‰ì
(
chunk
->
d©a
);

398 
TPL_ACTION_APPEND
:

399 
	`°rbuf_‰ì
(
chunk
->
d©a
);

401 
TPL_ACTION_APPLY_TPL
:

402 
	`lw™_çl_‰ì
(
chunk
->
d©a
);

406 
	`‰ì
(
chunk
);

407 
	}
}

410 
	$lw™_çl_‰ì
(
lw™_çl_t
 *
çl
)

412 i‡(!
çl
)

415 
lw™_çl_chunk_t
 *
chunk
;

416 
lw™_çl_chunk_t
 *
√xt
;

417 
	`li°_f‹_óch_ß„
(&
çl
->
chunks
, 
chunk
, 
√xt
, 
li°
) {

418 
	`li°_dñ
(&
chunk
->
li°
);

419 
	`‰ì_chunk
(
chunk
);

422 
	`‰ì
(
çl
);

423 
	}
}

425 
	#PARSE_ERROR
(
msg
,...) \

427 
	`¢¥ötf
(
îr‹_msg
, 512, 
msg
, ##
__VA_ARGS__
); \

428  
STATE_PARSE_ERROR
; \

429 } 0)

	)

432 
	$„ed_öto_compûî
(
∑r£r_°©e
 *parser_state,

433 c⁄° 
lw™_v¨_des¸ùt‹_t
 *
des¸ùt‹
,

434 
°©e
,

435 
°rbuf_t
 *
buf
,

436 
ch
,

437 *
îr‹_msg
)

439 
boﬁ
 
œ°_∑ss
 = 
ch
 =
EOF
;

441 
°©e
) {

442 
STATE_DEFAULT
:

443 i‡(
ch
 == '{')

444  
STATE_FIRST_BRACE
;

445 i‡(
œ°_∑ss
)

446 
≠≥nd_ãxt
;

448 
	`°rbuf_≠≥nd_ch¨
(
buf
, ()
ch
);

451 
STATE_FIRST_BRACE
:

452 i‡(
ch
 == '{') {

453 
°©e
 = 
STATE_SECOND_BRACE
;

454 
≠≥nd_ãxt
;

457 
	`°rbuf_≠≥nd_ch¨
(
buf
, '{');

459 i‡(
œ°_∑ss
)

460 
≠≥nd_ãxt
;

462 
	`°rbuf_≠≥nd_ch¨
(
buf
, ()
ch
);

464  
STATE_DEFAULT
;

466 
STATE_SECOND_BRACE
:

467 i‡(
ch
 == '{')

468 
	`PARSE_ERROR
("Unexpected open brace");

469 i‡(
ch
 == '}')

470  
STATE_FIRST_CLOSING_BRACE
;

471 i‡(
œ°_∑ss
)

472 
	`PARSE_ERROR
("Missing close brace");

474 
	`°rbuf_≠≥nd_ch¨
(
buf
, ()
ch
);

477 
STATE_FIRST_CLOSING_BRACE
:

478 i‡(
ch
 == '}')

479  
STATE_SECOND_CLOSING_BRACE
;

481 
	`PARSE_ERROR
("Closing braceÉxpected");

483 
STATE_SECOND_CLOSING_BRACE
:

484 
	`compûe_≠≥nd_v¨
(
∑r£r_°©e
, 
buf
, 
des¸ùt‹
)) {

485 -
EILSEQ
:

486 
	`PARSE_ERROR
("Neg©i⁄ÇŸ suµ‹ãd f‹ ``%s''", 
	`°rbuf_gë_buf„r
(
buf
));

487 -
ENOTNAM
:

488 
	`PARSE_ERROR
("Expecting variableÇame");

489 -
ENOKEY
:

490 
	`PARSE_ERROR
("Unknow¿v¨übÀ: ``%s''", 
	`°rbuf_gë_buf„r
(
buf
));

491 -
ENOMEM
:

492 
	`PARSE_ERROR
("Out of memory whileáppending variable");

493 -
ENOENT
:

494 
	`PARSE_ERROR
("Cannot findÅemplateÅo include: ``%s''",

495 
	`°rbuf_gë_buf„r
(
buf
) + 1);

498 i‡(
œ°_∑ss
)

499  
STATE_DEFAULT
;

500 i‡(
ch
 == '{')

501  
STATE_FIRST_BRACE
;

503 
	`°rbuf_≠≥nd_ch¨
(
buf
, ()
ch
);

504  
STATE_DEFAULT
;

507  
°©e
;

509 
≠≥nd_ãxt
:

510 
	`compûe_≠≥nd_ãxt
(
∑r£r_°©e
, 
buf
)) {

511 -
ENOMEM
:

512 
	`PARSE_ERROR
("Out of memory whileáppendingÅext");

515  
°©e
;

516 
	}
}

519 
	$po°_¥o˚ss_ãm∂©e
(
lw™_çl_t
 *
çl
)

521 
lw™_çl_chunk_t
 *
chunk
;

522 
lw™_çl_chunk_t
 *
¥ev_chunk
;

524 
	`li°_f‹_óch
(&
çl
->
chunks
, 
chunk
, 
li°
) {

525 i‡(
chunk
->
a˘i⁄
 =
TPL_ACTION_IF_VARIABLE_NOT_EMPTY
) {

526 
¥ev_chunk
 = 
chunk
;

528 (
chunk
 = (
lw™_çl_chunk_t
 *Ëchunk->
li°
.
√xt
)) {

529 i‡(
chunk
->
a˘i⁄
 =
TPL_ACTION_LAST
)

531 i‡(
chunk
->
a˘i⁄
 =
TPL_ACTION_END_IF_VARIABLE_NOT_EMPTY


532 && 
chunk
->
d©a
 =
¥ev_chunk
->data)

536 
chunk_des¸ùt‹
 *
cd
 = 
	`mÆloc
((*cd));

537 i‡(!
cd
)

538 
	`lw™_°©us_¸ôiˇl_≥º‹
("malloc");

540 
cd
->
des¸ùt‹
 = 
¥ev_chunk
->
d©a
;

541 
cd
->
chunk
 = chunk;

542 
¥ev_chunk
->
d©a
 = 
cd
;

543 } i‡(
chunk
->
a˘i⁄
 =
TPL_ACTION_LIST_START_ITER
) {

544 
lw™_çl_Êag_t
 
Êags
 = 
chunk
->flags;

546 
¥ev_chunk
 = 
chunk
;

548 (
chunk
 = (
lw™_çl_chunk_t
 *Ëchunk->
li°
.
√xt
)) {

549 i‡(
chunk
->
a˘i⁄
 =
TPL_ACTION_LAST
)

551 i‡(
chunk
->
a˘i⁄
 =
TPL_ACTION_LIST_END_ITER


552 && 
chunk
->
d©a
 =
¥ev_chunk
) {

553 
chunk
->
Êags
 |= flags;

558 
chunk_des¸ùt‹
 *
cd
 = 
	`mÆloc
((*cd));

559 i‡(!
cd
)

560 
	`lw™_°©us_¸ôiˇl_≥º‹
("malloc");

562 
cd
->
des¸ùt‹
 = 
¥ev_chunk
->
d©a
;

563 
¥ev_chunk
->
d©a
 = 
cd
;

565 i‡(!
chunk
 || chunk->
a˘i⁄
 =
TPL_ACTION_LAST
)

566 
cd
->
chunk
 = chunk;

568 
cd
->
chunk
 = (
lw™_çl_chunk_t
 *)chunk->
li°
.
√xt
;

569 } i‡(
chunk
->
a˘i⁄
 =
TPL_ACTION_LAST
) {

573 
	}
}

575 
lw™_çl_t
 *

576 
	$lw™_çl_compûe_°rög
(c⁄° *
°rög
, c⁄° 
lw™_v¨_des¸ùt‹_t
 *
des¸ùt‹
)

578 
lw™_çl_t
 *
çl
;

579 
°rbuf_t
 *
buf
;

580 
°©e
 = 
STATE_DEFAULT
;

581 
îr‹_msg
[512];

582 
∑r£r_°©e
Öarser_state;

584 
çl
 = 
	`ˇŒoc
(1, (*tpl));

585 i‡(!
çl
)

586 
îr‹_Æloˇã_çl
;

588 
	`li°_hód_öô
(&
çl
->
chunks
);

590 
∑r£r_°©e
.
çl
 =Åpl;

591 
∑r£r_°©e
.
symèb
 = 
NULL
;

592 i‡(!
	`symèb_push
(&
∑r£r_°©e
, 
des¸ùt‹
))

593 
îr‹_symèb_push
;

595 
buf
 = 
	`°rbuf_√w
();

596 i‡(!
buf
)

597 
îr‹_Æloˇã_°rbuf
;

599 
löe
 = 1;

600 
cﬁumn
 = 1;

601 ; *
°rög
; string++) {

602 i‡(*
°rög
 == '\n') {

603 i‡(
°©e
 =
STATE_DEFAULT
)

604 
	`°rbuf_≠≥nd_ch¨
(
buf
, '\n');

606 ++
löe
;

607 
cﬁumn
 = 1;

610 ++
cﬁumn
;

612 
°©e
 = 
	`„ed_öto_compûî
(&
∑r£r_°©e
, 
des¸ùt‹
, state,

613 
buf
, *
°rög
, 
îr‹_msg
);

614 i‡(
°©e
 =
STATE_PARSE_ERROR
)

615 
∑r£_îr‹
;

618 
°©e
 = 
	`„ed_öto_compûî
(&
∑r£r_°©e
, 
des¸ùt‹
, state,

619 
buf
, 
EOF
, 
îr‹_msg
);

620 i‡(
°©e
 =
STATE_PARSE_ERROR
)

621 
∑r£_îr‹
;

623 
lw™_çl_chunk_t
 *
œ°
 = 
	`mÆloc
((*last));

624 i‡(!
œ°
)

625 
‰ì_°rbuf
;

627 
œ°
->
a˘i⁄
 = 
TPL_ACTION_LAST
;

628 
œ°
->
d©a
 = 
NULL
;

630 
	`li°_add_èû
(&
∑r£r_°©e
.
çl
->
chunks
, &
œ°
->
li°
);

632 
	`°rbuf_‰ì
(
buf
);

633 
	`symèb_p›
(&
∑r£r_°©e
);

635 
	`po°_¥o˚ss_ãm∂©e
(
çl
);

637  
çl
;

639 
∑r£_îr‹
:

640 
	`lw™_°©us_îr‹
("Löê%d, cﬁum¿%d: %s", 
löe
, 
cﬁumn
, 
îr‹_msg
);

642 
‰ì_°rbuf
:

643 
	`°rbuf_‰ì
(
buf
);

645 
îr‹_Æloˇã_°rbuf
:

646 
	`symèb_p›
(&
∑r£r_°©e
);

648 
îr‹_symèb_push
:

649 
	`lw™_çl_‰ì
(
çl
);

651 
îr‹_Æloˇã_çl
:

652  
NULL
;

653 
	}
}

655 #unde‡
PARSE_ERROR


657 
lw™_çl_t
 *

658 
	$lw™_çl_compûe_fûe
(c⁄° *
fûíame
, c⁄° 
lw™_v¨_des¸ùt‹_t
 *
des¸ùt‹
)

660 
fd
;

661 
°©
 
°
;

662 *
m≠≥d
;

663 
lw™_çl_t
 *
çl
 = 
NULL
;

665 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
);

666 i‡(
fd
 < 0)

667 
íd
;

669 i‡(
	`f°©
(
fd
, &
°
) < 0)

670 
˛o£_fûe
;

672 
m≠≥d
 = 
	`mm≠
(
NULL
, (
size_t
)
°
.
°_size
, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0);

673 i‡(
m≠≥d
 =
MAP_FAILED
)

674 
˛o£_fûe
;

676 
çl
 = 
	`lw™_çl_compûe_°rög
(
m≠≥d
, 
des¸ùt‹
);

678 i‡(
	`munm≠
(
m≠≥d
, (
size_t
)
°
.
°_size
) < 0)

679 
	`lw™_°©us_≥º‹
("munmap");

681 
˛o£_fûe
:

682 
	`˛o£
(
fd
);

683 
íd
:

684  
çl
;

685 
	}
}

687 
boﬁ


688 
u¡û_íd
(
lw™_çl_chunk_t
 *
chunk
, *
d©a
 
__©åibuã__
((
unu£d
)))

690  
	gchunk
->
	ga˘i⁄
 =
TPL_ACTION_LAST
;

693 
boﬁ


694 
	$u¡û_found_íd_if
(
lw™_çl_chunk_t
 *
chunk
, *
d©a
)

696  
chunk
 =
d©a
;

697 
	}
}

699 
boﬁ


700 
	$u¡û_ôî_íd
(
lw™_çl_chunk_t
 *
chunk
, *
d©a
)

702 i‡(
chunk
->
a˘i⁄
 !
TPL_ACTION_LIST_END_ITER
)

703  
Ál£
;

704 i‡(
d©a
 !
chunk
->data)

705  
Ál£
;

706  
åue
;

707 
	}
}

710 
	$≠≥nd_v¨_to_°rbuf
(
lw™_çl_chunk_t
 *
chunk
, *
v¨übÀs
,

711 
°rbuf_t
 *
buf
)

713 
lw™_v¨_des¸ùt‹_t
 *
des¸ùt‹
 = 
chunk
->
d©a
;

714 i‡(
	`LIKELY
(
des¸ùt‹
))

715 
des¸ùt‹
->
	`≠≥nd_to_°rbuf
(
buf
, (*)
v¨übÀs
 + des¸ùt‹->
off£t
);

716 
	}
}

718 
boﬁ


719 
	$v¨_gë_is_em±y
(
lw™_v¨_des¸ùt‹_t
 *
des¸ùt‹
,

720 *
v¨übÀs
)

722 i‡(
	`UNLIKELY
(!
des¸ùt‹
))

723  
åue
;

725  
des¸ùt‹
->
	`gë_is_em±y
((*)((*)
v¨übÀs
 + des¸ùt‹->
off£t
));

726 
	}
}

728 
lw™_çl_chunk_t
 *

729 
lw™_çl_≠∂y_u¡û
(
lw™_çl_t
 *
çl
,

730 
lw™_çl_chunk_t
 *
chunks
, 
°rbuf_t
 *
buf
,

731 *
v¨übÀs
,

732 
	$boﬁ
 (*
u¡û
)(
lw™_çl_chunk_t
 *
chunk
, *
d©a
), *
u¡û_d©a
)

734 
c‹o_swôchî_t
 
swôchî
;

735 
c‹o_t
 *
c‹o
 = 
NULL
;

736 
lw™_çl_chunk_t
 *
chunk
 = 
chunks
;

738 i‡(
	`UNLIKELY
(!
chunk
))

739 
out
;

742 i‡(
	`u¡û
(
chunk
, 
u¡û_d©a
))

745 
chunk
->
a˘i⁄
) {

746 
TPL_ACTION_APPEND
:

747 
	`°rbuf_≠≥nd_°r
(
buf
, 
	`°rbuf_gë_buf„r
(
chunk
->
d©a
),

748 
	`°rbuf_gë_Àngth
(
chunk
->
d©a
));

750 
TPL_ACTION_APPEND_CHAR
:

751 
	`°rbuf_≠≥nd_ch¨
(
buf
, ()(
uöçå_t
)
chunk
->
d©a
);

753 
TPL_ACTION_VARIABLE
:

754 
	`≠≥nd_v¨_to_°rbuf
(
chunk
, 
v¨übÀs
, 
buf
);

756 
TPL_ACTION_IF_VARIABLE_NOT_EMPTY
: {

757 
chunk_des¸ùt‹
 *
cd
 = 
chunk
->
d©a
;

758 
boﬁ
 
em±y
 = 
	`v¨_gë_is_em±y
(
cd
->
des¸ùt‹
, 
v¨übÀs
);

759 i‡(
chunk
->
Êags
 & 
TPL_FLAG_NEGATE
)

760 
em±y
 = !empty;

761 i‡(
em±y
) {

762 
chunk
 = 
cd
->chunk;

764 
chunk
 = 
	`lw™_çl_≠∂y_u¡û
(
çl
,

765 (
lw™_çl_chunk_t
 *Ë
chunk
->
li°
.
√xt
, 
buf
, 
v¨übÀs
,

766 
u¡û_found_íd_if
, 
cd
->
chunk
);

770 
TPL_ACTION_APPLY_TPL
: {

771 
°rbuf_t
 *
tmp
;

773 
tmp
 = 
	`lw™_çl_≠∂y
(
chunk
->
d©a
, 
v¨übÀs
);

774 
	`°rbuf_≠≥nd_°r
(
buf
, 
	`°rbuf_gë_buf„r
(
tmp
), 
	`°rbuf_gë_Àngth
(tmp));

775 
	`°rbuf_‰ì
(
tmp
);

778 
TPL_ACTION_LIST_START_ITER
: {

779 i‡(
	`UNLIKELY
(
c‹o
 !
NULL
)) {

780 
	`lw™_°©us_w¨nög
("Coroutine isÇot NULL when starting iteration");

784 
chunk_des¸ùt‹
 *
cd
 = 
chunk
->
d©a
;

785 
c‹o
 = 
	`c‹o_√w
(&
swôchî
, 
cd
->
des¸ùt‹
->
gíî©‹
, 
v¨übÀs
);

787 
boﬁ
 
ªsumed
 = 
	`c‹o_ªsume_vÆue
(
c‹o
, 0);

788 
lw™_çl_Êag_t
 
Êags
 = 
chunk
->flags;

789 i‡(
Êags
 & 
TPL_FLAG_NEGATE
)

790 
ªsumed
 = !resumed;

791 i‡(!
ªsumed
) {

792 
chunk
 = 
cd
->chunk;

793 i‡(
Êags
 & 
TPL_FLAG_NEGATE
) {

794 
	`c‹o_ªsume_vÆue
(
c‹o
, 1);

795 
	`c‹o_‰ì
(
c‹o
);

796 
c‹o
 = 
NULL
;

800 
	`c‹o_‰ì
(
c‹o
);

801 
c‹o
 = 
NULL
;

806 
chunk
 = 
	`lw™_çl_≠∂y_u¡û
(
çl
, (
lw™_çl_chunk_t
 *Ëchunk->
li°
.
√xt
,

807 
buf
, 
v¨übÀs
, 
u¡û_ôî_íd
, 
chunk
);

810 
TPL_ACTION_LIST_END_ITER
: {

811 i‡(
	`UNLIKELY
(!
c‹o
)) {

812 i‡(!
chunk
->
Êags
)

813 
	`lw™_°©us_w¨nög
("Coroutine is NULL when finishing iteration");

817 i‡(!
	`c‹o_ªsume_vÆue
(
c‹o
, 0)) {

818 
	`c‹o_‰ì
(
c‹o
);

819 
c‹o
 = 
NULL
;

823 
lw™_çl_chunk_t
 *
√xt
 = 
chunk
->
d©a
;

824 
√xt
 = (
lw™_çl_chunk_t
 *Íext->
li°
.next;

826 
chunk
 = 
	`lw™_çl_≠∂y_u¡û
(
çl
, 
√xt
, 
buf
, 
v¨übÀs
, 
u¡û_ôî_íd
,

827 
chunk
->
d©a
);

830 
TPL_ACTION_END_IF_VARIABLE_NOT_EMPTY
:

831 
TPL_ACTION_LAST
:

836 i‡(!
chunk
)

838 
chunk
 = (
lw™_çl_chunk_t
 *)chunk->
li°
.
√xt
;

839 } 
chunk
);

841 
out
:

842  
chunk
;

843 
	}
}

845 
°rbuf_t
 *

846 
	$lw™_çl_≠∂y_wôh_buf„r
(
lw™_çl_t
 *
çl
, 
°rbuf_t
 *
buf
, *
v¨übÀs
)

848 i‡(
	`UNLIKELY
(!
	`°rbuf_ª£t_Àngth
(
buf
)))

849  
NULL
;

851 i‡(
	`UNLIKELY
(!
	`°rbuf_grow_to
(
buf
, 
çl
->
möimum_size
)))

852  
NULL
;

854 
	`lw™_çl_≠∂y_u¡û
(
çl
, (
lw™_çl_chunk_t
 *)&çl->
chunks
.
n
, 
buf
, 
v¨übÀs
, 
u¡û_íd
, 
NULL
);

855  
buf
;

856 
	}
}

858 
°rbuf_t
 *

859 
	$lw™_çl_≠∂y
(
lw™_çl_t
 *
çl
, *
v¨übÀs
)

861 
°rbuf_t
 *
buf
 = 
	`°rbuf_√w_wôh_size
(
çl
->
möimum_size
);

862  
	`lw™_çl_≠∂y_wôh_buf„r
(
çl
, 
buf
, 
v¨übÀs
);

863 
	}
}

865 #ifde‡
TEMPLATE_TEST


867 
	sã°_°ru˘
 {

868 
	msome_öt
;

869 *
	ma_°rög
;

872 
	$maö
(
¨gc
, *
¨gv
[])

874 i‡(
¨gc
 < 2) {

875 
	`¥ötf
("Ußge: %†fûe.çl\n", 
¨gv
[0]);

879 
	`¥ötf
("*** CompilingÅemplate...\n");

880 
lw™_v¨_des¸ùt‹_t
 
desc
[] = {

881 
	`TPL_VAR_INT
(
ã°_°ru˘
, 
some_öt
),

882 
	`TPL_VAR_STR
(
ã°_°ru˘
, 
a_°rög
),

883 
TPL_VAR_SENTINEL


885 
lw™_çl_t
 *
çl
 = 
	`lw™_çl_compûe_fûe
(
¨gv
[1], 
desc
);

886 i‡(!
çl
)

889 
	`¥ötf
("*** ApplyingÅemplate 100000Åimes...\n");

890 
size_t
 
i
 = 0; i < 100000; i++) {

891 
°rbuf_t
 *
≠∂õd
 = 
	`lw™_çl_≠∂y
(
çl
, (
ã°_°ru˘
[]) {{

892 .
some_öt
 = 42,

893 .
a_°rög
 = "some string"

895 
	`°rbuf_‰ì
(
≠∂õd
);

898 
	`lw™_çl_‰ì
(
çl
);

900 
	}
}

	@common/lwan-template.h

19 #i‚de‡
__TEMPLATE_H__


20 
	#__TEMPLATE_H__


	)

22 
	~<°ddef.h
>

23 
	~"°rbuf.h
"

24 
	~"lw™-c‹o.h
"

26 
lw™_çl_t_
 
	tlw™_çl_t
;

27 
lw™_v¨_des¸ùt‹_t_
 
	tlw™_v¨_des¸ùt‹_t
;

29 (*
	tlw™_çl_li°_gíî©‹_t
)(
	tc‹o_t
 *
	tc‹o
);

31 
	slw™_v¨_des¸ùt‹_t_
 {

32 c⁄° *
«me
;

33 c⁄° 
off_t
 
off£t
;

35 (*
≠≥nd_to_°rbuf
)(
°rbuf_t
 *
buf
, *
±r
);

36 
	`boﬁ
 (*
gë_is_em±y
)(*
±r
);

38 
lw™_çl_li°_gíî©‹_t
 
gíî©‹
;

39 c⁄° 
lw™_v¨_des¸ùt‹_t
 *
li°_desc
;

42 
	#TPL_VAR_SIMPLE
(
°ru˘_
, 
v¨_
, 
≠≥nd_to_°rbuf_
, 
gë_is_em±y_
) \

44 .
«me
 = #var_, \

45 .
off£t
 = 
	`off£tof
(
°ru˘_
, 
v¨_
), \

46 .
≠≥nd_to_°rbuf
 = 
≠≥nd_to_°rbuf_
, \

47 .
gë_is_em±y
 = 
gë_is_em±y_
 \

48 
	}

	)
}

50 
	#TPL_VAR_SEQUENCE
(
°ru˘_
, 
v¨_
, 
gíî©‹_
, 
£qôem_desc_
) \

52 .
«me
 = #var_, \

53 .
off£t
 = 
	`off£tof
(
°ru˘_
, 
v¨_
.
gíî©‹
), \

54 .
gíî©‹
 = 
gíî©‹_
, \

55 .
li°_desc
 = 
£qôem_desc_
 \

56 }

	)

58 
	#TPL_VAR_INT
(
°ru˘_
, 
v¨_
) \

59 
	`TPL_VAR_SIMPLE
(
°ru˘_
, 
v¨_
, 
lw™_≠≥nd_öt_to_°rbuf
, 
lw™_çl_öt_is_em±y
)

	)

61 
	#TPL_VAR_DOUBLE
(
°ru˘_
, 
v¨_
) \

62 
	`TPL_VAR_SIMPLE
(
°ru˘_
, 
v¨_
, 
lw™_≠≥nd_doubÀ_to_°rbuf
, 
lw™_çl_doubÀ_is_em±y
)

	)

64 
	#TPL_VAR_STR
(
°ru˘_
, 
v¨_
) \

65 
	`TPL_VAR_SIMPLE
(
°ru˘_
, 
v¨_
, 
lw™_≠≥nd_°r_to_°rbuf
, 
lw™_çl_°r_is_em±y
)

	)

67 
	#TPL_VAR_STR_ESCAPE
(
°ru˘_
, 
v¨_
) \

68 
	`TPL_VAR_SIMPLE
(
°ru˘_
, 
v¨_
, 
lw™_≠≥nd_°r_esˇ≥d_to_°rbuf
, 
lw™_çl_°r_is_em±y
)

	)

70 
	#TPL_VAR_SENTINEL
 \

71 { 
NULL
, 0, NULL, NULL, NULL, NULL }

	)

78 
lw™_≠≥nd_öt_to_°rbuf
(
°rbuf_t
 *
buf
, *
±r
);

79 
boﬁ
 
lw™_çl_öt_is_em±y
(*
±r
);

80 
lw™_≠≥nd_°r_to_°rbuf
(
°rbuf_t
 *
buf
, *
±r
);

81 
lw™_≠≥nd_°r_esˇ≥d_to_°rbuf
(
°rbuf_t
 *
buf
, *
±r
);

82 
boﬁ
 
lw™_çl_°r_is_em±y
(*
±r
);

83 
lw™_≠≥nd_doubÀ_to_°rbuf
(
°rbuf_t
 *
buf
, *
±r
);

84 
boﬁ
 
lw™_çl_doubÀ_is_em±y
(*
±r
);

86 
lw™_çl_t
 *
lw™_çl_compûe_°rög
(c⁄° *
°rög
, c⁄° 
lw™_v¨_des¸ùt‹_t
 *
des¸ùt‹
);

87 
lw™_çl_t
 *
lw™_çl_compûe_fûe
(c⁄° *
fûíame
, c⁄° 
lw™_v¨_des¸ùt‹_t
 *
des¸ùt‹
);

88 
°rbuf_t
 *
lw™_çl_≠∂y
(
lw™_çl_t
 *
çl
, *
v¨übÀs
);

89 
°rbuf_t
 *
lw™_çl_≠∂y_wôh_buf„r
(
lw™_çl_t
 *
çl
, såbuf_à*
buf
, *
v¨übÀs
);

90 
lw™_çl_‰ì
(
lw™_çl_t
 *
çl
);

	@common/lwan-thread.c

20 
	#_GNU_SOURCE


	)

21 
	~<as£π.h
>

22 
	~<î∫o.h
>

23 
	~<f˙é.h
>

24 
	~<±hªad.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<sys/ïﬁl.h
>

28 
	~<uni°d.h
>

30 
	~"lw™.h
"

32 
	sdóth_queue_t
 {

33 
lw™_c⁄√˘i⁄_t
 *
	mc⁄ns
;

34 
lw™_c⁄√˘i⁄_t
 
	mhód
;

35 
	mtime
;

36 
	mkìp_Æive_timeout
;

39 c⁄° 
	gevíts_by_wrôe_Êag
[] = {

40 
EPOLLOUT
 | 
EPOLLRDHUP
 | 
EPOLLERR
,

41 
EPOLLIN
 | 
EPOLLRDHUP
 | 
EPOLLERR
 | 
EPOLLET


44 
ölöe
 
	$dóth_queue_node_to_idx
(
dóth_queue_t
 *
dq
,

45 
lw™_c⁄√˘i⁄_t
 *
c⁄n
)

47  (
c⁄n
 =&
dq
->
hód
Ë? -1 : ()(
±rdiff_t
)(c⁄¿- dq->
c⁄ns
);

48 
	}
}

50 
ölöe
 
lw™_c⁄√˘i⁄_t
 *
	$dóth_queue_idx_to_node
(
dóth_queue_t
 *
dq
,

51 
idx
)

53  (
idx
 < 0Ë? &
dq
->
hód
 : &dq->
c⁄ns
[idx];

54 
	}
}

56 
	$dóth_queue_ö£π
(
dóth_queue_t
 *
dq
,

57 
lw™_c⁄√˘i⁄_t
 *
√w_node
)

59 
√w_node
->
√xt
 = -1;

60 
√w_node
->
¥ev
 = 
dq
->
hód
.prev;

61 
lw™_c⁄√˘i⁄_t
 *
¥ev
 = 
	`dóth_queue_idx_to_node
(
dq
, dq->
hód
.prev);

62 
dq
->
hód
.
¥ev
 =Öªv->
√xt
 = 
	`dóth_queue_node_to_idx
(dq, 
√w_node
);

63 
	}
}

65 
	$dóth_queue_ªmove
(
dóth_queue_t
 *
dq
,

66 
lw™_c⁄√˘i⁄_t
 *
node
)

68 
lw™_c⁄√˘i⁄_t
 *
¥ev
 = 
	`dóth_queue_idx_to_node
(
dq
, 
node
->prev);

69 
lw™_c⁄√˘i⁄_t
 *
√xt
 = 
	`dóth_queue_idx_to_node
(
dq
, 
node
->next);

70 
√xt
->
¥ev
 = 
node
->prev;

71 
¥ev
->
√xt
 = 
node
->next;

72 
	}
}

74 
boﬁ
 
	$dóth_queue_em±y
(
dóth_queue_t
 *
dq
)

76  
dq
->
hód
.
√xt
 < 0;

77 
	}
}

79 
	$dóth_queue_move_to_œ°
(
dóth_queue_t
 *
dq
,

80 
lw™_c⁄√˘i⁄_t
 *
c⁄n
)

90 
c⁄n
->
time_to_dõ
 = 
dq
->
time
 + dq->
kìp_Æive_timeout
 *

91 ()!!(
c⁄n
->
Êags
 & (
CONN_KEEP_ALIVE
 | 
CONN_SHOULD_RESUME_CORO
));

93 
	`dóth_queue_ªmove
(
dq
, 
c⁄n
);

94 
	`dóth_queue_ö£π
(
dq
, 
c⁄n
);

95 
	}
}

98 
	$dóth_queue_öô
(
dóth_queue_t
 *
dq
, 
lw™_c⁄√˘i⁄_t
 *
c⁄ns
,

99 
kìp_Æive_timeout
)

101 
dq
->
c⁄ns
 = conns;

102 
dq
->
time
 = 0;

103 
dq
->
kìp_Æive_timeout
 = keep_alive_timeout;

104 
dq
->
hód
.
√xt
 = dq->hód.
¥ev
 = -1;

105 
	}
}

107 
ALWAYS_INLINE
 

108 
	$dóth_queue_ïﬁl_timeout
(
dóth_queue_t
 *
dq
)

110  
	`dóth_queue_em±y
(
dq
) ? -1 : 1000;

111 
	}
}

113 
ALWAYS_INLINE
 

114 
	$de°roy_c‹o
(
dóth_queue_t
 *
dq
, 
lw™_c⁄√˘i⁄_t
 *
c⁄n
)

116 
	`dóth_queue_ªmove
(
dq
, 
c⁄n
);

117 i‡(
	`LIKELY
(
c⁄n
->
c‹o
)) {

118 
	`c‹o_‰ì
(
c⁄n
->
c‹o
);

119 
c⁄n
->
c‹o
 = 
NULL
;

121 i‡(
c⁄n
->
Êags
 & 
CONN_IS_ALIVE
) {

122 
c⁄n
->
Êags
 &~
CONN_IS_ALIVE
;

123 
	`˛o£
(
	`lw™_c⁄√˘i⁄_gë_fd
(
c⁄n
));

125 
	}
}

127 
ALWAYS_INLINE
 

128 
	$mö
(c⁄° 
a
, c⁄° 
b
)

130  
a
 < 
b
 ?á : b;

131 
	}
}

134 
	$¥o˚ss_ªque°_c‹o
(
c‹o_t
 *
c‹o
)

136 
°rbuf_t
 *
°rbuf
 = 
	`c‹o_mÆloc_fuŒ
(
c‹o
, (*°rbuf), 
°rbuf_‰ì
);

137 i‡(
	`UNLIKELY
(!
°rbuf
))

138  
CONN_CORO_ABORT
;

140 
lw™_c⁄√˘i⁄_t
 *
c⁄n
 = 
	`c‹o_gë_d©a
(
c‹o
);

141 
lw™_ªque°_t
 
ªque°
 = {

142 .
c⁄n
 = conn,

143 .
fd
 = 
	`lw™_c⁄√˘i⁄_gë_fd
(
c⁄n
),

144 .
ª•⁄£
 = {

145 .
buf„r
 = 
°rbuf


149 
	`as£π
(
c⁄n
->
Êags
 & 
CONN_IS_ALIVE
);

151 
	`°rbuf_öô
(
°rbuf
);

152 
	`lw™_¥o˚ss_ªque°
(
c⁄n
->
thªad
->
lw™
, &
ªque°
);

154  
CONN_CORO_FINISHED
;

155 
	}
}

157 
ALWAYS_INLINE
 

158 
	$ªsume_c‹o_if_√eded
(
dóth_queue_t
 *
dq
, 
lw™_c⁄√˘i⁄_t
 *
c⁄n
,

159 
ïﬁl_fd
)

161 
	`as£π
(
c⁄n
->
c‹o
);

163 i‡(!(
c⁄n
->
Êags
 & 
CONN_SHOULD_RESUME_CORO
))

166 
lw™_c⁄√˘i⁄_c‹o_yõld_t
 
yõld_ªsu…
 = 
	`c‹o_ªsume
(
c⁄n
->
c‹o
);

168 i‡(
yõld_ªsu…
 < 
CONN_CORO_MAY_RESUME
) {

169 
	`de°roy_c‹o
(
dq
, 
c⁄n
);

173 
boﬁ
 
should_ªsume_c‹o
 = 
yõld_ªsu…
 =
CONN_CORO_MAY_RESUME
;

174 
boﬁ
 
wrôe_evíts
 = 
c⁄n
->
Êags
 & 
CONN_WRITE_EVENTS
;

175 i‡(
should_ªsume_c‹o
)

176 
c⁄n
->
Êags
 |
CONN_SHOULD_RESUME_CORO
;

178 
c⁄n
->
Êags
 &~
CONN_SHOULD_RESUME_CORO
;

179 i‡(
should_ªsume_c‹o
 =
wrôe_evíts
)

182 
fd
 = 
	`lw™_c⁄√˘i⁄_gë_fd
(
c⁄n
);

183 
ïﬁl_evít
 
evít
 = {

184 .
evíts
 = 
evíts_by_wrôe_Êag
[
wrôe_evíts
],

185 .
d©a
.
±r
 = 
c⁄n


188 i‡(
	`UNLIKELY
(
	`ïﬁl_˘l
(
ïﬁl_fd
, 
EPOLL_CTL_MOD
, 
fd
, &
evít
) < 0))

189 
	`lw™_°©us_≥º‹
("epoll_ctl");

191 
c⁄n
->
Êags
 ^
CONN_WRITE_EVENTS
;

192 
	}
}

195 
	$dóth_queue_kûl_waôög
(
dóth_queue_t
 *
dq
)

197 
dq
->
time
++;

199 !
	`dóth_queue_em±y
(
dq
)) {

200 
lw™_c⁄√˘i⁄_t
 *
c⁄n
 = 
	`dóth_queue_idx_to_node
(
dq
, dq->
hód
.
√xt
);

202 i‡(
c⁄n
->
time_to_dõ
 > 
dq
->
time
)

205 
	`de°roy_c‹o
(
dq
, 
c⁄n
);

209 
dq
->
time
 = 0;

210 
	}
}

213 
	$lw™_f‹m©_rfc_time
(
time_t
 
t
, 
buf„r
[30])

215 
tm
Åm;

217 i‡(
	`UNLIKELY
(!
	`gmtime_r
(&
t
, &
tm
))) {

218 
	`lw™_°©us_≥º‹
("gmtime_r");

222 i‡(
	`UNLIKELY
(!
	`°r·ime
(
buf„r
, 30, "%a, %d %b %Y %H:%M:%S GMT", &
tm
)))

223 
	`lw™_°©us_≥º‹
("strftime");

224 
	}
}

227 
	$upd©e_d©e_ˇche
(
lw™_thªad_t
 *
thªad
)

229 
time_t
 
now
 = 
	`time
(
NULL
);

230 i‡(
now
 !
thªad
->
d©e
.
œ°
) {

231 
thªad
->
d©e
.
œ°
 = 
now
;

232 
	`lw™_f‹m©_rfc_time
(
now
, 
thªad
->
d©e
.date);

233 
	`lw™_f‹m©_rfc_time
(
now
 + (
time_t
)
thªad
->
lw™
->
c⁄fig
.
expúes
,

234 
thªad
->
d©e
.
expúes
);

236 
	}
}

238 
ALWAYS_INLINE
 

239 
	$•awn_‹_ª£t_c‹o_if_√eded
(
lw™_c⁄√˘i⁄_t
 *
c⁄n
,

240 
c‹o_swôchî_t
 *
swôchî
, 
dóth_queue_t
 *
dq
)

242 i‡(
c⁄n
->
c‹o
) {

243 i‡(
c⁄n
->
Êags
 & 
CONN_SHOULD_RESUME_CORO
)

246 
	`c‹o_ª£t
(
c⁄n
->
c‹o
, 
¥o˚ss_ªque°_c‹o
, conn);

248 
c⁄n
->
c‹o
 = 
	`c‹o_√w
(
swôchî
, 
¥o˚ss_ªque°_c‹o
, conn);

250 
	`dóth_queue_ö£π
(
dq
, 
c⁄n
);

251 
c⁄n
->
Êags
 |
CONN_IS_ALIVE
;

253 
c⁄n
->
Êags
 |
CONN_SHOULD_RESUME_CORO
;

254 
c⁄n
->
Êags
 &~
CONN_WRITE_EVENTS
;

255 
	}
}

257 
lw™_c⁄√˘i⁄_t
 *

258 
	$gøb_™d_w©ch_˛õ¡
(
lw™_thªad_t
 *
t
, 
lw™_c⁄√˘i⁄_t
 *
c⁄ns
)

260 
fd
;

261 i‡(
	`UNLIKELY
(
	`ªad
(
t
->
pùe_fd
[0], &
fd
, ()) != ())) {

262 
	`lw™_°©us_≥º‹
("read");

263  
NULL
;

266 
ïﬁl_evít
 
evít
 = {

267 .
evíts
 = 
evíts_by_wrôe_Êag
[1],

268 .
d©a
.
±r
 = &
c⁄ns
[
fd
]

270 i‡(
	`UNLIKELY
(
	`ïﬁl_˘l
(
t
->
ïﬁl_fd
, 
EPOLL_CTL_ADD
, 
fd
, &
evít
) < 0))

271 
	`lw™_°©us_¸ôiˇl_≥º‹
("epoll_ctl");

273  &
c⁄ns
[
fd
];

274 
	}
}

277 
	$thªad_io_lo›
(*
d©a
)

279 
lw™_thªad_t
 *
t
 = 
d©a
;

280 
ïﬁl_evít
 *
evíts
;

281 
lw™_c⁄√˘i⁄_t
 *
c⁄ns
 = 
t
->
lw™
->conns;

282 
c‹o_swôchî_t
 
swôchî
;

283 
dóth_queue_t
 
dq
;

284 
ïﬁl_fd
 = 
t
->epoll_fd;

285 
n_fds
;

286 c⁄° 
max_evíts
 = 
	`mö
(()
t
->
lw™
->
thªad
.
max_fd
, 1024);

288 
	`lw™_°©us_debug
("Sèπög IOÜo› o¿thªad #%d", 
t
->
id
 + 1);

290 
evíts
 = 
	`ˇŒoc
((
size_t
)
max_evíts
, (*events));

291 i‡(
	`UNLIKELY
(!
evíts
))

292 
	`lw™_°©us_¸ôiˇl
("CouldÇotállocate memory forÉvents");

294 
	`dóth_queue_öô
(&
dq
, 
c⁄ns
, 
t
->
lw™
->
c⁄fig
.
kìp_Æive_timeout
);

297 
n_fds
 = 
	`ïﬁl_waô
(
ïﬁl_fd
, 
evíts
, 
max_evíts
,

298 
	`dóth_queue_ïﬁl_timeout
(&
dq
))) {

300 
î∫o
) {

301 
EBADF
:

302 
EINVAL
:

303 
ïﬁl_fd_˛o£d
;

307 
	`dóth_queue_kûl_waôög
(&
dq
);

310 
	`upd©e_d©e_ˇche
(
t
);

312 
ïﬁl_evít
 *
ï_evít
 = 
evíts
; 
n_fds
--;Ép_event++) {

313 
lw™_c⁄√˘i⁄_t
 *
c⁄n
;

315 i‡(!
ï_evít
->
d©a
.
±r
) {

316 
c⁄n
 = 
	`gøb_™d_w©ch_˛õ¡
(
t
, 
c⁄ns
);

317 i‡(
	`UNLIKELY
(!
c⁄n
))

319 
	`•awn_‹_ª£t_c‹o_if_√eded
(
c⁄n
, &
swôchî
, &
dq
);

321 
c⁄n
 = 
ï_evít
->
d©a
.
±r
;

322 i‡(
	`UNLIKELY
(
ï_evít
->
evíts
 & (
EPOLLRDHUP
 | 
EPOLLHUP
))) {

323 
	`de°roy_c‹o
(&
dq
, 
c⁄n
);

327 
	`•awn_‹_ª£t_c‹o_if_√eded
(
c⁄n
, &
swôchî
, &
dq
);

328 
	`ªsume_c‹o_if_√eded
(&
dq
, 
c⁄n
, 
ïﬁl_fd
);

331 
	`dóth_queue_move_to_œ°
(&
dq
, 
c⁄n
);

336 
ïﬁl_fd_˛o£d
:

337 
	`‰ì
(
evíts
);

339  
NULL
;

340 
	}
}

343 
	$¸óã_thªad
(
lw™_t
 *
l
, 
thªad_n
)

345 
±hªad_©å_t
 
©å
;

346 
lw™_thªad_t
 *
thªad
 = &
l
->thªad.
thªads
[
thªad_n
];

348 
	`mem£t
(
thªad
, 0, (*thread));

349 
thªad
->
lw™
 = 
l
;

350 
thªad
->
id
 = 
thªad_n
;

352 i‡((
thªad
->
ïﬁl_fd
 = 
	`ïﬁl_¸óã1
(0)) < 0)

353 
	`lw™_°©us_¸ôiˇl_≥º‹
("epoll_create");

355 i‡(
	`±hªad_©å_öô
(&
©å
))

356 
	`lw™_°©us_¸ôiˇl_≥º‹
("pthread_attr_init");

358 i‡(
	`±hªad_©å_£tsc›e
(&
©å
, 
PTHREAD_SCOPE_SYSTEM
))

359 
	`lw™_°©us_¸ôiˇl_≥º‹
("pthread_attr_setscope");

361 i‡(
	`±hªad_©å_£tdëach°©e
(&
©å
, 
PTHREAD_CREATE_JOINABLE
))

362 
	`lw™_°©us_¸ôiˇl_≥º‹
("pthread_attr_setdetachstate");

364 i‡(
	`±hªad_¸óã
(&
thªad
->
£lf
, &
©å
, 
thªad_io_lo›
,Åhread))

365 
	`lw™_°©us_¸ôiˇl_≥º‹
("pthread_create");

367 i‡(
	`±hªad_©å_de°roy
(&
©å
))

368 
	`lw™_°©us_¸ôiˇl_≥º‹
("pthread_attr_destroy");

370 i‡(
	`pùe2
(
thªad
->
pùe_fd
, 
O_NONBLOCK
) < 0)

371 
	`lw™_°©us_¸ôiˇl_≥º‹
("pipe");

373 
ïﬁl_evít
 
evít
 = { .
evíts
 = 
EPOLLIN
, .
d©a
.
±r
 = 
NULL
 };

374 i‡(
	`ïﬁl_˘l
(
thªad
->
ïﬁl_fd
, 
EPOLL_CTL_ADD
,Åhªad->
pùe_fd
[0], &
evít
) < 0)

375 
	`lw™_°©us_¸ôiˇl_≥º‹
("epoll_ctl");

376 
	}
}

379 
	$lw™_thªad_add_˛õ¡
(
lw™_thªad_t
 *
t
, 
fd
)

381 
t
->
lw™
->
c⁄ns
[
fd
].
Êags
 = 0;

382 
t
->
lw™
->
c⁄ns
[
fd
].
thªad
 =Å;

384 i‡(
	`UNLIKELY
(
	`wrôe
(
t
->
pùe_fd
[1], &
fd
, ()) < 0))

385 
	`lw™_°©us_≥º‹
("write");

386 
	}
}

389 
	$lw™_thªad_öô
(
lw™_t
 *
l
)

391 
	`lw™_°©us_debug
("InitializingÅhreads");

393 
l
->
thªad
.
thªads
 = 
	`ˇŒoc
((
size_t
Ó->thªad.
cou¡
, (
lw™_thªad_t
));

394 i‡(!
l
->
thªad
.
thªads
)

395 
	`lw™_°©us_¸ôiˇl
("CouldÇotállocate memory forÅhreads");

397 
i
 = 0; i < 
l
->
thªad
.
cou¡
; i++)

398 
	`¸óã_thªad
(
l
, 
i
);

399 
	}
}

402 
	$lw™_thªad_shutdown
(
lw™_t
 *
l
)

404 
	`lw™_°©us_debug
("Shutting downÅhreads");

406 
i
 = 
l
->
thªad
.
cou¡
 - 1; i >= 0; i--) {

407 
lw™_thªad_t
 *
t
 = &
l
->
thªad
.
thªads
[
i
];

410 
	`˛o£
(
t
->
ïﬁl_fd
);

412 
	`˛o£
(
t
->
pùe_fd
[0]);

413 
	`˛o£
(
t
->
pùe_fd
[1]);

415 
	`±hªad_åyjoö_≈
(
l
->
thªad
.
thªads
[
i
].
£lf
, 
NULL
);

418 
	`‰ì
(
l
->
thªad
.
thªads
);

419 
	}
}

	@common/lwan-trie.c

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

23 
	~"lw™.h
"

25 
lw™_åõ_node_t_
 
	tlw™_åõ_node_t
;

26 
lw™_åõ_Àaf_t_
 
	tlw™_åõ_Àaf_t
;

28 
	slw™_åõ_node_t_
 {

29 
lw™_åõ_node_t
 *
	m√xt
[8];

30 
lw™_åõ_Àaf_t
 *
	mÀaf
;

31 
	mªf_cou¡
;

34 
	slw™_åõ_Àaf_t_
 {

35 *
	mkey
;

36 *
	md©a
;

37 
lw™_åõ_Àaf_t
 *
	m√xt
;

40 
	slw™_åõ_t_
 {

41 
lw™_åõ_node_t
 *
	mroŸ
;

42 (*
	m‰ì_node
)(*
	md©a
);

45 
lw™_åõ_t
 *

46 
lw™_åõ_√w
((*
‰ì_node
)(*
d©a
))

48 
lw™_åõ_t
 *
åõ
;

49 
åõ
 = 
	`ˇŒoc
(1, (
lw™_åõ_t
));

50 i‡(!
åõ
)

51  
NULL
;

52 
åõ
->
‰ì_node
 = free_node;

53  
åõ
;

54 
	}
}

56 
ALWAYS_INLINE
 
lw™_åõ_Àaf_t
 *

57 
	$föd_Àaf_wôh_key
(
lw™_åõ_node_t
 *
node
, c⁄° *
key
, 
size_t
 
Àn
)

59 
lw™_åõ_Àaf_t
 *
Àaf
 = 
node
->leaf;

61 i‡(!
Àaf
)

62  
NULL
;

64 i‡(!
Àaf
->
√xt
)

65  
Àaf
;

67 ; 
Àaf
;Üó‡Àaf->
√xt
) {

68 i‡(!
	`°∫cmp
(
Àaf
->
key
, key, 
Àn
 - 1))

69  
Àaf
;

72  
NULL
;

73 
	}
}

75 
	#GET_NODE
() \

77 i‡(!(
node
 = *
knode
)) { \

78 *
knode
 = 
node
 = 
	`ˇŒoc
(1, (*node)); \

79 i‡(!
node
) \

80 
oom
; \

82 ++
node
->
ªf_cou¡
; \

83 } 0)

	)

86 
	$lw™_åõ_add
(
lw™_åõ_t
 *
åõ
, c⁄° *
key
, *
d©a
)

88 i‡(
	`UNLIKELY
(!
åõ
 || !
key
 || !
d©a
))

91 
lw™_åõ_node_t
 **
knode
, *
node
;

92 c⁄° *
‹ig_key
 = 
key
;

95 
knode
 = &
åõ
->
roŸ
; *
key
; knodê&
node
->
√xt
[()(*key++ & 7)])

96 
	`GET_NODE
();

99 
	`GET_NODE
();

101 
lw™_åõ_Àaf_t
 *
Àaf
 = 
	`föd_Àaf_wôh_key
(
node
, 
‹ig_key
, (
size_t
)(
key
 - orig_key));

102 
boﬁ
 
had_key
 = 
Àaf
;

103 i‡(!
Àaf
) {

104 
Àaf
 = 
	`mÆloc
((*leaf));

105 i‡(!
Àaf
)

106 
	`lw™_°©us_¸ôiˇl_≥º‹
("malloc");

109 
Àaf
->
d©a
 = data;

110 i‡(!
had_key
) {

111 
Àaf
->
key
 = 
	`°rdup
(
‹ig_key
);

112 
Àaf
->
√xt
 = 
node
->leaf;

113 
node
->
Àaf
 =Üeaf;

117 
oom
:

118 
	`lw™_°©us_¸ôiˇl_≥º‹
("calloc");

119 
	}
}

121 #unde‡
GET_NODE


123 
ALWAYS_INLINE
 
lw™_åõ_node_t
 *

124 
	$lookup_node
(
lw™_åõ_node_t
 *
roŸ
, c⁄° *
key
, 
boﬁ
 
¥efix
, 
size_t
 *
¥efix_Àn
)

126 
lw™_åõ_node_t
 *
node
, *
¥evious_node
 = 
NULL
;

127 c⁄° *
‹ig_key
 = 
key
;

129 
node
 = 
roŸ
;Çodê&& *
key
;Çodênode->
√xt
[()(*key++ & 7)]) {

130 i‡(
node
->
Àaf
)

131 
¥evious_node
 = 
node
;

134 *
¥efix_Àn
 = (
size_t
)(
key
 - 
‹ig_key
);

135 i‡(
node
 &&Çode->
Àaf
)

136  
node
;

137 i‡(
¥efix
 && 
¥evious_node
)

138  
¥evious_node
;

139  
NULL
;

140 
	}
}

143 
ALWAYS_INLINE
 *

144 
	$lw™_åõ_lookup_fuŒ
(
lw™_åõ_t
 *
åõ
, c⁄° *
key
, 
boﬁ
 
¥efix
)

146 i‡(
	`UNLIKELY
(!
åõ
))

147  
NULL
;

149 
size_t
 
¥efix_Àn
;

150 
lw™_åõ_node_t
 *
node
 = 
	`lookup_node
(
åõ
->
roŸ
, 
key
, 
¥efix
, &
¥efix_Àn
);

151 i‡(!
node
)

152  
NULL
;

153 
lw™_åõ_Àaf_t
 *
Àaf
 = 
	`föd_Àaf_wôh_key
(
node
, 
key
, 
¥efix_Àn
);

154  
Àaf
 ?Üóf->
d©a
 : 
NULL
;

155 
	}
}

157 
ALWAYS_INLINE
 *

158 
	$lw™_åõ_lookup_¥efix
(
lw™_åõ_t
 *
åõ
, c⁄° *
key
)

160  
	`lw™_åõ_lookup_fuŒ
(
åõ
, 
key
, 
åue
);

161 
	}
}

163 
ALWAYS_INLINE
 *

164 
	$lw™_åõ_lookup_exa˘
(
lw™_åõ_t
 *
åõ
, c⁄° *
key
)

166  
	`lw™_åõ_lookup_fuŒ
(
åõ
, 
key
, 
Ál£
);

167 
	}
}

169 
ALWAYS_INLINE
 
öt32_t


170 
	$lw™_åõ_íåy_cou¡
(
lw™_åõ_t
 *
åõ
)

172  (
åõ
 &&Årõ->
roŸ
Ë?Årõ->roŸ->
ªf_cou¡
 : 0;

173 
	}
}

176 
	$lw™_åõ_node_de°roy
(
lw™_åõ_t
 *
åõ
, 
lw™_åõ_node_t
 *
node
)

178 i‡(!
node
)

181 
öt32_t
 
nodes_de°royed
 = 
node
->
ªf_cou¡
;

183 
lw™_åõ_Àaf_t
 *
Àaf
 = 
node
->leaf;Üeaf;) {

184 
lw™_åõ_Àaf_t
 *
tmp
 = 
Àaf
->
√xt
;

186 i‡(
åõ
->
‰ì_node
)

187 
åõ
->
	`‰ì_node
(
Àaf
->
d©a
);

189 
	`‰ì
(
Àaf
->
key
);

190 
	`‰ì
(
Àaf
);

191 
Àaf
 = 
tmp
;

194 
öt32_t
 
i
 = 0; 
nodes_de°royed
 > 0 && i < 8; i++) {

195 i‡(
node
->
√xt
[
i
]) {

196 
	`lw™_åõ_node_de°roy
(
åõ
, 
node
->
√xt
[
i
]);

197 --
nodes_de°royed
;

201 
	`‰ì
(
node
);

202 
	}
}

205 
	$lw™_åõ_de°roy
(
lw™_åõ_t
 *
åõ
)

207 i‡(!
åõ
 || !åõ->
roŸ
)

209 
	`lw™_åõ_node_de°roy
(
åõ
,Årõ->
roŸ
);

210 
	`‰ì
(
åõ
);

211 
	}
}

	@common/lwan-trie.h

20 #i‚de‡
__LWAN_TRIE_H__


21 
	#__LWAN_TRIE_H__


	)

23 
	~<°dboﬁ.h
>

24 
	~<°döt.h
>

26 
lw™_åõ_t_
 
	tlw™_åõ_t
;

28 
lw™_åõ_t
 *
lw™_åõ_√w
((*
‰ì_node
)(*
d©a
));

29 
	`lw™_åõ_de°roy
(
lw™_åõ_t
 *
åõ
);

30 
	`lw™_åõ_add
(
lw™_åõ_t
 *
åõ
, c⁄° *
key
, *
d©a
);

31 *
	`lw™_åõ_lookup_fuŒ
(
lw™_åõ_t
 *
åõ
, c⁄° *
key
, 
boﬁ
 
¥efix
);

32 *
	`lw™_åõ_lookup_¥efix
(
lw™_åõ_t
 *
åõ
, c⁄° *
key
);

33 *
	`lw™_åõ_lookup_exa˘
(
lw™_åõ_t
 *
åõ
, c⁄° *
key
);

34 
öt32_t
 
	`lw™_åõ_íåy_cou¡
(
lw™_åõ_t
 *
åõ
);

	@common/lwan.c

20 
	#_GNU_SOURCE


	)

21 
	~<as£π.h
>

22 
	~<dlf˙.h
>

23 
	~<limôs.h
>

24 
	~<sig«l.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<sys/ïﬁl.h
>

28 
	~<sys/ªsour˚.h
>

29 
	~<uni°d.h
>

30 
	~<î∫o.h
>

32 
	~"lw™.h
"

33 
	~"lw™-¥iv©e.h
"

35 
	~"lw™-c⁄fig.h
"

36 
	~"lw™-hâp-auth‹ize.h
"

37 
	~"lw™-lua.h
"

38 
	~"lw™-ªdúe˘.h
"

39 
	~"lw™-£rve-fûes.h
"

41 c⁄° 
lw™_c⁄fig_t
 
	gdeÁu…_c⁄fig
 = {

42 .
li°íî
 = "localhost:8080",

43 .
	gkìp_Æive_timeout
 = 15,

44 .
	gquõt
 = 
Ál£
,

45 .
	gªu£_p‹t
 = 
Ál£
,

46 .
	gexpúes
 = 1 * 
ONE_WEEK


49 
	$lw™_moduÀ_öô
(
lw™_t
 *
l
)

51 i‡(!
l
->
moduÀ_ªgi°ry
) {

52 
	`lw™_°©us_debug
("Initializing moduleÑegistry");

53 
l
->
moduÀ_ªgi°ry
 = 
	`hash_°r_√w
(
NULL
, NULL);

55 
	}
}

57 
	$lw™_moduÀ_shutdown
(
lw™_t
 *
l
)

59 
	`hash_‰ì
(
l
->
moduÀ_ªgi°ry
);

60 
	}
}

62 
	$lw™_moduÀ_ªgi°î
(
lw™_t
 *
l
, c⁄° 
lw™_moduÀ_t
 *
moduÀ
)

64 i‡(!
moduÀ
->
«me
)

65 
	`lw™_°©us_¸ôiˇl
("ModuÀáà%∞ha†nÿ«me", 
moduÀ
);

67 
	`lw™_°©us_debug
("Regi°îög moduÀ \"%s\"", 
moduÀ
->
«me
);

68 
	`hash_add
(
l
->
moduÀ_ªgi°ry
, 
moduÀ
->
«me
, module);

69 
	}
}

71 c⁄° 
lw™_moduÀ_t
 *
	$lw™_moduÀ_föd
(
lw™_t
 *
l
, c⁄° *
«me
)

73  
	`hash_föd
(
l
->
moduÀ_ªgi°ry
, 
«me
);

74 
	}
}

76 *
	$föd_h™dÀr_symbﬁ
(c⁄° *
«me
)

78 *
symbﬁ
 = 
	`dlsym
(
RTLD_NEXT
, 
«me
);

79 i‡(!
symbﬁ
)

80 
symbﬁ
 = 
	`dlsym
(
RTLD_DEFAULT
, 
«me
);

81  
symbﬁ
;

82 
	}
}

84 
	$de°roy_uæm≠
(*
d©a
)

86 
lw™_uæ_m≠_t
 *
uæ_m≠
 = 
d©a
;

88 i‡(
uæ_m≠
->
moduÀ
) {

89 c⁄° 
lw™_moduÀ_t
 *
moduÀ
 = 
uæ_m≠
->module;

90 i‡(
moduÀ
->
shutdown
)

91 
moduÀ
->
	`shutdown
(
uæ_m≠
->
d©a
);

92 } i‡(
uæ_m≠
->
d©a
) {

93 
	`hash_‰ì
(
uæ_m≠
->
d©a
);

96 
	`‰ì
(
uæ_m≠
->
auth‹iz©i⁄
.
ªÆm
);

97 
	`‰ì
(
uæ_m≠
->
auth‹iz©i⁄
.
∑ssw‹d_fûe
);

98 
	`‰ì
(
uæ_m≠
->
¥efix
);

99 
	`‰ì
(
uæ_m≠
);

100 
	}
}

102 
lw™_uæ_m≠_t
 *
	$add_uæ_m≠
(
lw™_åõ_t
 *
t
, c⁄° *
¥efix
, c⁄° 
lw™_uæ_m≠_t
 *
m≠
)

104 
lw™_uæ_m≠_t
 *
c›y
 = 
	`mÆloc
((*copy));

106 i‡(!
c›y
)

107 
	`lw™_°©us_¸ôiˇl_≥º‹
("CouldÇot copy URL map");

109 
	`mem˝y
(
c›y
, 
m≠
, (*copy));

111 
c›y
->
¥efix
 = 
	`°rdup
(prefix ?Örefix : copy->prefix);

112 
c›y
->
¥efix_Àn
 = 
	`°æí
(c›y->
¥efix
);

113 
	`lw™_åõ_add
(
t
, 
c›y
->
¥efix
, copy);

115  
c›y
;

116 
	}
}

118 
	$∑r£_li°íî_¥efix_auth‹iz©i⁄
(
c⁄fig_t
 *
c
,

119 
c⁄fig_löe_t
 *
l
, 
lw™_uæ_m≠_t
 *
uæ_m≠
)

121 i‡(
	`°rcmp
(
l
->
£˘i⁄
.
∑øm
, "basic")) {

122 
	`c⁄fig_îr‹
(
c
, "Only basicáuthorization supported");

126 
	`mem£t
(&
uæ_m≠
->
auth‹iz©i⁄
, 0, (url_map->authorization));

128 
	`c⁄fig_ªad_löe
(
c
, 
l
)) {

129 
l
->
ty≥
) {

130 
CONFIG_LINE_TYPE_LINE
:

131 i‡(!
	`°rcmp
(
l
->
löe
.
key
, "realm")) {

132 
	`‰ì
(
uæ_m≠
->
auth‹iz©i⁄
.
ªÆm
);

133 
uæ_m≠
->
auth‹iz©i⁄
.
ªÆm
 = 
	`°rdup
(
l
->
löe
.
vÆue
);

134 } i‡(!
	`°rcmp
(
l
->
löe
.
key
, "password file")) {

135 
	`‰ì
(
uæ_m≠
->
auth‹iz©i⁄
.
∑ssw‹d_fûe
);

136 
uæ_m≠
->
auth‹iz©i⁄
.
∑ssw‹d_fûe
 = 
	`°rdup
(
l
->
löe
.
vÆue
);

140 
CONFIG_LINE_TYPE_SECTION
:

141 
	`c⁄fig_îr‹
(
c
, "U√x≥˘ed se˘i⁄: %s", 
l
->
£˘i⁄
.
«me
);

142 
îr‹
;

144 
CONFIG_LINE_TYPE_SECTION_END
:

145 i‡(!
uæ_m≠
->
auth‹iz©i⁄
.
ªÆm
)

146 
uæ_m≠
->
auth‹iz©i⁄
.
ªÆm
 = 
	`°rdup
("Lwan");

147 i‡(!
uæ_m≠
->
auth‹iz©i⁄
.
∑ssw‹d_fûe
)

148 
uæ_m≠
->
auth‹iz©i⁄
.
∑ssw‹d_fûe
 = 
	`°rdup
("htpasswd");

150 
uæ_m≠
->
Êags
 |
HANDLER_MUST_AUTHORIZE
;

151 
out
;

155 
out
:

158 
îr‹
:

159 
	`‰ì
(
uæ_m≠
->
auth‹iz©i⁄
.
ªÆm
);

160 
	`‰ì
(
uæ_m≠
->
auth‹iz©i⁄
.
∑ssw‹d_fûe
);

161 
	}
}

163 
	$∑r£_li°íî_¥efix
(
c⁄fig_t
 *
c
, 
c⁄fig_löe_t
 *
l
, 
lw™_t
 *
lw™
,

164 c⁄° 
lw™_moduÀ_t
 *
moduÀ
)

166 
lw™_uæ_m≠_t
 
uæ_m≠
 = {0};

167 
hash
 *hash = 
	`hash_°r_√w
(
‰ì
, free);

168 *
h™dÀr
 = 
NULL
;

169 *
¥efix
 = 
	`°rdu∑
(
l
->
löe
.
vÆue
);

171 
	`c⁄fig_ªad_löe
(
c
, 
l
)) {

172 
l
->
ty≥
) {

173 
CONFIG_LINE_TYPE_LINE
:

174 i‡(!
	`°rcmp
(
l
->
löe
.
key
, "module")) {

175 i‡(
moduÀ
) {

176 
	`c⁄fig_îr‹
(
c
, "Moduleálready specified");

177 
out
;

179 
moduÀ
 = 
	`lw™_moduÀ_föd
(
lw™
, 
l
->
löe
.
vÆue
);

180 i‡(!
moduÀ
) {

181 
	`c⁄fig_îr‹
(
c
, "CouldÇŸ föd moduÀ \"%s\"", 
l
->
löe
.
vÆue
);

182 
out
;

184 } i‡(!
	`°rcmp
(
l
->
löe
.
key
, "handler")) {

185 
h™dÀr
 = 
	`föd_h™dÀr_symbﬁ
(
l
->
löe
.
vÆue
);

186 i‡(!
h™dÀr
) {

187 
	`c⁄fig_îr‹
(
c
, "CouldÇŸ föd h™dÀ∏\"%s\"", 
l
->
löe
.
vÆue
);

188 
out
;

191 
	`hash_add
(
hash
, 
	`°rdup
(
l
->
löe
.
key
), sådup÷->löe.
vÆue
));

195 
CONFIG_LINE_TYPE_SECTION
:

196 i‡(!
	`°rcmp
(
l
->
£˘i⁄
.
«me
, "authorization")) {

197 
	`∑r£_li°íî_¥efix_auth‹iz©i⁄
(
c
, 
l
, &
uæ_m≠
);

199 
	`c⁄fig_îr‹
(
c
, "Unknow¿£˘i⁄Åy≥: \"%s\"", 
l
->
£˘i⁄
.
«me
);

200 
out
;

204 
CONFIG_LINE_TYPE_SECTION_END
:

205 
add_m≠
;

209 
	`c⁄fig_îr‹
(
c
, "Expecting sectionÉnd whileÖarsingÖrefix");

210 
out
;

212 
add_m≠
:

213 i‡(
moduÀ
 =
h™dÀr
 && !handler) {

214 
	`c⁄fig_îr‹
(
c
, "Missing module or handler");

215 
out
;

217 i‡(
moduÀ
 && 
h™dÀr
) {

218 
	`c⁄fig_îr‹
(
c
, "Handleránd moduleáre mutuallyÉxclusive");

219 
out
;

222 i‡(
h™dÀr
) {

223 
uæ_m≠
.
h™dÀr
 = handler;

224 
uæ_m≠
.
Êags
 |
HANDLER_PARSE_MASK
;

225 
uæ_m≠
.
d©a
 = 
hash
;

226 
uæ_m≠
.
moduÀ
 = 
NULL
;

228 
hash
 = 
NULL
;

229 } i‡(
moduÀ
 && moduÀ->
öô_‰om_hash
 && moduÀ->
h™dÀ
) {

230 
uæ_m≠
.
d©a
 = 
moduÀ
->
	`öô_‰om_hash
(
hash
);

231 
uæ_m≠
.
h™dÀr
 = 
moduÀ
->
h™dÀ
;

232 
uæ_m≠
.
Êags
 |
moduÀ
->flags;

233 
uæ_m≠
.
moduÀ
 = module;

235 
	`c⁄fig_îr‹
(
c
, "Invalid handler");

236 
out
;

239 
	`add_uæ_m≠
(
lw™
->
uæ_m≠_åõ
, 
¥efix
, &
uæ_m≠
);

241 
out
:

242 
	`hash_‰ì
(
hash
);

243 
	}
}

245 
	$lw™_£t_uæ_m≠
(
lw™_t
 *
l
, c⁄° 
lw™_uæ_m≠_t
 *
m≠
)

247 
	`lw™_åõ_de°roy
(
l
->
uæ_m≠_åõ
);

248 
l
->
uæ_m≠_åõ
 = 
	`lw™_åõ_√w
(
de°roy_uæm≠
);

250 ; 
m≠
->
¥efix
; map++) {

251 
lw™_uæ_m≠_t
 *
c›y
 = 
	`add_uæ_m≠
(
l
->
uæ_m≠_åõ
, 
NULL
, 
m≠
);

253 i‡(
	`UNLIKELY
(!
c›y
))

256 i‡(
c›y
->
moduÀ
 && c›y->moduÀ->
öô
) {

257 
c›y
->
d©a
 = c›y->
moduÀ
->
	`öô
(c›y->
¨gs
);

258 
c›y
->
Êags
 = c›y->
moduÀ
->flags;

259 
c›y
->
h™dÀr
 = c›y->
moduÀ
->
h™dÀ
;

261 
c›y
->
Êags
 = 
HANDLER_PARSE_MASK
;

264 
	}
}

266 
	$∑r£_li°íî
(
c⁄fig_t
 *
c
, 
c⁄fig_löe_t
 *
l
, 
lw™_t
 *
lw™
)

268 
lw™
->
c⁄fig
.
li°íî
 = 
	`°rdup
(
l
->
£˘i⁄
.
∑øm
);

270 
	`c⁄fig_ªad_löe
(
c
, 
l
)) {

271 
l
->
ty≥
) {

272 
CONFIG_LINE_TYPE_LINE
:

273 
	`c⁄fig_îr‹
(
c
, "ExpectingÖrefix section");

275 
CONFIG_LINE_TYPE_SECTION
:

276 i‡(!
	`°rcmp
(
l
->
£˘i⁄
.
«me
, "prefix")) {

277 
	`∑r£_li°íî_¥efix
(
c
, 
l
, 
lw™
, 
NULL
);

279 c⁄° 
lw™_moduÀ_t
 *
moduÀ
 = 
	`lw™_moduÀ_föd
(
lw™
, 
l
->
£˘i⁄
.
«me
);

280 i‡(!
moduÀ
) {

281 
	`c⁄fig_îr‹
(
c
, "Invalid sectionÇame or moduleÇot found: %s",

282 
l
->
£˘i⁄
.
«me
);

284 
	`∑r£_li°íî_¥efix
(
c
, 
l
, 
lw™
, 
moduÀ
);

288 
CONFIG_LINE_TYPE_SECTION_END
:

293 
	`c⁄fig_îr‹
(
c
, "Expecting sectionÉnd whileÖarsingÜistener");

294 
	}
}

296 c⁄° *
	$gë_c⁄fig_∑th
(*
∑th_buf
)

298 *
∑th
 = 
NULL
;

299 
ssize_t
 
∑th_Àn
;

303 
∑th_Àn
 = 
	`ªadlök
("/¥oc/£lf/exe", 
∑th_buf
, 
PATH_MAX
);

304 i‡(
∑th_Àn
 < 0)

305 
out
;

306 
∑th_buf
[
∑th_Àn
] = '\0';

307 
∑th
 = 
	`°ºchr
(
∑th_buf
, '/');

308 i‡(!
∑th
)

309 
out
;

310 i‡(
	`¢¥ötf
(
∑th_buf
, 
PATH_MAX
, "%s.c⁄f", 
∑th
 + 1) < 0)

311 
out
;

313  
∑th_buf
;

315 
out
:

317 
	}
}

319 
boﬁ
 
	$£tup_‰om_c⁄fig
(
lw™_t
 *
lw™
)

321 
c⁄fig_t
 
c⁄f
;

322 
c⁄fig_löe_t
 
löe
;

323 
boﬁ
 
has_li°íî
 = 
Ál£
;

324 
∑th_buf
[
PATH_MAX
];

325 c⁄° *
∑th
;

327 
∑th
 = 
	`gë_c⁄fig_∑th
(
∑th_buf
);

328 
	`lw™_°©us_öfo
("Lﬂdög c⁄figuøti⁄ fûe: %s", 
∑th
);

330 
lw™
->
uæ_m≠_åõ
 = 
	`lw™_åõ_√w
(
de°roy_uæm≠
);

332 i‡(!
	`c⁄fig_›í
(&
c⁄f
, 
∑th
))

333  
Ál£
;

335 
	`c⁄fig_ªad_löe
(&
c⁄f
, &
löe
)) {

336 
löe
.
ty≥
) {

337 
CONFIG_LINE_TYPE_LINE
:

338 i‡(!
	`°rcmp
(
löe
.löe.
key
, "keep_alive_timeout"))

339 
lw™
->
c⁄fig
.
kìp_Æive_timeout
 = ()
	`∑r£_l⁄g
(
löe
.löe.
vÆue
,

340 
deÁu…_c⁄fig
.
kìp_Æive_timeout
);

341 i‡(!
	`°rcmp
(
löe
.löe.
key
, "quiet"))

342 
lw™
->
c⁄fig
.
quõt
 = 
	`∑r£_boﬁ
(
löe
.löe.
vÆue
,

343 
deÁu…_c⁄fig
.
quõt
);

344 i‡(!
	`°rcmp
(
löe
.löe.
key
, "reuse_port"))

345 
lw™
->
c⁄fig
.
ªu£_p‹t
 = 
	`∑r£_boﬁ
(
löe
.löe.
vÆue
,

346 
deÁu…_c⁄fig
.
ªu£_p‹t
);

347 i‡(!
	`°rcmp
(
löe
.löe.
key
, "expires"))

348 
lw™
->
c⁄fig
.
expúes
 = 
	`∑r£_time_≥riod
(
löe
.löe.
vÆue
,

349 
deÁu…_c⁄fig
.
expúes
);

351 
	`c⁄fig_îr‹
(&
c⁄f
, "Unknow¿c⁄fig key: %s", 
löe
.löe.
key
);

353 
CONFIG_LINE_TYPE_SECTION
:

354 i‡(!
has_li°íî
) {

355 
has_li°íî
 = 
åue
;

356 i‡(!
	`°rcmp
(
löe
.
£˘i⁄
.
«me
, "listener"))

357 
	`∑r£_li°íî
(&
c⁄f
, &
löe
, 
lw™
);

359 
	`c⁄fig_îr‹
(&
c⁄f
, "Unknow¿£˘i⁄Åy≥: %s", 
löe
.
£˘i⁄
.
«me
);

361 
	`c⁄fig_îr‹
(&
c⁄f
, "Only oneÜistener supported");

364 
CONFIG_LINE_TYPE_SECTION_END
:

365 
	`c⁄fig_îr‹
(&
c⁄f
, "Unexpected sectionÉnd");

369 i‡(
c⁄f
.
îr‹_mesßge
) {

370 
	`lw™_°©us_¸ôiˇl
("Error on config file \"%s\",Üine %d: %s",

371 
∑th
, 
c⁄f
.
löe
, c⁄f.
îr‹_mesßge
);

374 
	`c⁄fig_˛o£
(&
c⁄f
);

376  
åue
;

377 
	}
}

379 
æim_t


380 
	$£tup_›í_fûe_cou¡_limôs
()

382 
æimô
 
r
;

384 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
r
) < 0)

385 
	`lw™_°©us_¸ôiˇl_≥º‹
("getrlimit");

387 i‡(
r
.
æim_max
 =
RLIM_INFINITY
)

388 
r
.
æim_cur
 *= 8;

389 i‡(
r
.
æim_cur
 <Ñ.
æim_max
)

390 
r
.
æim_cur
 =Ñ.
æim_max
;

392 i‡(
	`£ålimô
(
RLIMIT_NOFILE
, &
r
) < 0)

393 
	`lw™_°©us_¸ôiˇl_≥º‹
("setrlimit");

395  
r
.
æim_cur
;

396 
	}
}

399 
	$Æloˇã_c⁄√˘i⁄s
(
lw™_t
 *
l
, 
size_t
 
max_›í_fûes
)

401 
l
->
c⁄ns
 = 
	`ˇŒoc
(
max_›í_fûes
, (
lw™_c⁄√˘i⁄_t
));

402 i‡(!
l
->
c⁄ns
)

403 
	`lw™_°©us_¸ôiˇl_≥º‹
("calloc");

404 
	}
}

407 
	$gë_numbî_of_˝us
()

409 
n_⁄löe_˝us
 = 
	`sysc⁄f
(
_SC_NPROCESSORS_ONLN
);

410 i‡(
	`UNLIKELY
(
n_⁄löe_˝us
 < 0)) {

411 
	`lw™_°©us_w¨nög
("CouldÇot getÇumber of online CPUs,ássuming 1 CPU.");

414  ()
n_⁄löe_˝us
;

415 
	}
}

418 
	$lw™_öô
(
lw™_t
 *
l
)

421 
	`mem£t
(
l
, 0, (*l));

422 
	`mem˝y
(&
l
->
c⁄fig
, &
deÁu…_c⁄fig
, (default_config));

426 
	`lw™_°©us_öô
(
l
);

431 
	`lw™_job_thªad_öô
();

432 
	`lw™_ª•⁄£_öô
();

433 
	`lw™_èbÀs_öô
();

435 
	`lw™_moduÀ_öô
(
l
);

436 
	`lw™_moduÀ_ªgi°î
(
l
, 
	`lw™_moduÀ_£rve_fûes
());

437 
	`lw™_moduÀ_ªgi°î
(
l
, 
	`lw™_moduÀ_ªdúe˘
());

438 
	`lw™_moduÀ_ªgi°î
(
l
, 
	`lw™_moduÀ_lua
());

441 i‡(!
	`£tup_‰om_c⁄fig
(
l
))

442 
	`lw™_°©us_w¨nög
("CouldÇotÑead config file, using defaults");

445 
	`lw™_°©us_debug
("InitializingÜwan web server");

447 
l
->
thªad
.
cou¡
 = 
	`gë_numbî_of_˝us
();

448 i‡(
l
->
thªad
.
cou¡
 == 1)

449 
l
->
thªad
.
cou¡
 = 2;

451 
æim_t
 
max_›í_fûes
 = 
	`£tup_›í_fûe_cou¡_limôs
();

452 
	`Æloˇã_c⁄√˘i⁄s
(
l
, (
size_t
)
max_›í_fûes
);

454 
l
->
thªad
.
max_fd
 = ()
max_›í_fûes
 / (Ó->thªad.
cou¡
;

455 
	`lw™_°©us_öfo
("Using %dÅhreads, maximum %d socketsÖerÅhread",

456 
l
->
thªad
.
cou¡
,Ü->thªad.
max_fd
);

458 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

459 
	`˛o£
(
STDIN_FILENO
);

461 
	`lw™_thªad_öô
(
l
);

462 
	`lw™_sockë_öô
(
l
);

463 
	`lw™_hâp_auth‹ize_öô
();

464 
	}
}

467 
	$lw™_shutdown
(
lw™_t
 *
l
)

469 
	`lw™_°©us_öfo
("Shutting down");

471 i‡(
l
->
c⁄fig
.
li°íî
 !
deÁu…_c⁄fig
.listener)

472 
	`‰ì
(
l
->
c⁄fig
.
li°íî
);

474 
	`lw™_job_thªad_shutdown
();

475 
	`lw™_thªad_shutdown
(
l
);

477 
	`lw™_°©us_debug
("Shutting down URL handlers");

478 
	`lw™_åõ_de°roy
(
l
->
uæ_m≠_åõ
);

480 
	`‰ì
(
l
->
c⁄ns
);

482 
	`lw™_ª•⁄£_shutdown
();

483 
	`lw™_èbÀs_shutdown
();

484 
	`lw™_°©us_shutdown
(
l
);

485 
	`lw™_hâp_auth‹ize_shutdown
();

486 
	`lw™_moduÀ_shutdown
(
l
);

487 
	}
}

489 
ALWAYS_INLINE
 

490 
	$scheduÀ_˛õ¡
(
lw™_t
 *
l
, 
fd
)

492 
thªad
;

493 #ifde‡
__x86_64__


494 
	`°©ic_as£π
((
lw™_c⁄√˘i⁄_t
) == 32,

502 
thªad
 = ((
fd
 - 1Ë/ 2Ë% 
l
->thªad.
cou¡
;

504 
cou¡î
 = 0;

505 
thªad
 = 
cou¡î
++ % 
l
->thªad.
cou¡
;

507 
lw™_thªad_t
 *
t
 = &
l
->
thªad
.
thªads
[thread];

508 
	`lw™_thªad_add_˛õ¡
(
t
, 
fd
);

509 
	}
}

511 vﬁ©ûê
sig_©omic_t
 
	gmaö_sockë
 = -1;

514 
sigöt_h™dÀr
(
sig«l_numbî
 
__©åibuã__
((
unu£d
)))

516 i‡(
	gmaö_sockë
 < 0)

518 
˛o£
(
maö_sockë
);

519 
	gmaö_sockë
 = -1;

523 
	$lw™_maö_lo›
(
lw™_t
 *
l
)

525 
	`as£π
(
maö_sockë
 == -1);

526 
maö_sockë
 = 
l
->main_socket;

527 i‡(
	`sig«l
(
SIGINT
, 
sigöt_h™dÀr
Ë=
SIG_ERR
)

528 
	`lw™_°©us_¸ôiˇl
("CouldÇot set signal handler");

530 
	`lw™_°©us_öfo
("ReadyÅo serve");

533 
˛õ¡_fd
 = 
	`ac˚±4
(
l
->
maö_sockë
, 
NULL
, NULL, 
SOCK_NONBLOCK
);

534 i‡(
	`UNLIKELY
(
˛õ¡_fd
 < 0)) {

535 i‡(
î∫o
 !
EBADF
) {

536 
	`lw™_°©us_≥º‹
("accept");

540 i‡(
maö_sockë
 < 0) {

541 
	`lw™_°©us_öfo
("Signal 2 (Interrupt)Ñeceived");

543 
	`lw™_°©us_öfo
("Main socket closed for unknownÑeasons");

549 
	`scheduÀ_˛õ¡
(
l
, 
˛õ¡_fd
);

551 
	}
}

	@common/lwan.h

20 #i‚de‡
__LWAN_H__


21 
	#__LWAN_H__


	)

23 
	~<±hªad.h
>

24 
	~<°dboﬁ.h
>

25 
	~<°döt.h
>

26 
	~<√töë/ö.h
>

28 
	~"lw™-c‹o.h
"

29 
	~"lw™-åõ.h
"

30 
	~"lw™-°©us.h
"

31 
	~"°rbuf.h
"

32 
	~"hash.h
"

34 
	#DEFAULT_BUFFER_SIZE
 4096

	)

35 
	#DEFAULT_HEADERS_SIZE
 512

	)

37 #unde‡
°©ic_as£π


38 #i‡
HAVE_STATIC_ASSERT


39 
	#°©ic_as£π
(
ex¥
, 
msg
Ë
	`_Sètic_as£π
”x¥, msg)

	)

41 
	#°©ic_as£π
(
ex¥
, 
msg
)

	)

44 
	#N_ELEMENTS
(
¨øy
Ë(◊ºayË/ ◊ºay[0]))

	)

46 #i‡
__BYTE_ORDER__
 =
__ORDER_LITTLE_ENDIAN__


47 
	#MULTICHAR_CONSTANT
(
a
,
b
,
c
,
d
Ë((
öt32_t
)(◊Ë| (bË<< 8 | (cË<< 16 | (dË<< 24))

	)

48 #ñi‡
__BYTE_ORDER__
 =
__ORDER_BIG_ENDIAN__


49 
	#MULTICHAR_CONSTANT
(
d
,
c
,
b
,
a
Ë((
öt32_t
)(◊Ë| (bË<< 8 | (cË<< 16 | (dË<< 24))

	)

50 #ñi‡
__BYTE_ORDER__
 =
__ORDER_PDP_ENDIAN__


51 #îr‹ 
A
 
PDP
? 
Sîiou¶y
?

54 
	#MULTICHAR_CONSTANT_L
(
a
,
b
,
c
,
d
Ë(
	`MULTICHAR_CONSTANT
◊,b,c,dË| 0x20202020)

	)

56 
	#STRING_SWITCH
(
s
Ë*((
öt32_t
 *)(s)))

	)

57 
	#STRING_SWITCH_L
(
s
Ë*((
öt32_t
 *)(s)Ë| 0x20202020)

	)

59 #ifde‡
DISABLE_INLINE_FUNCTIONS


60 
	#ALWAYS_INLINE


	)

62 
	#ALWAYS_INLINE
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

65 #ifde‡
DISABLE_BRANCH_PREDICTION


66 
	#LIKELY_IS
(
x
,
y
Ë(x)

	)

68 
	#LIKELY_IS
(
x
,
y
Ë
	`__buûtö_ex≥˘
((x), (y))

	)

71 
	#LIKELY
(
x
Ë
	`LIKELY_IS
(!!(x), 1)

	)

72 
	#UNLIKELY
(
x
Ë
	`LIKELY_IS
((x), 0)

	)

74 
	#ATOMIC_READ
(
V
Ë(*(vﬁ©ûê
	`ty≥of
(VË*)&(V))

	)

75 
	#ATOMIC_AAF
(
P
, 
V
Ë(
	`__sync_add_™d_„tch
((P), (V)))

	)

76 
	#ATOMIC_INC
(
V
Ë
	`ATOMIC_AAF
(&(V), 1)

	)

77 
	#ATOMIC_DEC
(
V
Ë
	`ATOMIC_AAF
(&(V), -1)

	)

78 
	#ATOMIC_BITWISE
(
P
, 
O
, 
V
Ë(
__sync_
##O##
	`_™d_„tch
((P), (V)))

	)

80 
lw™_t_
 
	tlw™_t
;

81 
lw™_moduÀ_t_
 
	tlw™_moduÀ_t
;

82 
lw™_key_vÆue_t_
 
	tlw™_key_vÆue_t
;

83 
lw™_ªque°_t_
 
	tlw™_ªque°_t
;

84 
lw™_ª•⁄£_t_
 
	tlw™_ª•⁄£_t
;

85 
lw™_thªad_t_
 
	tlw™_thªad_t
;

86 
lw™_uæ_m≠_t_
 
	tlw™_uæ_m≠_t
;

87 
lw™_vÆue_t_
 
	tlw™_vÆue_t
;

88 
lw™_c⁄fig_t_
 
	tlw™_c⁄fig_t
;

89 
lw™_c⁄√˘i⁄_t_
 
	tlw™_c⁄√˘i⁄_t
;

92 
	mHTTP_OK
 = 200,

93 
	mHTTP_PARTIAL_CONTENT
 = 206,

94 
	mHTTP_MOVED_PERMANENTLY
 = 301,

95 
	mHTTP_NOT_MODIFIED
 = 304,

96 
	mHTTP_BAD_REQUEST
 = 400,

97 
	mHTTP_NOT_AUTHORIZED
 = 401,

98 
	mHTTP_FORBIDDEN
 = 403,

99 
	mHTTP_NOT_FOUND
 = 404,

100 
	mHTTP_NOT_ALLOWED
 = 405,

101 
	mHTTP_TIMEOUT
 = 408,

102 
	mHTTP_TOO_LARGE
 = 413,

103 
	mHTTP_RANGE_UNSATISFIABLE
 = 416,

104 
	mHTTP_INTERNAL_ERROR
 = 500,

105 
	mHTTP_UNAVAILABLE
 = 503,

106 } 
	tlw™_hâp_°©us_t
;

109 
	mHANDLER_PARSE_QUERY_STRING
 = 1<<0,

110 
	mHANDLER_PARSE_IF_MODIFIED_SINCE
 = 1<<1,

111 
	mHANDLER_PARSE_RANGE
 = 1<<2,

112 
	mHANDLER_PARSE_ACCEPT_ENCODING
 = 1<<3,

113 
	mHANDLER_PARSE_POST_DATA
 = 1<<4,

114 
	mHANDLER_MUST_AUTHORIZE
 = 1<<5,

115 
	mHANDLER_REMOVE_LEADING_SLASH
 = 1<<6,

117 
	mHANDLER_PARSE_MASK
 = 1<<0 | 1<<1 | 1<<2 | 1<<3 | 1<<4

118 } 
	tlw™_h™dÀr_Êags_t
;

121 
	mREQUEST_ACCEPT_DEFLATE
 = 1<<0,

122 
	mREQUEST_IS_HTTP_1_0
 = 1<<1,

123 
	mREQUEST_METHOD_GET
 = 1<<2,

124 
	mREQUEST_METHOD_HEAD
 = 1<<3,

125 
	mREQUEST_METHOD_POST
 = 1<<4,

126 
	mRESPONSE_SENT_HEADERS
 = 1<<5,

127 
	mRESPONSE_CHUNKED_ENCODING
 = 1<<6,

128 
	mRESPONSE_NO_CONTENT_LENGTH
 = 1<<7

129 } 
	tlw™_ªque°_Êags_t
;

132 
	mCONN_MASK
 = -1,

133 
	mCONN_KEEP_ALIVE
 = 1<<0,

134 
	mCONN_IS_ALIVE
 = 1<<1,

135 
	mCONN_SHOULD_RESUME_CORO
 = 1<<2,

136 
	mCONN_WRITE_EVENTS
 = 1<<3

137 } 
	tlw™_c⁄√˘i⁄_Êags_t
;

140 
	mCONN_CORO_ABORT
 = -1,

141 
	mCONN_CORO_MAY_RESUME
 = 0,

142 
	mCONN_CORO_FINISHED
 = 1

143 } 
	tlw™_c⁄√˘i⁄_c‹o_yõld_t
;

145 
	slw™_key_vÆue_t_
 {

146 *
	mkey
;

147 *
	mvÆue
;

150 
	slw™_ª•⁄£_t_
 {

151 
°rbuf_t
 *
	mbuf„r
;

152 c⁄° *
	mmime_ty≥
;

153 
size_t
 
	mc⁄ã¡_Àngth
;

154 
lw™_key_vÆue_t
 *
	mhódîs
;

157 
lw™_hâp_°©us_t
 (*
ˇŒback
)(
lw™_ªque°_t
 *
	mªque°
, *
	md©a
);

158 *
	md©a
;

159 *
	m¥iv
;

160 } 
	m°ªam
;

163 
	slw™_vÆue_t_
 {

164 *
	mvÆue
;

165 
size_t
 
	mÀn
;

168 
	slw™_c⁄√˘i⁄_t_
 {

171 
lw™_c⁄√˘i⁄_Êags_t
 
	mÊags
;

172 
	mtime_to_dõ
;

173 
c‹o_t
 *
	mc‹o
;

174 
lw™_thªad_t
 *
	mthªad
;

175 
	m¥ev
, 
	m√xt
;

178 
	slw™_ªque°_t_
 {

179 
lw™_ªque°_Êags_t
 
	mÊags
;

180 
	mfd
;

181 
lw™_vÆue_t
 
	muæ
;

182 
lw™_vÆue_t
 
	m‹igöÆ_uæ
;

183 
lw™_c⁄√˘i⁄_t
 *
	mc⁄n
;

186 
lw™_key_vÆue_t
 *
	mba£
;

187 
size_t
 
	mÀn
;

188 } 
	mquîy_∑øms
, 
	mpo°_d©a
;

190 
time_t
 
	mif_modifõd_sö˚
;

192 
off_t
 
	m‰om
;

193 
off_t
 
	mto
;

194 } 
	mønge
;

195 } 
	mhódî
;

196 
lw™_ª•⁄£_t
 
	mª•⁄£
;

199 
	slw™_moduÀ_t_
 {

200 c⁄° *
	m«me
;

201 *(*
	möô
)(*
	m¨gs
);

202 *(*
	möô_‰om_hash
)(c⁄° 
hash
 *
	mhash
);

203 (*
	mshutdown
)(*
	md©a
);

204 
lw™_hâp_°©us_t
 (*
h™dÀ
)(
lw™_ªque°_t
 *
	mªque°
, 
lw™_ª•⁄£_t
 *
	mª•⁄£
, *
	md©a
);

205 
lw™_h™dÀr_Êags_t
 
	mÊags
;

208 
	slw™_uæ_m≠_t_
 {

209 
lw™_hâp_°©us_t
 (*
h™dÀr
)(
lw™_ªque°_t
 *
	mªque°
, 
lw™_ª•⁄£_t
 *
	mª•⁄£
, *
	md©a
);

210 *
	md©a
;

212 *
	m¥efix
;

213 
size_t
 
	m¥efix_Àn
;

214 
lw™_h™dÀr_Êags_t
 
	mÊags
;

216 c⁄° 
lw™_moduÀ_t
 *
	mmoduÀ
;

217 *
	m¨gs
;

220 *
	mªÆm
;

221 *
	m∑ssw‹d_fûe
;

222 } 
	mauth‹iz©i⁄
;

225 
	slw™_thªad_t_
 {

226 
lw™_t
 *
	mlw™
;

228 
	md©e
[30];

229 
	mexpúes
[30];

230 
time_t
 
	mœ°
;

231 } 
	md©e
;

232 
	mid
;

234 
±hªad_t
 
	m£lf
;

235 
	mïﬁl_fd
;

236 
	mpùe_fd
[2];

239 
	slw™_c⁄fig_t_
 {

240 *
	mli°íî
;

241 
	mkìp_Æive_timeout
;

242 
boﬁ
 
	mquõt
;

243 
boﬁ
 
	mªu£_p‹t
;

244 
	mexpúes
;

247 
	slw™_t_
 {

248 
lw™_åõ_t
 *
	muæ_m≠_åõ
;

249 
lw™_c⁄√˘i⁄_t
 *
	mc⁄ns
;

250 
	mmaö_sockë
;

252 
lw™_c⁄fig_t
 
	mc⁄fig
;

255 
	mcou¡
;

256 
	mmax_fd
;

257 
lw™_thªad_t
 *
	mthªads
;

258 } 
	mthªad
;

260 
hash
 *
	mmoduÀ_ªgi°ry
;

263 
lw™_£t_uæ_m≠
(
lw™_t
 *
l
, c⁄° 
lw™_uæ_m≠_t
 *
m≠
);

264 
lw™_maö_lo›
(
lw™_t
 *
l
);

266 
lw™_ª•⁄£
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
);

267 
lw™_deÁu…_ª•⁄£
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
);

268 
size_t
 
	$lw™_¥ï¨e_ª•⁄£_hódî
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
, 
hódî_buf„r
[], 
size_t
 
hódî_buf„r_size
)

269 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
));

271 c⁄° *
	$lw™_ªque°_gë_po°_∑øm
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
key
)

272 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
));

273 c⁄° *
	$lw™_ªque°_gë_quîy_∑øm
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
key
)

274 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
));

275 c⁄° *
	$lw™_ªque°_gë_ªmŸe_addªss
(
lw™_ªque°_t
 *
ªque°
, 
buf„r
[
INET6_ADDRSTRLEN
])

276 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
));

277 
	`lw™_¥o˚ss_ªque°
(
lw™_t
 *
l
, 
lw™_ªque°_t
 *
ªque°
);

279 
boﬁ
 
	`lw™_ª•⁄£_£t_chunked
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
);

280 
	`lw™_ª•⁄£_£nd_chunk
(
lw™_ªque°_t
 *
ªque°
);

282 
boﬁ
 
	`lw™_ª•⁄£_£t_evít_°ªam
(
lw™_ªque°_t
 *
ªque°
, 
lw™_hâp_°©us_t
 
°©us
);

283 
	`lw™_ª•⁄£_£nd_evít
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
evít
);

285 
	`lw™_f‹m©_rfc_time
(
time_t
 
t
, 
buf„r
[30]);

287 c⁄° *
	$lw™_hâp_°©us_as_°rög
(
lw™_hâp_°©us_t
 
°©us
)

288 
	`__©åibuã__
((
puª
)Ë__©åibuã__((
w¨n_unu£d_ªsu…
));

289 c⁄° *
	$lw™_hâp_°©us_as_°rög_wôh_code
(
lw™_hâp_°©us_t
 
°©us
)

290 
	`__©åibuã__
((
puª
)Ë__©åibuã__((
w¨n_unu£d_ªsu…
));

291 c⁄° *
	$lw™_hâp_°©us_as_des¸ùtive_°rög
(
lw™_hâp_°©us_t
 
°©us
)

292 
	`__©åibuã__
((
puª
)Ë__©åibuã__((
w¨n_unu£d_ªsu…
));

293 c⁄° *
	$lw™_dëîmöe_mime_ty≥_f‹_fûe_«me
(c⁄° *
fûe_«me
)

294 
	`__©åibuã__
((
puª
)Ë__©åibuã__((
w¨n_unu£d_ªsu…
));

296 
	`lw™_öô
(
lw™_t
 *
l
);

297 
	`lw™_shutdown
(
lw™_t
 *
l
);

299 
	$lw™_c⁄√˘i⁄_gë_fd
(
lw™_c⁄√˘i⁄_t
 *
c⁄n
)

300 
	`__©åibuã__
((
puª
)Ë__©åibuã__((
w¨n_unu£d_ªsu…
));

	@common/murmur3.c

10 
	~"murmur3.h
"

11 
	~<°döt.h
>

12 
	~<°rög.h
>

17 #ifde‡
__GNUC__


18 
	#FORCE_INLINE
 
	`__©åibuã__
((
Æways_ölöe
)Ë
ölöe


	)

20 
	#FORCE_INLINE


	)

23 #i‚de‡
__x86_64__


24 
FORCE_INLINE
 
uöt32_t
 
	$rŸl32
(
uöt32_t
 
x
, 
öt8_t
 
r
)

26  (
x
 << 
r
) | (x >> (32 -Ñ));

27 
	}
}

30 
FORCE_INLINE
 
uöt64_t
 
	$rŸl64
(
uöt64_t
 
x
, 
öt8_t
 
r
)

32  (
x
 << 
r
) | (x >> (64 -Ñ));

33 
	}
}

35 
	#ROTL32
(
x
,
y
Ë
	`rŸl32
(x,y)

	)

36 
	#ROTL64
(
x
,
y
Ë
	`rŸl64
(x,y)

	)

38 
	#BIG_CONSTANT
(
x
Ë(x##
LLU
)

	)

44 
	#gëblock
(
p
, 
i
Ë’[i])

	)

48 #i‚de‡
__x86_64__


49 
FORCE_INLINE
 
uöt32_t
 
	$fmix32
(
uöt32_t
 
h
)

51 
h
 ^= h >> 16;

52 
h
 *= 0x85ebca6b;

53 
h
 ^= h >> 13;

54 
h
 *= 0xc2b2ae35;

55 
h
 ^= h >> 16;

56  
h
;

57 
	}
}

61 
FORCE_INLINE
 
uöt64_t
 
	$fmix64
(
uöt64_t
 
k
)

63 
k
 ^= k >> 33;

64 
k
 *
	`BIG_CONSTANT
(0xff51afd7ed558ccd);

65 
k
 ^= k >> 33;

66 
k
 *
	`BIG_CONSTANT
(0xc4ceb9fe1a85ec53);

67 
k
 ^= k >> 33;

68  
k
;

69 
	}
}

73 #i‚de‡
__x86_64__


74 
FORCE_INLINE
 

75 
	$MurmurHash3_x86_32
(c⁄° *
key
, 
size_t
 
Àn
, 
uöt32_t
 
£ed
, *
out
)

77 c⁄° 
uöt8_t
 *
d©a
 = (c⁄° uöt8_à*)
key
;

78 c⁄° 
size_t
 
nblocks
 = 
Àn
 / 4;

79 
size_t
 
i
;

80 
uöt32_t
 
h1
 = 
£ed
;

81 
uöt32_t
 
c1
 = 0xcc9e2d51;

82 
uöt32_t
 
c2
 = 0x1b873593;

86 c⁄° 
uöt32_t
 *
blocks
 = (c⁄° uöt32_à*)(
d©a
 + 
nblocks
 * 4);

87 
i
 = -
nblocks
; i; i++) {

88 
uöt32_t
 
k1
 = 
	`gëblock
(
blocks
, 
i
);

89 
k1
 *
c1
;

90 
k1
 = 
	`ROTL32
(k1, 15);

91 
k1
 *
c2
;

92 
h1
 ^
k1
;

93 
h1
 = 
	`ROTL32
(h1, 13);

94 
h1
 = h1 * 5 + 0xe6546b64;

99 c⁄° 
uöt8_t
 *
èû
 = (c⁄° uöt8_à*)(
d©a
 + 
nblocks
 * 4);

100 
uöt32_t
 
k1
 = 0;

101 
Àn
 & 3) {

103 
k1
 ^(
uöt32_t
)
èû
[2] << 16;

105 
k1
 ^(
uöt32_t
)
èû
[1] << 8;

107 
k1
 ^(
uöt32_t
)
èû
[0];

108 
k1
 *
c1
;

109 
k1
 = 
	`ROTL32
(k1, 15);

110 
k1
 *
c2
;

111 
h1
 ^
k1
;

116 
h1
 ^(
uöt32_t
)
Àn
;

117 
h1
 = 
	`fmix32
(h1);

118 *(
uöt32_t
 *Ë
out
 = 
h1
;

119 
	}
}

123 
FORCE_INLINE
 
	$MurmurHash3_x86_128
 (c⁄° *
key
, c⁄° 
size_t
 
Àn
,

124 
uöt32_t
 
£ed
, *
out
)

126 
size_t
 
i
;

127 c⁄° 
uöt8_t
 * 
d©a
 = (c⁄° uöt8_t*)
key
;

128 c⁄° 
size_t
 
nblocks
 = 
Àn
 / 16;

130 
uöt32_t
 
h1
 = 
£ed
;

131 
uöt32_t
 
h2
 = 
£ed
;

132 
uöt32_t
 
h3
 = 
£ed
;

133 
uöt32_t
 
h4
 = 
£ed
;

135 c⁄° 
uöt32_t
 
c1
 = 0x239b961b;

136 c⁄° 
uöt32_t
 
c2
 = 0xab0e9789;

137 c⁄° 
uöt32_t
 
c3
 = 0x38b34ae5;

138 c⁄° 
uöt32_t
 
c4
 = 0xa1e38b93;

143 c⁄° 
uöt32_t
 * 
blocks
 = (c⁄° uöt32_à*)(
d©a
 + 
nblocks
*16);

145 
i
 = -
nblocks
; i; i++) {

146 
uöt32_t
 
k1
 = 
	`gëblock
(
blocks
,
i
*4+0);

147 
uöt32_t
 
k2
 = 
	`gëblock
(
blocks
,
i
*4+1);

148 
uöt32_t
 
k3
 = 
	`gëblock
(
blocks
,
i
*4+2);

149 
uöt32_t
 
k4
 = 
	`gëblock
(
blocks
,
i
*4+3);

151 
k1
 *
c1
; k1 = 
	`ROTL32
(k1,15); k1 *
c2
; 
h1
 ^= k1;

152 
h1
 = 
	`ROTL32
(h1,19); h1 +
h2
; h1 = h1*5+0x561ccd1b;

153 
k2
 *
c2
; k2 = 
	`ROTL32
(k2,16); k2 *
c3
; 
h2
 ^= k2;

154 
h2
 = 
	`ROTL32
(h2,17); h2 +
h3
; h2 = h2*5+0x0bcaa747;

155 
k3
 *
c3
; k3 = 
	`ROTL32
(k3,17); k3 *
c4
; 
h3
 ^= k3;

156 
h3
 = 
	`ROTL32
(h3,15); h3 +
h4
; h3 = h3*5+0x96cd1c35;

157 
k4
 *
c4
; k4 = 
	`ROTL32
(k4,18); k4 *
c1
; 
h4
 ^= k4;

158 
h4
 = 
	`ROTL32
(h4,13); h4 +
h1
; h4 = h4*5+0x32ac3b17;

164 c⁄° 
uöt8_t
 * 
èû
 = (c⁄° uöt8_t*)(
d©a
 + 
nblocks
*16);

166 
uöt32_t
 
k1
 = 0;

167 
uöt32_t
 
k2
 = 0;

168 
uöt32_t
 
k3
 = 0;

169 
uöt32_t
 
k4
 = 0;

171 
Àn
 & 15) {

172 15: 
k4
 ^(
uöt32_t
)
èû
[14] << 16;

173 14: 
k4
 ^(
uöt32_t
)
èû
[13] << 8;

174 13: 
k4
 ^(
uöt32_t
)
èû
[12] << 0;

175 
k4
 *
c4
; k4 = 
	`ROTL32
(k4,18); k4 *
c1
; 
h4
 ^= k4;

177 12: 
k3
 ^(
uöt32_t
)
èû
[11] << 24;

178 11: 
k3
 ^(
uöt32_t
)
èû
[10] << 16;

179 10: 
k3
 ^(
uöt32_t
)
èû
[ 9] << 8;

180 9: 
k3
 ^(
uöt32_t
)
èû
[ 8] << 0;

181 
k3
 *
c3
; k3 = 
	`ROTL32
(k3,17); k3 *
c4
; 
h3
 ^= k3;

183 8: 
k2
 ^(
uöt32_t
)
èû
[ 7] << 24;

184 7: 
k2
 ^(
uöt32_t
)
èû
[ 6] << 16;

185 6: 
k2
 ^(
uöt32_t
)
èû
[ 5] << 8;

186 5: 
k2
 ^(
uöt32_t
)
èû
[ 4] << 0;

187 
k2
 *
c2
; k2 = 
	`ROTL32
(k2,16); k2 *
c3
; 
h2
 ^= k2;

189 4: 
k1
 ^(
uöt32_t
)
èû
[ 3] << 24;

190 3: 
k1
 ^(
uöt32_t
)
èû
[ 2] << 16;

191 2: 
k1
 ^(
uöt32_t
)
èû
[ 1] << 8;

192 1: 
k1
 ^(
uöt32_t
)
èû
[ 0] << 0;

193 
k1
 *
c1
; k1 = 
	`ROTL32
(k1,15); k1 *
c2
; 
h1
 ^= k1;

199 
h1
 ^(
uöt32_t
)
Àn
; 
h2
 ^= (uint32_t)len;

200 
h3
 ^(
uöt32_t
)
Àn
; 
h4
 ^= (uint32_t)len;

202 
h1
 +
h2
; h1 +
h3
; h1 +
h4
;

203 
h2
 +
h1
; 
h3
 +h1; 
h4
 += h1;

205 
h1
 = 
	`fmix32
(h1);

206 
h2
 = 
	`fmix32
(h2);

207 
h3
 = 
	`fmix32
(h3);

208 
h4
 = 
	`fmix32
(h4);

210 
h1
 +
h2
; h1 +
h3
; h1 +
h4
;

211 
h2
 +
h1
; 
h3
 +h1; 
h4
 += h1;

213 ((
uöt32_t
*)
out
)[0] = 
h1
;

214 ((
uöt32_t
*)
out
)[1] = 
h2
;

215 ((
uöt32_t
*)
out
)[2] = 
h3
;

216 ((
uöt32_t
*)
out
)[3] = 
h4
;

217 
	}
}

221 
FORCE_INLINE
 

222 
	$MurmurHash3_x64_128
(c⁄° *
key
, c⁄° 
size_t
 
Àn
, c⁄° 
uöt32_t
 
£ed
,

223 *
out
)

225 c⁄° 
uöt8_t
 *
d©a
 = (c⁄° uöt8_à*)
key
;

226 c⁄° 
size_t
 
nblocks
 = 
Àn
 / 16;

227 
size_t
 
i
;

228 
uöt64_t
 
h1
 = 
£ed
;

229 
uöt64_t
 
h2
 = 
£ed
;

230 
uöt64_t
 
c1
 = 
	`BIG_CONSTANT
(0x87c37b91114253d5);

231 
uöt64_t
 
c2
 = 
	`BIG_CONSTANT
(0x4cf5ad432745937f);

235 c⁄° 
uöt64_t
 *
blocks
 = (c⁄° uöt64_à*)(
d©a
);

236 
i
 = 0; i < 
nblocks
; i++) {

237 
uöt64_t
 
k1
 = 
	`gëblock
(
blocks
, 
i
 * 2 + 0);

238 
uöt64_t
 
k2
 = 
	`gëblock
(
blocks
, 
i
 * 2 + 1);

239 
k1
 *
c1
;

240 
k1
 = 
	`ROTL64
(k1, 31);

241 
k1
 *
c2
;

242 
h1
 ^
k1
;

243 
h1
 = 
	`ROTL64
(h1, 27);

244 
h1
 +
h2
;

245 
h1
 = h1 * 5 + 0x52dce729;

246 
k2
 *
c2
;

247 
k2
 = 
	`ROTL64
(k2, 33);

248 
k2
 *
c1
;

249 
h2
 ^
k2
;

250 
h2
 = 
	`ROTL64
(h2, 31);

251 
h2
 +
h1
;

252 
h2
 = h2 * 5 + 0x38495ab5;

257 c⁄° 
uöt8_t
 *
èû
 = (c⁄° uöt8_à*)(
d©a
 + 
nblocks
 * 16);

258 
uöt64_t
 
k1
 = 0;

259 
uöt64_t
 
k2
 = 0;

260 
Àn
 & 15) {

262 
k2
 ^(
uöt64_t
Ë(
èû
[14]) << 48;

264 
k2
 ^(
uöt64_t
Ë(
èû
[13]) << 40;

266 
k2
 ^(
uöt64_t
Ë(
èû
[12]) << 32;

268 
k2
 ^(
uöt64_t
Ë(
èû
[11]) << 24;

270 
k2
 ^(
uöt64_t
Ë(
èû
[10]) << 16;

272 
k2
 ^(
uöt64_t
Ë(
èû
[9]) << 8;

274 
k2
 ^(
uöt64_t
Ë(
èû
[8]) << 0;

275 
k2
 *
c2
;

276 
k2
 = 
	`ROTL64
(k2, 33);

277 
k2
 *
c1
;

278 
h2
 ^
k2
;

280 
k1
 ^(
uöt64_t
Ë(
èû
[7]) << 56;

282 
k1
 ^(
uöt64_t
Ë(
èû
[6]) << 48;

284 
k1
 ^(
uöt64_t
Ë(
èû
[5]) << 40;

286 
k1
 ^(
uöt64_t
Ë(
èû
[4]) << 32;

288 
k1
 ^(
uöt64_t
Ë(
èû
[3]) << 24;

290 
k1
 ^(
uöt64_t
Ë(
èû
[2]) << 16;

292 
k1
 ^(
uöt64_t
Ë(
èû
[1]) << 8;

294 
k1
 ^(
uöt64_t
Ë(
èû
[0]) << 0;

295 
k1
 *
c1
;

296 
k1
 = 
	`ROTL64
(k1, 31);

297 
k1
 *
c2
;

298 
h1
 ^
k1
;

303 
h1
 ^(
uöt64_t
)
Àn
;

304 
h2
 ^(
uöt64_t
)
Àn
;

305 
h1
 +
h2
;

306 
h2
 +
h1
;

307 
h1
 = 
	`fmix64
(h1);

308 
h2
 = 
	`fmix64
(h2);

309 
h1
 +
h2
;

310 
h2
 +
h1
;

311 ((
uöt64_t
 *Ë
out
)[0] = 
h1
;

312 ((
uöt64_t
 *Ë
out
)[1] = 
h2
;

313 
	}
}

318 
	$murmur3_sim∂e
(c⁄° *
key±r
)

320 
size_t
 
Àn
 = 
	`°æí
((*)
key±r
);

321 #ifde‡
__x86_64__


322 
uöt64_t
 
hash
[2];

323 
	`MurmurHash3_x64_128
(
key±r
, 
Àn
, 0xdódbìf, 
hash
);

324  ()
hash
[1];

326 i‡(
Àn
 <= 16) {

327 
hash
;

328 
	`MurmurHash3_x86_32
(
key±r
, 
Àn
, 0xdódbìf, &
hash
);

329  
hash
;

332 
hash
[4];

333 
	`MurmurHash3_x86_128
(
key±r
, 
Àn
, 0xdódbìf, 
hash
);

334  
hash
[3];

336 
	}
}

	@common/murmur3.h

6 #i‚de‡
_MURMURHASH3_H_


7 
	#_MURMURHASH3_H_


	)

11 
murmur3_sim∂e
(c⁄° *
key
);

	@common/realpathat.c

22 
	#_GNU_SOURCE


	)

23 
	~<as£π.h
>

24 
	~<î∫o.h
>

25 
	~<f˙é.h
>

26 
	~<limôs.h
>

27 
	~<°ddef.h
>

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~<°rög.h
>

31 
	~<sys/∑øm.h
>

32 
	~<sys/°©.h
>

33 
	~<uni°d.h
>

35 
	~"lw™.h
"

38 
	$ªÆ∑th©2
(
dúfd
, *
dúfd∑th
, c⁄° *
«me
, *
ªsﬁved
,

39 
°©
 *
°
)

41 *
Ω©h
, *
de°
, 
exåa_buf
[
PATH_MAX
];

42 c⁄° *
°¨t
, *
íd
, *
Ω©h_limô
;

43 
num_löks
 = 0;

44 
±rdiff_t
 
dúfdÀn
;

45 *
∑th©
;

50 i‡(
	`UNLIKELY
(
dúfd
 < 0 || 
dúfd∑th
 =
NULL
 || 
«me
[0] == '/'))

51  
	`ªÆ∑th
(
«me
, 
ªsﬁved
);

53 i‡(
	`UNLIKELY
(
«me
 =
NULL
)) {

58 
î∫o
 = 
EINVAL
;

59  
NULL
;

62 i‡(
«me
[0] == '\0') {

63 i‡(
	`UNLIKELY
(
	`f°©
(
dúfd
, 
°
) < 0))

64  
NULL
;

65 i‡(
	`LIKELY
(!
ªsﬁved
))

66  
	`°rdup
(
dúfd∑th
);

67  
	`°r˝y
(
ªsﬁved
, 
dúfd∑th
);

70 i‡(
	`LIKELY
(!
ªsﬁved
)) {

71 
Ω©h
 = 
	`mÆloc
(
PATH_MAX
);

72 i‡(
	`UNLIKELY
(!
Ω©h
))

73  
NULL
;

75 
Ω©h
 = 
ªsﬁved
;

76 
Ω©h_limô
 = 
Ω©h
 + 
PATH_MAX
;

78 
	`°r˝y
(
Ω©h
, 
dúfd∑th
);

79 
de°
 = 
	`øwmemchr
(
Ω©h
, '\0');

80 
dúfdÀn
 = 
de°
 - 
Ω©h
;

82 
°¨t
 = 
íd
 = 
«me
; *start; start =Énd) {

83 
n
;

86 *
°¨t
 == '/')

87 ++
°¨t
;

90 
íd
 = 
°¨t
; *end && *end != '/'; ++end)

93 i‡(
íd
 - 
°¨t
 == 0)

95 i‡(
íd
 - 
°¨t
 == 1 && start[0] == '.')

97 i‡(
íd
 - 
°¨t
 == 2 && start[0] == '.' && start[1] == '.') {

99 i‡(
de°
 > 
Ω©h
 + 1)

100 (--
de°
)[-1] != '/');

102 
size_t
 
√w_size
;

104 i‡(
de°
[-1] != '/')

105 *
de°
++ = '/';

107 i‡(
de°
 + (
íd
 - 
°¨t
Ë>
Ω©h_limô
) {

108 
±rdiff_t
 
de°_off£t
 = 
de°
 - 
Ω©h
;

109 *
√w_Ω©h
;

111 i‡(
	`UNLIKELY
(
ªsﬁved
 !
NULL
)) {

112 
î∫o
 = 
ENAMETOOLONG
;

113 i‡(
de°
 > 
Ω©h
 + 1)

114 
de°
--;

115 *
de°
 = '\0';

116 
îr‹
;

119 
√w_size
 = (
size_t
)(
Ω©h_limô
 - 
Ω©h
);

120 i‡(
íd
 - 
°¨t
 + 1 > 
PATH_MAX
)

121 
√w_size
 +(
size_t
)(
íd
 - 
°¨t
 + 1);

123 
√w_size
 +
PATH_MAX
;

124 
√w_Ω©h
 = (*Ë
	`ªÆloc
(
Ω©h
, 
√w_size
);

125 i‡(
	`UNLIKELY
(
√w_Ω©h
 =
NULL
))

126 
îr‹
;

127 
Ω©h
 = 
√w_Ω©h
;

128 
Ω©h_limô
 = 
Ω©h
 + 
√w_size
;

130 
de°
 = 
Ω©h
 + 
de°_off£t
;

133 
de°
 = 
	`memp˝y
(de°, 
°¨t
, (
size_t
)(
íd
 - start));

134 *
de°
 = '\0';

136 i‡(
	`LIKELY
(!
	`°∫cmp
(
Ω©h
, 
dúfd∑th
, (
size_t
)
dúfdÀn
))) {

137 
∑th©
 = 
Ω©h
 + 
dúfdÀn
 + 1;

138 i‡(*
∑th©
 == '\0')

139 
∑th©
 = 
Ω©h
;

141 
∑th©
 = 
Ω©h
;

144 i‡(
	`UNLIKELY
(
	`f°©©
(
dúfd
, 
∑th©
, 
°
, 
AT_SYMLINK_NOFOLLOW
) < 0))

145 
îr‹
;

147 i‡(
	`UNLIKELY
(
	`S_ISLNK
(
°
->
°_mode
))) {

148 
buf
[
PATH_MAX
];

149 
size_t
 
Àn
;

151 i‡(
	`UNLIKELY
(++
num_löks
 > 
MAXSYMLINKS
)) {

152 
î∫o
 = 
ELOOP
;

153 
îr‹
;

156 
n
 = ()
	`ªadlök©
(
dúfd
, 
∑th©
, 
buf
, 
PATH_MAX
 - 1);

157 i‡(
	`UNLIKELY
(
n
 < 0))

158 
îr‹
;

159 
buf
[
n
] = '\0';

161 
Àn
 = 
	`°æí
(
íd
);

162 i‡(
	`UNLIKELY
((Ë(
n
 + ()
Àn
Ë>
PATH_MAX
)) {

163 
î∫o
 = 
ENAMETOOLONG
;

164 
îr‹
;

168 
	`memmove
(&
exåa_buf
[
n
], 
íd
, 
Àn
 + 1);

169 
íd
 = 
	`mem˝y
(
exåa_buf
, 
buf
, (
size_t
)
n
);

171 i‡(
buf
[0] == '/')

172 
de°
 = 
Ω©h
 + 1;

175 i‡(
de°
 > 
Ω©h
 + 1)

176 (--
de°
)[-1] != '/');

177 } i‡(
	`UNLIKELY
(!
	`S_ISDIR
(
°
->
°_mode
Ë&& *
íd
 != '\0')) {

178 
î∫o
 = 
ENOTDIR
;

179 
îr‹
;

184 i‡(
de°
 > 
Ω©h
 + 1 && dest[-1] == '/')

185 --
de°
;

186 *
de°
 = '\0';

188 
	`as£π
(
ªsﬁved
 =
NULL
 ||Ñesﬁved =
Ω©h
);

189  
Ω©h
;

191 
îr‹
:

192 
	`as£π
(
ªsﬁved
 =
NULL
 ||Ñesﬁved =
Ω©h
);

193 i‡(
ªsﬁved
 =
NULL
)

194 
	`‰ì
(
Ω©h
);

195  
NULL
;

196 
	}
}

199 
	$ªÆ∑th©
(
dúfd
, *
dúfd∑th
, c⁄° *
«me
, *
ªsﬁved
)

201 
°©
 
°
;

202  
	`ªÆ∑th©2
(
dúfd
, 
dúfd∑th
, 
«me
, 
ªsﬁved
, &
°
);

203 
	}
}

	@common/realpathat.h

22 #i‚de‡
__REALPATHAT_H__


24 
	~<sys/°©.h
>

26 *
ªÆ∑th©
(
dúfd
, *
dúfd∑th
, c⁄° *
«me
, *
ªsﬁved
);

27 *
ªÆ∑th©2
(
dúfd
, *
dúfd∑th
, c⁄° *
«me
, *
ªsﬁved
,

28 
°©
 *
°
);

	@common/sd-daemon.c

22 
	#_GNU_SOURCE


	)

23 
	~<sys/ty≥s.h
>

24 
	~<sys/°©.h
>

25 
	~<sys/sockë.h
>

26 
	~<sys/un.h
>

27 
	~<f˙é.h
>

28 
	~<√töë/ö.h
>

29 
	~<°dlib.h
>

30 
	~<î∫o.h
>

31 
	~<uni°d.h
>

32 
	~<°rög.h
>

33 
	~<°d¨g.h
>

34 
	~<°dio.h
>

35 
	~<°ddef.h
>

36 
	~<limôs.h
>

38 
	~"sd-d´m⁄.h
"

40 
	$sd_li°í_fds
(
un£t_ívú⁄mít
) {

41 
r
, 
fd
;

42 c⁄° *
e
;

43 *
p
 = 
NULL
;

44 
l
;

46 
e
 = 
	`gëív
("LISTEN_PID");

47 i‡(!
e
) {

48 
r
 = 0;

49 
föish
;

52 
î∫o
 = 0;

53 
l
 = 
	`°πoul
(
e
, &
p
, 10);

55 i‡(
î∫o
 > 0) {

56 
r
 = -
î∫o
;

57 
föish
;

60 i‡(!
p
 ||Ö =
e
 || *∞|| 
l
 <= 0) {

61 
r
 = -
EINVAL
;

62 
föish
;

66 i‡(
	`gëpid
(Ë!(
pid_t
Ë
l
) {

67 
r
 = 0;

68 
föish
;

71 
e
 = 
	`gëív
("LISTEN_FDS");

72 i‡(!
e
) {

73 
r
 = 0;

74 
föish
;

77 
î∫o
 = 0;

78 
l
 = 
	`°πoul
(
e
, &
p
, 10);

80 i‡(
î∫o
 > 0) {

81 
r
 = -
î∫o
;

82 
föish
;

85 i‡(!
p
 ||Ö =
e
 || *p) {

86 
r
 = -
EINVAL
;

87 
föish
;

90 
fd
 = 
SD_LISTEN_FDS_START
; fd < SD_LISTEN_FDS_START + (Ë
l
; fd ++) {

91 
Êags
;

93 
Êags
 = 
	`f˙é
(
fd
, 
F_GETFD
);

94 i‡(
Êags
 < 0) {

95 
r
 = -
î∫o
;

96 
föish
;

99 i‡(
Êags
 & 
FD_CLOEXEC
)

102 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 
Êags
 | 
FD_CLOEXEC
) < 0) {

103 
r
 = -
î∫o
;

104 
föish
;

108 
r
 = (Ë
l
;

110 
föish
:

111 i‡(
un£t_ívú⁄mít
) {

112 
	`un£ãnv
("LISTEN_PID");

113 
	`un£ãnv
("LISTEN_FDS");

116  
r
;

117 
	}
}

119 
	$sd_is_fifo
(
fd
, c⁄° *
∑th
) {

120 
°©
 
°_fd
;

122 i‡(
fd
 < 0)

123  -
EINVAL
;

125 i‡(
	`f°©
(
fd
, &
°_fd
) < 0)

126  -
î∫o
;

128 i‡(!
	`S_ISFIFO
(
°_fd
.
°_mode
))

131 i‡(
∑th
) {

132 
°©
 
°_∑th
;

134 i‡(
	`°©
(
∑th
, &
°_∑th
) < 0) {

136 i‡(
î∫o
 =
ENOENT
 ||Éºnÿ=
ENOTDIR
)

139  -
î∫o
;

143 
°_∑th
.
°_dev
 =
°_fd
.st_dev &&

144 
°_∑th
.
°_öo
 =
°_fd
.st_ino;

148 
	}
}

150 
	$sd_is_•ecül
(
fd
, c⁄° *
∑th
) {

151 
°©
 
°_fd
;

153 i‡(
fd
 < 0)

154  -
EINVAL
;

156 i‡(
	`f°©
(
fd
, &
°_fd
) < 0)

157  -
î∫o
;

159 i‡(!
	`S_ISREG
(
°_fd
.
°_mode
Ë&& !
	`S_ISCHR
(st_fd.st_mode))

162 i‡(
∑th
) {

163 
°©
 
°_∑th
;

165 i‡(
	`°©
(
∑th
, &
°_∑th
) < 0) {

167 i‡(
î∫o
 =
ENOENT
 ||Éºnÿ=
ENOTDIR
)

170  -
î∫o
;

173 i‡(
	`S_ISREG
(
°_fd
.
°_mode
Ë&& S_ISREG(
°_∑th
.st_mode))

175 
°_∑th
.
°_dev
 =
°_fd
.st_dev &&

176 
°_∑th
.
°_öo
 =
°_fd
.st_ino;

177 i‡(
	`S_ISCHR
(
°_fd
.
°_mode
Ë&& S_ISCHR(
°_∑th
.st_mode))

178  
°_∑th
.
°_rdev
 =
°_fd
.st_rdev;

184 
	}
}

186 
	$sd_is_sockë_öã∫Æ
(
fd
, 
ty≥
, 
li°íög
) {

187 
°©
 
°_fd
;

189 i‡(
fd
 < 0 || 
ty≥
 < 0)

190  -
EINVAL
;

192 i‡(
	`f°©
(
fd
, &
°_fd
) < 0)

193  -
î∫o
;

195 i‡(!
	`S_ISSOCK
(
°_fd
.
°_mode
))

198 i‡(
ty≥
 != 0) {

199 
Ÿhî_ty≥
 = 0;

200 
sockÀn_t
 
l
 = (
Ÿhî_ty≥
);

202 i‡(
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_TYPE
, &
Ÿhî_ty≥
, &
l
) < 0)

203  -
î∫o
;

205 i‡(
l
 !(
Ÿhî_ty≥
))

206  -
EINVAL
;

208 i‡(
Ÿhî_ty≥
 !
ty≥
)

212 i‡(
li°íög
 >= 0) {

213 
ac˚±ög
 = 0;

214 
sockÀn_t
 
l
 = (
ac˚±ög
);

216 i‡(
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_ACCEPTCONN
, &
ac˚±ög
, &
l
) < 0)

217  -
î∫o
;

219 i‡(
l
 !(
ac˚±ög
))

220  -
EINVAL
;

222 i‡(!
ac˚±ög
 !!
li°íög
)

227 
	}
}

229 
	usockaddr_uni⁄
 {

230 
sockaddr
 
	mß
;

231 
sockaddr_ö
 
	mö4
;

232 
sockaddr_ö6
 
	mö6
;

233 
sockaddr_un
 
	mun
;

234 
sockaddr_°‹age
 
	m°‹age
;

237 
	$sd_is_sockë
(
fd
, 
Ámûy
, 
ty≥
, 
li°íög
) {

238 
r
;

240 i‡(
Ámûy
 < 0)

241  -
EINVAL
;

243 
r
 = 
	`sd_is_sockë_öã∫Æ
(
fd
, 
ty≥
, 
li°íög
);

244 i‡(
r
 <= 0)

245  
r
;

247 i‡(
Ámûy
 > 0) {

248 
sockaddr_uni⁄
 
sockaddr
 = {};

249 
sockÀn_t
 
l
 = (
sockaddr
);

251 i‡(
	`gësock«me
(
fd
, &
sockaddr
.
ß
, &
l
) < 0)

252  -
î∫o
;

254 i‡(
l
 < (
ß_Ámûy_t
))

255  -
EINVAL
;

257  
sockaddr
.
ß
.
ß_Ámûy
 =
Ámûy
;

261 
	}
}

263 
	$sd_is_sockë_öë
(
fd
, 
Ámûy
, 
ty≥
, 
li°íög
, 
uöt16_t
 
p‹t
) {

264 
sockaddr_uni⁄
 
sockaddr
 = {};

265 
sockÀn_t
 
l
 = (
sockaddr
);

266 
r
;

268 i‡(
Ámûy
 !0 && famûy !
AF_INET
 && famûy !
AF_INET6
)

269  -
EINVAL
;

271 
r
 = 
	`sd_is_sockë_öã∫Æ
(
fd
, 
ty≥
, 
li°íög
);

272 i‡(
r
 <= 0)

273  
r
;

275 i‡(
	`gësock«me
(
fd
, &
sockaddr
.
ß
, &
l
) < 0)

276  -
î∫o
;

278 i‡(
l
 < (
ß_Ámûy_t
))

279  -
EINVAL
;

281 i‡(
sockaddr
.
ß
.
ß_Ámûy
 !
AF_INET
 &&

282 
sockaddr
.
ß
.
ß_Ámûy
 !
AF_INET6
)

285 i‡(
Ámûy
 > 0)

286 i‡(
sockaddr
.
ß
.
ß_Ámûy
 !
Ámûy
)

289 i‡(
p‹t
 > 0) {

290 i‡(
sockaddr
.
ß
.
ß_Ámûy
 =
AF_INET
) {

291 i‡(
l
 < (
sockaddr_ö
))

292  -
EINVAL
;

294  
	`ht⁄s
(
p‹t
Ë=
sockaddr
.
ö4
.
sö_p‹t
;

296 i‡(
l
 < (
sockaddr_ö6
))

297  -
EINVAL
;

299  
	`ht⁄s
(
p‹t
Ë=
sockaddr
.
ö6
.
sö6_p‹t
;

304 
	}
}

306 
	$sd_is_sockë_unix
(
fd
, 
ty≥
, 
li°íög
, c⁄° *
∑th
, 
size_t
 
Àngth
) {

307 
sockaddr_uni⁄
 
sockaddr
 = {};

308 
sockÀn_t
 
l
 = (
sockaddr
);

309 
r
;

311 
r
 = 
	`sd_is_sockë_öã∫Æ
(
fd
, 
ty≥
, 
li°íög
);

312 i‡(
r
 <= 0)

313  
r
;

315 i‡(
	`gësock«me
(
fd
, &
sockaddr
.
ß
, &
l
) < 0)

316  -
î∫o
;

318 i‡(
l
 < (
ß_Ámûy_t
))

319  -
EINVAL
;

321 i‡(
sockaddr
.
ß
.
ß_Ámûy
 !
AF_UNIX
)

324 i‡(
∑th
) {

325 i‡(
Àngth
 == 0)

326 
Àngth
 = 
	`°æí
(
∑th
);

328 i‡(
Àngth
 == 0)

330  
l
 =
	`off£tof
(
sockaddr_un
, 
sun_∑th
);

332 i‡(
∑th
[0])

335 (
l
 >
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
Àngth
 + 1) &&

336 
	`memcmp
(
∑th
, 
sockaddr
.
un
.
sun_∑th
, 
Àngth
+1) == 0;

340 (
l
 =
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
Àngth
) &&

341 
	`memcmp
(
∑th
, 
sockaddr
.
un
.
sun_∑th
, 
Àngth
) == 0;

345 
	}
}

347 
	$sd_nŸify
(
un£t_ívú⁄mít
, c⁄° *
°©e
) {

348 
fd
 = -1, 
r
;

349 
msghdr
 msghdr;

350 
iovec
 iovec;

351 
sockaddr_uni⁄
 
sockaddr
;

352 c⁄° *
e
;

354 i‡(!
°©e
) {

355 
r
 = -
EINVAL
;

356 
föish
;

359 
e
 = 
	`gëív
("NOTIFY_SOCKET");

360 i‡(!
e
)

364 i‡((
e
[0] != '@' &&É[0] != '/') ||É[1] == 0) {

365 
r
 = -
EINVAL
;

366 
föish
;

369 
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_DGRAM
|
SOCK_CLOEXEC
, 0);

370 i‡(
fd
 < 0) {

371 
r
 = -
î∫o
;

372 
föish
;

375 
	`mem£t
(&
sockaddr
, 0, (sockaddr));

376 
sockaddr
.
ß
.
ß_Ámûy
 = 
AF_UNIX
;

377 
	`°∫˝y
(
sockaddr
.
un
.
sun_∑th
, 
e
, (sockaddr.un.sun_path));

379 i‡(
sockaddr
.
un
.
sun_∑th
[0] == '@')

380 
sockaddr
.
un
.
sun_∑th
[0] = 0;

382 
	`mem£t
(&
iovec
, 0, (iovec));

383 
iovec
.
iov_ba£
 = (*Ë
°©e
;

384 
iovec
.
iov_Àn
 = 
	`°æí
(
°©e
);

386 
	`mem£t
(&
msghdr
, 0, (msghdr));

387 
msghdr
.
msg_«me
 = &
sockaddr
;

388 
msghdr
.
msg_«mñí
 = (
sockÀn_t
)(
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
e
));

390 i‡(
msghdr
.
msg_«mñí
 > (
sockaddr_un
))

391 
msghdr
.
msg_«mñí
 = (
sockaddr_un
);

393 
msghdr
.
msg_iov
 = &
iovec
;

394 
msghdr
.
msg_iovÀn
 = 1;

396 i‡(
	`£ndmsg
(
fd
, &
msghdr
, 
MSG_NOSIGNAL
) < 0) {

397 
r
 = -
î∫o
;

398 
föish
;

401 
r
 = 1;

403 
föish
:

404 i‡(
un£t_ívú⁄mít
)

405 
	`un£ãnv
("NOTIFY_SOCKET");

407 i‡(
fd
 >= 0)

408 
	`˛o£
(
fd
);

410  
r
;

411 
	}
}

413 
	$sd_nŸifyf
(
un£t_ívú⁄mít
, c⁄° *
f‹m©
, ...) {

414 
va_li°
 
≠
;

415 *
p
 = 
NULL
;

416 
r
;

418 
	`va_°¨t
(
≠
, 
f‹m©
);

419 
r
 = 
	`va•rötf
(&
p
, 
f‹m©
, 
≠
);

420 
	`va_íd
(
≠
);

422 i‡(
r
 < 0 || !
p
)

423  -
ENOMEM
;

425 
r
 = 
	`sd_nŸify
(
un£t_ívú⁄mít
, 
p
);

426 
	`‰ì
(
p
);

428  
r
;

429 
	}
}

431 
	$sd_boŸed
() {

432 
°©
 
°
;

438 i‡(
	`l°©
("/run/sy°emd/sy°em/", &
°
) < 0)

441  !!
	`S_ISDIR
(
°
.
°_mode
);

442 
	}
}

444 
	$sd_w©chdog_íabÀd
(
un£t_ívú⁄mít
, 
uöt64_t
 *
u£c
) {

445 
Œ
;

446 
l
;

447 c⁄° *
e
;

448 *
p
 = 
NULL
;

449 
r
;

451 
e
 = 
	`gëív
("WATCHDOG_PID");

452 i‡(!
e
) {

453 
r
 = 0;

454 
föish
;

457 
î∫o
 = 0;

458 
l
 = 
	`°πoul
(
e
, &
p
, 10);

459 i‡(
î∫o
 > 0) {

460 
r
 = -
î∫o
;

461 
föish
;

463 i‡(!
p
 ||Ö =
e
 || *∞|| 
l
 <= 0) {

464 
r
 = -
EINVAL
;

465 
föish
;

469 i‡(
	`gëpid
(Ë!(
pid_t
Ë
l
) {

470 
r
 = 0;

471 
föish
;

474 
e
 = 
	`gëív
("WATCHDOG_USEC");

475 i‡(!
e
) {

476 
r
 = -
EINVAL
;

477 
föish
;

480 
î∫o
 = 0;

481 
Œ
 = 
	`°πouŒ
(
e
, &
p
, 10);

482 i‡(
î∫o
 > 0) {

483 
r
 = -
î∫o
;

484 
föish
;

486 i‡(!
p
 ||Ö =
e
 || *∞|| 
l
 <= 0) {

487 
r
 = -
EINVAL
;

488 
föish
;

491 i‡(
u£c
)

492 *
u£c
 = 
Œ
;

494 
r
 = 1;

496 
föish
:

497 i‡(
un£t_ívú⁄mít
) {

498 
	`un£ãnv
("WATCHDOG_PID");

499 
	`un£ãnv
("WATCHDOG_USEC");

502  
r
;

503 
	}
}

	@common/sd-daemon.h

3 #i‚de‡
foosdd´m⁄hfoo


4 
	#foosdd´m⁄hfoo


	)

25 
	~<sys/ty≥s.h
>

26 
	~<öây≥s.h
>

46 
	#SD_EMERG
 "<0>"

	)

47 
	#SD_ALERT
 "<1>"

	)

48 
	#SD_CRIT
 "<2>"

	)

49 
	#SD_ERR
 "<3>"

	)

50 
	#SD_WARNING
 "<4>"

	)

51 
	#SD_NOTICE
 "<5>"

	)

52 
	#SD_INFO
 "<6>"

	)

53 
	#SD_DEBUG
 "<7>"

	)

56 
	#SD_LISTEN_FDS_START
 3

	)

73 
sd_li°í_fds
(
un£t_ívú⁄mít
);

85 
sd_is_fifo
(
fd
, c⁄° *
∑th
);

97 
sd_is_•ecül
(
fd
, c⁄° *
∑th
);

113 
sd_is_sockë
(
fd
, 
Ámûy
, 
ty≥
, 
li°íög
);

127 
sd_is_sockë_öë
(
fd
, 
Ámûy
, 
ty≥
, 
li°íög
, 
uöt16_t
 
p‹t
);

143 
sd_is_sockë_unix
(
fd
, 
ty≥
, 
li°íög
, c⁄° *
∑th
, 
size_t
 
Àngth
);

153 
sd_is_mq
(
fd
, c⁄° *
∑th
);

205 
sd_nŸify
(
un£t_ívú⁄mít
, c⁄° *
°©e
);

227 
	$sd_nŸifyf
(
un£t_ívú⁄mít
, c⁄° *
f‹m©
, ...)

228 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 2, 3)));

241 
	`sd_boŸed
();

257 
	`sd_w©chdog_íabÀd
(
un£t_ívú⁄mít
, 
uöt64_t
 *
u£c
);

	@common/strbuf.c

20 
	#_GNU_SOURCE


	)

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

23 
	~<°d¨g.h
>

25 
	~"lw™.h
"

26 
	~"°rbuf.h
"

28 c⁄° 
	gSTATIC
 = 1<<0;

29 c⁄° 
	gDYNAMICALLY_ALLOCATED
 = 1<<1;

30 c⁄° 
size_t
 
	gDEFAULT_BUF_SIZE
 = 64;

32 
size_t


33 
	$föd_√xt_powî_of_two
(
size_t
 
numbî
)

35 
numbî
--;

36 
numbî
 |=Çumber >> 1;

37 
numbî
 |=Çumber >> 2;

38 
numbî
 |=Çumber >> 4;

39 
numbî
 |=Çumber >> 8;

40 
numbî
 |=Çumber >> 16;

41  
numbî
 + 1;

42 
	}
}

44 
ALWAYS_INLINE
 
size_t


45 
	$max
(
size_t
 
⁄e
, size_à
™Ÿhî
)

47  (
⁄e
 > 
™Ÿhî
) ? one :ánother;

48 
	}
}

50 
boﬁ


51 
	$grow_buf„r_if_√eded
(
°rbuf_t
 *
s
, 
size_t
 
size
)

53 i‡(
s
->
Êags
 & 
STATIC
) {

54 c⁄° 
size_t
 
√xt_powî
 = 
	`föd_√xt_powî_of_two
(
	`max
(
size
 + 1,

55 
s
->
Àn
.
buf„r
));

56 *
buf„r
 = 
	`mÆloc
(
√xt_powî
);

57 i‡(!
buf„r
)

58  
Ál£
;

60 
	`mem˝y
(
buf„r
, 
s
->
vÆue
.
°©ic_buf„r
, s->
Àn
.buffer);

61 
buf„r
[
s
->
Àn
.buffer + 1] = '\0';

63 
s
->
Êags
 &~
STATIC
;

64 
s
->
Àn
.
Æloˇãd
 = 
√xt_powî
;

65 
s
->
vÆue
.
buf„r
 = buffer;

67  
åue
;

70 i‡(
	`UNLIKELY
(
s
->
Àn
.
Æloˇãd
 < 
size
)) {

71 c⁄° 
size_t
 
√xt_powî
 = 
	`föd_√xt_powî_of_two
(
size
);

72 *
buf„r
 = 
	`ªÆloc
(
s
->
vÆue
.buf„r, 
√xt_powî
 + 1);

73 i‡(
	`UNLIKELY
(!
buf„r
))

74  
Ál£
;

75 
s
->
Àn
.
Æloˇãd
 = 
√xt_powî
;

76 
s
->
vÆue
.
buf„r
 = buffer;

79  
åue
;

80 
	}
}

82 
boﬁ


83 
	$°rbuf_öô_wôh_size
(
°rbuf_t
 *
s
, 
size_t
 
size
)

85 i‡(
	`UNLIKELY
(!
s
))

86  
Ál£
;

88 
	`mem£t
(
s
, 0, (*s));

90 i‡(
	`UNLIKELY
(!
	`grow_buf„r_if_√eded
(
s
, 
size
)))

91  
Ál£
;

93 
s
->
Àn
.
buf„r
 = 0;

94 
s
->
vÆue
.
buf„r
[0] = '\0';

96  
åue
;

97 
	}
}

99 
ALWAYS_INLINE
 
boﬁ


100 
	$°rbuf_öô
(
°rbuf_t
 *
s
)

102  
	`°rbuf_öô_wôh_size
(
s
, 
DEFAULT_BUF_SIZE
);

103 
	}
}

105 
°rbuf_t
 *

106 
	$°rbuf_√w_wôh_size
(
size_t
 
size
)

108 
°rbuf_t
 *
s
 = 
	`mÆloc
((*s));

109 i‡(
	`UNLIKELY
(!
	`°rbuf_öô_wôh_size
(
s
, 
size
))) {

110 
	`‰ì
(
s
);

111 
s
 = 
NULL
;

113 
s
->
Êags
 |
DYNAMICALLY_ALLOCATED
;

115  
s
;

116 
	}
}

118 
ALWAYS_INLINE
 
°rbuf_t
 *

119 
	$°rbuf_√w
()

121  
	`°rbuf_√w_wôh_size
(
DEFAULT_BUF_SIZE
);

122 
	}
}

125 
	$°rbuf_‰ì
(
°rbuf_t
 *
s
)

127 i‡(
	`UNLIKELY
(!
s
))

129 i‡(!(
s
->
Êags
 & 
STATIC
))

130 
	`‰ì
(
s
->
vÆue
.
buf„r
);

131 i‡(
s
->
Êags
 & 
DYNAMICALLY_ALLOCATED
)

132 
	`‰ì
(
s
);

133 
	}
}

135 
boﬁ


136 
	$°rbuf_≠≥nd_ch¨
(
°rbuf_t
 *
s
, c⁄° 
c
)

138 i‡(
	`UNLIKELY
(!
	`grow_buf„r_if_√eded
(
s
, s->
Àn
.
buf„r
 + 2)))

139  
Ál£
;

141 *(
s
->
vÆue
.
buf„r
 + s->
Àn
.buf„r++Ë
c
;

142 *(
s
->
vÆue
.
buf„r
 + s->
Àn
.buffer) = '\0';

144  
åue
;

145 
	}
}

147 
boﬁ


148 
	$°rbuf_≠≥nd_°r
(
°rbuf_t
 *
s1
, c⁄° *
s2
, 
size_t
 
sz
)

150 i‡(!
sz
)

151 
sz
 = 
	`°æí
(
s2
);

153 i‡(
	`UNLIKELY
(!
	`grow_buf„r_if_√eded
(
s1
, s1->
Àn
.
buf„r
 + 
sz
 + 2)))

154  
Ál£
;

156 
	`mem˝y
(
s1
->
vÆue
.
buf„r
 + s1->
Àn
.buf„r, 
s2
, 
sz
);

157 
s1
->
Àn
.
buf„r
 +
sz
;

158 
s1
->
vÆue
.
buf„r
[s1->
Àn
.buffer + 1] = '\0';

160  
åue
;

161 
	}
}

163 
boﬁ


164 
	$°rbuf_£t_°©ic
(
°rbuf_t
 *
s1
, c⁄° *
s2
, 
size_t
 
sz
)

166 i‡(!
sz
)

167 
sz
 = 
	`°æí
(
s2
);

169 i‡(!(
s1
->
Êags
 & 
STATIC
))

170 
	`‰ì
(
s1
->
vÆue
.
buf„r
);

171 
s1
->
vÆue
.
°©ic_buf„r
 = 
s2
;

172 
s1
->
Àn
.
Æloˇãd
 = s1->Àn.
buf„r
 = 
sz
;

173 
s1
->
Êags
 |
STATIC
;

175  
åue
;

176 
	}
}

178 
boﬁ


179 
	$°rbuf_£t
(
°rbuf_t
 *
s1
, c⁄° *
s2
, 
size_t
 
sz
)

181 i‡(!
sz
)

182 
sz
 = 
	`°æí
(
s2
);

184 i‡(
	`UNLIKELY
(!
	`grow_buf„r_if_√eded
(
s1
, 
sz
 + 1)))

185  
Ál£
;

187 
	`mem˝y
(
s1
->
vÆue
.
buf„r
, 
s2
, 
sz
);

188 
s1
->
Àn
.
buf„r
 = 
sz
;

189 
s1
->
vÆue
.
buf„r
[
sz
 + 1] = '\0';

191  
åue
;

192 
	}
}

194 
ALWAYS_INLINE
 

195 
	$°rbuf_cmp
(
°rbuf_t
 *
s1
, såbuf_à*
s2
)

197 i‡(
s1
 =
s2
)

199 
ªsu…
 = 
	`memcmp
(
s1
->
vÆue
.
buf„r
, 
s2
->vÆue.buf„r, s1->
Àn
.buffer < s2->len.buffer ? s1->len.buffer : s2->len.buffer);

200 i‡(!
ªsu…
)

201  ()(
s1
->
Àn
.
buf„r
 - 
s2
->len.buffer);

202  
ªsu…
;

203 
	}
}

205 
ALWAYS_INLINE
 
boﬁ


206 
öã∫Æ_¥ötf
(
°rbuf_t
 *
s1
, 
	$boﬁ
 (*
ßve_°r
)(
°rbuf_t
 *, c⁄° *, 
size_t
), c⁄° *
fmt
, 
va_li°
 
vÆues
)

208 *
s2
;

209 
Àn
;

211 i‡(
	`UNLIKELY
((
Àn
 = 
	`va•rötf
(&
s2
, 
fmt
, 
vÆues
)) < 0))

212  
Ál£
;

214 
boﬁ
 
suc˚ss
 = 
	`ßve_°r
(
s1
, 
s2
, (
size_t
)
Àn
);

215 
	`‰ì
(
s2
);

217  
suc˚ss
;

218 
	}
}

220 
boﬁ


221 
	$°rbuf_¥ötf
(
°rbuf_t
 *
s
, c⁄° *
fmt
, ...)

223 
boﬁ
 
could_¥ötf
;

224 
va_li°
 
vÆues
;

226 
	`va_°¨t
(
vÆues
, 
fmt
);

227 
could_¥ötf
 = 
	`öã∫Æ_¥ötf
(
s
, 
°rbuf_£t
, 
fmt
, 
vÆues
);

228 
	`va_íd
(
vÆues
);

230  
could_¥ötf
;

231 
	}
}

233 
boﬁ


234 
	$°rbuf_≠≥nd_¥ötf
(
°rbuf_t
 *
s
, c⁄° *
fmt
, ...)

236 
boﬁ
 
could_¥ötf
;

237 
va_li°
 
vÆues
;

239 
	`va_°¨t
(
vÆues
, 
fmt
);

240 
could_¥ötf
 = 
	`öã∫Æ_¥ötf
(
s
, 
°rbuf_≠≥nd_°r
, 
fmt
, 
vÆues
);

241 
	`va_íd
(
vÆues
);

243  
could_¥ötf
;

244 
	}
}

246 
ALWAYS_INLINE
 
size_t


247 
	$°rbuf_gë_Àngth
(
°rbuf_t
 *
s
)

249  
s
->
Àn
.
buf„r
;

250 
	}
}

252 
ALWAYS_INLINE
 *

253 
	$°rbuf_gë_buf„r
(
°rbuf_t
 *
s
)

255  
s
->
vÆue
.
buf„r
;

256 
	}
}

258 
boﬁ


259 
	$°rbuf_shrök_to
(
°rbuf_t
 *
s
, 
size_t
 
√w_size
)

261 i‡(
s
->
Àn
.
Æloˇãd
 <
√w_size
)

262  
åue
;

264 i‡(
s
->
Êags
 & 
STATIC
)

265  
åue
;

267 
size_t
 
√xt_powî_of_two
 = 
	`föd_√xt_powî_of_two
(
√w_size
);

268 *
buf„r
 = 
	`ªÆloc
(
s
->
vÆue
.buf„r, 
√xt_powî_of_two
 + 1);

269 i‡(
	`UNLIKELY
(!
buf„r
))

270  
Ál£
;

272 
s
->
vÆue
.
buf„r
 = buffer;

273 
s
->
Àn
.
Æloˇãd
 = 
√xt_powî_of_two
;

274 i‡(
s
->
Àn
.
buf„r
 > 
√xt_powî_of_two
) {

275 
s
->
Àn
.
buf„r
 = 
√xt_powî_of_two
 - 1;

276 
s
->
vÆue
.
buf„r
[s->
Àn
.buffer + 1] = '\0';

279  
åue
;

280 
	}
}

282 
ALWAYS_INLINE
 
boﬁ


283 
	$°rbuf_shrök_to_deÁu…
(
°rbuf_t
 *
s
)

285  
	`°rbuf_shrök_to
(
s
, 
DEFAULT_BUF_SIZE
);

286 
	}
}

288 
ALWAYS_INLINE
 
boﬁ


289 
	$°rbuf_ª£t
(
°rbuf_t
 *
s
)

291 
	`°rbuf_shrök_to_deÁu…
(
s
);

292 
s
->
Àn
.
buf„r
 = 0;

293  
Ál£
;

294 
	}
}

296 
boﬁ


297 
	$°rbuf_grow_to
(
°rbuf_t
 *
s
, 
size_t
 
√w_size
)

299  
	`grow_buf„r_if_√eded
(
s
, 
√w_size
 + 1);

300 
	}
}

302 
boﬁ


303 
	$°rbuf_ª£t_Àngth
(
°rbuf_t
 *
s
)

305 i‡(
s
->
Êags
 & 
STATIC
) {

306 
s
->
Êags
 &~
STATIC
;

307 
s
->
vÆue
.
buf„r
 = 
	`mÆloc
(s->
Àn
.
Æloˇãd
);

308 i‡(
	`UNLIKELY
(!
s
->
vÆue
.
buf„r
))

309  
Ál£
;

312 
s
->
Àn
.
buf„r
 = 0;

313 
s
->
vÆue
.
buf„r
[0] = '\0';

315  
åue
;

316 
	}
}

	@common/strbuf.h

20 #i‚de‡
__STRBUF_H__


21 
	#__STRBUF_H__


	)

23 
	~<°dboﬁ.h
>

24 
	~<°dio.h
>

26 
°rbuf_t_
 
	t°rbuf_t
;

28 
	s°rbuf_t_
 {

30 *
	mbuf„r
;

31 c⁄° *
	m°©ic_buf„r
;

32 } 
	mvÆue
;

34 
size_t
 
	mÆloˇãd
, 
	mbuf„r
;

35 } 
	mÀn
;

36 
	mÊags
;

39 
boﬁ
 
°rbuf_öô_wôh_size
(
°rbuf_t
 *
buf
, 
size_t
 
size
);

40 
boﬁ
 
°rbuf_öô
(
°rbuf_t
 *
buf
);

41 
°rbuf_t
 *
°rbuf_√w_wôh_size
(
size_t
 
size
);

42 
°rbuf_t
 *
°rbuf_√w
();

43 
°rbuf_‰ì
(
°rbuf_t
 *
s
);

44 
boﬁ
 
°rbuf_≠≥nd_ch¨
(
°rbuf_t
 *
s
, c⁄° 
c
);

45 
boﬁ
 
°rbuf_≠≥nd_°r
(
°rbuf_t
 *
s1
, c⁄° *
s2
, 
size_t
 
sz
);

46 
boﬁ
 
°rbuf_£t_°©ic
(
°rbuf_t
 *
s1
, c⁄° *
s2
, 
size_t
 
sz
);

47 
boﬁ
 
°rbuf_£t
(
°rbuf_t
 *
s1
, c⁄° *
s2
, 
size_t
 
sz
);

48 
°rbuf_cmp
(
°rbuf_t
 *
s1
, såbuf_à*
s2
);

49 
boﬁ
 
°rbuf_≠≥nd_¥ötf
(
°rbuf_t
 *
s
, c⁄° *
fmt
, ...);

50 
boﬁ
 
°rbuf_¥ötf
(
°rbuf_t
 *
s1
, c⁄° *
fmt
, ...);

51 
size_t
 
°rbuf_gë_Àngth
(
°rbuf_t
 *
s
);

52 *
°rbuf_gë_buf„r
(
°rbuf_t
 *
s
);

53 
boﬁ
 
°rbuf_shrök_to
(
°rbuf_t
 *
s
, 
size_t
 
√w_size
);

54 
boﬁ
 
°rbuf_shrök_to_deÁu…
(
°rbuf_t
 *
s
);

55 
boﬁ
 
°rbuf_grow_to
(
°rbuf_t
 *
s
, 
size_t
 
√w_size
);

56 
boﬁ
 
°rbuf_ª£t
(
°rbuf_t
 *
s
);

57 
boﬁ
 
°rbuf_ª£t_Àngth
(
°rbuf_t
 *
s
);

	@freegeoip/freegeoip.c

23 
	#_DEFAULT_SOURCE


	)

24 
	~<¨∑/öë.h
>

25 
	~<°rög.h
>

26 
	~<°dlib.h
>

27 
	~<sqlôe3.h
>

29 
	~"lw™.h
"

30 
	~"lw™-ˇche.h
"

31 
	~"lw™-£rve-fûes.h
"

32 
	~"lw™-ãm∂©e.h
"

35 
	#QUERIES_PER_HOUR
 10000

	)

37 
	sù_öfo_t
 {

38 
ˇche_íåy_t
 
	mba£
;

40 *
	mcode
;

41 *
	m«me
;

42 } 
	mcou¡ry
, 
	mªgi⁄
;

44 *
	m«me
;

45 *
	mzù_code
;

46 } 
	mcôy
;

47 
	mœtôude
, 
	ml⁄gôude
;

49 *
	mcode
, *
	m¨ó
;

50 } 
	mmëro
;

51 *
	mù
;

52 c⁄° *
	mˇŒback
;

55 c⁄° 
lw™_v¨_des¸ùt‹_t
 
	gãm∂©e_des¸ùt‹
[] = {

56 
TPL_VAR_STR
(
ù_öfo_t
, 
cou¡ry
.
code
),

57 
TPL_VAR_STR
(
ù_öfo_t
, 
cou¡ry
.
«me
),

58 
TPL_VAR_STR
(
ù_öfo_t
, 
ªgi⁄
.
code
),

59 
TPL_VAR_STR
(
ù_öfo_t
, 
ªgi⁄
.
«me
),

60 
TPL_VAR_STR
(
ù_öfo_t
, 
côy
.
«me
),

61 
TPL_VAR_STR
(
ù_öfo_t
, 
côy
.
zù_code
),

62 
TPL_VAR_DOUBLE
(
ù_öfo_t
, 
œtôude
),

63 
TPL_VAR_DOUBLE
(
ù_öfo_t
, 
l⁄gôude
),

64 
TPL_VAR_STR
(
ù_öfo_t
, 
mëro
.
code
),

65 
TPL_VAR_STR
(
ù_öfo_t
, 
mëro
.
¨ó
),

66 
TPL_VAR_STR
(
ù_öfo_t
, 
ù
),

67 
TPL_VAR_STR
(
ù_öfo_t
, 
ˇŒback
),

68 
TPL_VAR_SENTINEL


71 c⁄° c⁄° 
	gjs⁄_ãm∂©e_°r
[] = \

88 c⁄° c⁄° 
	gxml_ãm∂©e_°r
[] = \

104 c⁄° c⁄° 
	gcsv_ãm∂©e_°r
[] = \

118 c⁄° c⁄° 
	gù_to_côy_quîy
[] = \

137 
	uù_to_o˘ë
 {

138 
	mo˘ë
[(
ö_addr_t
)];

139 
ö_addr_t
 
	mù
;

142 
	sù_√t_t
 {

143 
ù_to_o˘ë
 
	mù
;

144 
ù_to_o˘ë
 
	mmask
;

148 
	#ADDRESS
(
o1
, 
o2
, 
o3
, 
o4
) \

149 { .
o˘ë
[0] = 
o1
, .o˘ë[1] = 
o2
, .o˘ë[2] = 
o3
, .o˘ë[3] = 
o4
 }

	)

151 c⁄° 
ù_√t_t
 
	gª£rved_ùs
[] = {

152 {
ADDRESS
(0, 0, 0, 0), ADDRESS(255, 0, 0, 0)},

153 {
ADDRESS
(10, 0, 0, 0), ADDRESS(255, 0, 0, 0)},

154 {
ADDRESS
(100, 64, 0, 0), ADDRESS(255, 192, 0, 0)},

155 {
ADDRESS
(127, 0, 0, 0), ADDRESS(255, 0, 0, 0)},

156 {
ADDRESS
(169, 254, 0, 0), ADDRESS(255, 255, 0, 0)},

157 {
ADDRESS
(172, 16, 0, 0), ADDRESS(255, 240, 0, 0)},

158 {
ADDRESS
(192, 0, 0, 0), ADDRESS(255, 255, 255, 248)},

159 {
ADDRESS
(192, 0, 2, 0), ADDRESS(255, 255, 255, 0)},

160 {
ADDRESS
(192, 88, 99, 0), ADDRESS(255, 255, 255, 0)},

161 {
ADDRESS
(192, 168, 0, 0), ADDRESS(255, 255, 0, 0)},

162 {
ADDRESS
(198, 18, 0, 0), ADDRESS(255, 254, 0, 0)},

163 {
ADDRESS
(198, 51, 100, 0), ADDRESS(255, 255, 255, 0)},

164 {
ADDRESS
(203, 0, 113, 0), ADDRESS(255, 255, 255, 0)},

165 {
ADDRESS
(224, 0, 0, 0), ADDRESS(240, 0, 0, 0)},

166 {
ADDRESS
(240, 0, 0, 0), ADDRESS(240, 0, 0, 0)},

167 {
ADDRESS
(255, 255, 255, 255), ADDRESS(255, 255, 255, 255)},

170 #unde‡
ADDRESS


173 #i‡
QUERIES_PER_HOUR
 != 0

174 
	squîy_limô_t
 {

175 
ˇche_íåy_t
 
	mba£
;

176 
	mquîõs
;

179 
ˇche_t
 *
	gquîy_limô
;

183 
lw™_çl_t
 *
	gjs⁄_ãm∂©e
 = 
NULL
;

184 
lw™_çl_t
 *
	gxml_ãm∂©e
 = 
NULL
;

185 
lw™_çl_t
 *
	gcsv_ãm∂©e
 = 
NULL
;

186 
ˇche_t
 *
	gˇche
 = 
NULL
;

187 
sqlôe3
 *
	gdb
 = 
NULL
;

189 
boﬁ


190 
	$√t_c⁄èös_ù
(c⁄° 
ù_√t_t
 *
√t
, 
ö_addr_t
 
ù
)

192 
ù_to_o˘ë
 
_ù
 = { .
ù
 = ip };

193  (
√t
->
ù
.
o˘ë
[0] &Çë->
mask
.o˘ë[0]Ë=(
_ù
.octet[0] &Çet->mask.octet[0]) && \

194 (
√t
->
ù
.
o˘ë
[1] &Çë->
mask
.o˘ë[1]Ë=(
_ù
.octet[1] &Çet->mask.octet[1]) && \

195 (
√t
->
ù
.
o˘ë
[2] &Çë->
mask
.o˘ë[2]Ë=(
_ù
.octet[2] &Çet->mask.octet[2]) && \

196 (
√t
->
ù
.
o˘ë
[3] &Çë->
mask
.o˘ë[3]Ë=(
_ù
.octet[3] &Çet->mask.octet[3]);

197 
	}
}

199 
boﬁ


200 
	$is_ª£rved_ù
(
ö_addr_t
 
ù
)

202 
size_t
 
i
;

203 
i
 = 0; i < 
	`N_ELEMENTS
(
ª£rved_ùs
); i++) {

204 i‡(
	`√t_c⁄èös_ù
(&
ª£rved_ùs
[
i
], 
ù
))

205  
åue
;

207  
Ál£
;

208 
	}
}

211 
de°roy_ùöfo
(
ˇche_íåy_t
 *
íåy
,

212 *
c⁄ãxt
 
__©åibuã__
((
unu£d
)))

214 
ù_öfo_t
 *
	gù_öfo
 = (ù_öfo_à*)
íåy
;

216 i‡(!
	gù_öfo
)

219 
‰ì
(
ù_öfo
->
cou¡ry
.
code
);

220 
‰ì
(
ù_öfo
->
cou¡ry
.
«me
);

221 
‰ì
(
ù_öfo
->
ªgi⁄
.
code
);

222 
‰ì
(
ù_öfo
->
ªgi⁄
.
«me
);

223 
‰ì
(
ù_öfo
->
côy
.
«me
);

224 
‰ì
(
ù_öfo
->
côy
.
zù_code
);

225 
‰ì
(
ù_öfo
->
mëro
.
code
);

226 
‰ì
(
ù_öfo
->
mëro
.
¨ó
);

227 
‰ì
(
ù_öfo
->
ù
);

228 
‰ì
(
ù_öfo
);

231 
ALWAYS_INLINE
 *

232 
	$ãxt_cﬁumn_hñ≥r
(
sqlôe3_°mt
 *
°mt
, 
öd
)

234 c⁄° *
vÆue
;

236 
vÆue
 = 
	`sqlôe3_cﬁumn_ãxt
(
°mt
, 
öd
);

237  
vÆue
 ? 
	`°rdup
((*)vÆueË: 
NULL
;

238 
	}
}

240 
ˇche_íåy_t
 *

241 
¸óã_ùöfo
(c⁄° *
key
, *
c⁄ãxt
 
__©åibuã__
((
unu£d
)))

243 
sqlôe3_°mt
 *
	g°mt
;

244 
ù_öfo_t
 *
	gù_öfo
 = 
NULL
;

245 
ö_addr
 
	gaddr
;

247 i‡(
UNLIKELY
(!
öë_©⁄
(
key
, &
addr
)))

248 
	gíd_no_föÆize
;

250 i‡(
is_ª£rved_ù
(
addr
.
s_addr
)) {

251 
	gù_öfo
 = 
ˇŒoc
(1, (*
ù_öfo
));

252 i‡(
LIKELY
(
ù_öfo
)) {

253 
	gù_öfo
->
	gcou¡ry
.
	gcode
 = 
°rdup
("RD");

254 
	gù_öfo
->
	gcou¡ry
.
	g«me
 = 
°rdup
("Reserved");

255 
	gù_öfo
->
	gù
 = 
°rdup
(
key
);

257 
	gíd_no_föÆize
;

260 i‡(
sqlôe3_¥ï¨e
(
db
, 
ù_to_côy_quîy
,

261 (
ù_to_côy_quîy
) - 1,

262 &
°mt
, 
NULL
Ë!
SQLITE_OK
)

263 
íd_no_föÆize
;

265 i‡(
sqlôe3_böd_öt64
(
°mt
, 1, 
¡ohl
(
addr
.
s_addr
)Ë!
SQLITE_OK
)

266 
íd
;

268 i‡(
sqlôe3_°ï
(
°mt
Ë!
SQLITE_ROW
)

269 
íd
;

271 
	gù_öfo
 = 
mÆloc
((*
ù_öfo
));

272 i‡(!
	gù_öfo
)

273 
	gíd
;

275 
	#TEXT_COLUMN
(
ödex
Ë
	`ãxt_cﬁumn_hñ≥r
(
°mt
, index)

	)

277 
	gù_öfo
->
	gcou¡ry
.
	gcode
 = 
TEXT_COLUMN
(0);

278 
	gù_öfo
->
	gcou¡ry
.
	g«me
 = 
TEXT_COLUMN
(1);

279 
	gù_öfo
->
	gªgi⁄
.
	gcode
 = 
TEXT_COLUMN
(2);

280 
	gù_öfo
->
	gªgi⁄
.
	g«me
 = 
TEXT_COLUMN
(3);

281 
	gù_öfo
->
	gcôy
.
	g«me
 = 
TEXT_COLUMN
(4);

282 
	gù_öfo
->
	gcôy
.
	gzù_code
 = 
TEXT_COLUMN
(5);

283 
	gù_öfo
->
	gœtôude
 = 
sqlôe3_cﬁumn_doubÀ
(
°mt
, 6);

284 
	gù_öfo
->
	gl⁄gôude
 = 
sqlôe3_cﬁumn_doubÀ
(
°mt
, 7);

285 
	gù_öfo
->
	gmëro
.
	gcode
 = 
TEXT_COLUMN
(8);

286 
	gù_öfo
->
	gmëro
.
	g¨ó
 = 
TEXT_COLUMN
(9);

288 #unde‡
TEXT_COLUMN


290 
	gù_öfo
->
	gù
 = 
°rdup
(
key
);

292 
	gíd
:

293 
sqlôe3_föÆize
(
°mt
);

294 
	gíd_no_föÆize
:

295  (
ˇche_íåy_t
 *)
ù_öfo
;

298 #i‡
QUERIES_PER_HOUR
 != 0

299 
ˇche_íåy_t
 *

300 
¸óã_quîy_limô
(c⁄° *
key
 
__©åibuã__
((
unu£d
)),

301 *
c⁄ãxt
 
__©åibuã__
((
unu£d
)))

303 
quîy_limô_t
 *
	gíåy
 = 
mÆloc
((*
íåy
));

304 i‡(
LIKELY
(
íåy
))

305 
	gíåy
->
	gquîõs
 = 0;

306  (
	gˇche_íåy_t
 *)
	gíåy
;

310 
de°roy_quîy_limô
(
ˇche_íåy_t
 *
íåy
,

311 *
c⁄ãxt
 
__©åibuã__
((
unu£d
)))

313 
‰ì
(
íåy
);

317 
ù_öfo_t
 *

318 
	$öã∫Æ_quîy
(
lw™_ªque°_t
 *
ªque°
, c⁄° *
ù_addªss
)

320 c⁄° *
quîy
;

322 i‡(
ªque°
->
uæ
.
Àn
 == 0)

323 
quîy
 = 
ù_addªss
;

324 i‡(
ªque°
->
uæ
.
Àn
 < 7)

325 
quîy
 = 
NULL
;

327 
quîy
 = 
ªque°
->
uæ
.
vÆue
;

328 i‡(
	`UNLIKELY
(!
quîy
))

329  
NULL
;

331  (
ù_öfo_t
 *)
	`ˇche_c‹o_gë_™d_ªf_íåy
(
ˇche
,

332 
ªque°
->
c⁄n
->
c‹o
, 
quîy
);

333 
	}
}

335 #i‡
QUERIES_PER_HOUR
 != 0

336 
boﬁ
 
	$is_øã_limôed
(c⁄° *
ù_addªss
)

338 
boﬁ
 
limôed
;

339 
îr‹
;

340 
quîy_limô_t
 *
limô
;

342 
limô
 = (
quîy_limô_t
 *)

343 
	`ˇche_gë_™d_ªf_íåy
(
quîy_limô
, 
ù_addªss
, &
îr‹
);

344 i‡(!
limô
)

345  
åue
;

347 
limôed
 = 
	`ATOMIC_AAF
(&
limô
->
quîõs
, 1Ë> 
QUERIES_PER_HOUR
;

348 
	`ˇche_íåy_uƒef
(
quîy_limô
, &
limô
->
ba£
);

350  
limôed
;

351 
	}
}

354 
lw™_hâp_°©us_t


355 
	$ãm∂©ed_ouçut
(
lw™_ªque°_t
 *
ªque°
,

356 
lw™_ª•⁄£_t
 *
ª•⁄£
,

357 *
d©a
)

359 c⁄° *
ù_addªss
;

360 
lw™_çl_t
 *
çl
 = 
d©a
;

361 
ù_öfo_t
 *
öfo
;

362 
ù_addªss_buf
[
INET6_ADDRSTRLEN
];

364 
ù_addªss
 = 
	`lw™_ªque°_gë_ªmŸe_addªss
(
ªque°
, 
ù_addªss_buf
);

365 i‡(
	`UNLIKELY
(!
ù_addªss
))

366  
HTTP_INTERNAL_ERROR
;

368 #i‡
QUERIES_PER_HOUR
 != 0

369 i‡(
	`UNLIKELY
(
	`is_øã_limôed
(
ù_addªss
)))

370  
HTTP_FORBIDDEN
;

373 
öfo
 = 
	`öã∫Æ_quîy
(
ªque°
, 
ù_addªss
);

374 i‡(
	`UNLIKELY
(!
öfo
))

375  
HTTP_NOT_FOUND
;

377 i‡(
çl
 =
js⁄_ãm∂©e
)

378 
ª•⁄£
->
mime_ty≥
 = "application/json; charset=UTF-8";

379 i‡(
çl
 =
xml_ãm∂©e
)

380 
ª•⁄£
->
mime_ty≥
 = "application/xml; charset=UTF-8";

382 
ª•⁄£
->
mime_ty≥
 = "text/plain; charset=UTF-8";

384 c⁄° *
ˇŒback
 = 
	`lw™_ªque°_gë_quîy_∑øm
(
ªque°
, "callback");

385 
ù_öfo_t
 
öfo_wôh_ˇŒback
 = *
öfo
;

386 
öfo_wôh_ˇŒback
.
ˇŒback
 = callback;

388 
	`lw™_çl_≠∂y_wôh_buf„r
(
çl
, 
ª•⁄£
->
buf„r
,

389 &
öfo_wôh_ˇŒback
);

391  
HTTP_OK
;

392 
	}
}

395 
	$maö
()

397 
lw™_t
 
l
;

399 
	`lw™_öô
(&
l
);

401 
js⁄_ãm∂©e
 = 
	`lw™_çl_compûe_°rög
(
js⁄_ãm∂©e_°r
, 
ãm∂©e_des¸ùt‹
);

402 i‡(!
js⁄_ãm∂©e
)

403 
	`lw™_°©us_¸ôiˇl
("CouldÇot compile JSONÅemplate");

404 
xml_ãm∂©e
 = 
	`lw™_çl_compûe_°rög
(
xml_ãm∂©e_°r
, 
ãm∂©e_des¸ùt‹
);

405 i‡(!
xml_ãm∂©e
)

406 
	`lw™_°©us_¸ôiˇl
("CouldÇot compile XMLÅemplate");

407 
csv_ãm∂©e
 = 
	`lw™_çl_compûe_°rög
(
csv_ãm∂©e_°r
, 
ãm∂©e_des¸ùt‹
);

408 i‡(!
csv_ãm∂©e
)

409 
	`lw™_°©us_¸ôiˇl
("CouldÇot compile CSVÅemplate");

411 
ªsu…
 = 
	`sqlôe3_›í_v2
("./db/ùdb.sqlôe", &
db
,

412 
SQLITE_OPEN_READONLY
, 
NULL
);

413 i‡(
ªsu…
 !
SQLITE_OK
)

414 
	`lw™_°©us_¸ôiˇl
("CouldÇot open database: %s",

415 
	`sqlôe3_îrmsg
(
db
));

416 
ˇche
 = 
	`ˇche_¸óã
(
¸óã_ùöfo
, 
de°roy_ùöfo
, 
NULL
, 10);

418 #i‡
QUERIES_PER_HOUR
 != 0

419 
	`lw™_°©us_öfo
("LimitingÅo %d queriesÖer hourÖer client",

420 
QUERIES_PER_HOUR
);

421 
quîy_limô
 = 
	`ˇche_¸óã
(
¸óã_quîy_limô
,

422 
de°roy_quîy_limô
, 
NULL
, 3600);

424 
	`lw™_°©us_öfo
("Rate-limiting disabled");

427 c⁄° 
lw™_uæ_m≠_t
 
deÁu…_m≠
[] = {

428 { .
¥efix
 = "/js⁄/", .
h™dÀr
 = 
ãm∂©ed_ouçut
, .
d©a
 = 
js⁄_ãm∂©e
 },

429 { .
¥efix
 = "/xml/", .
h™dÀr
 = 
ãm∂©ed_ouçut
, .
d©a
 = 
xml_ãm∂©e
 },

430 { .
¥efix
 = "/csv/", .
h™dÀr
 = 
ãm∂©ed_ouçut
, .
d©a
 = 
csv_ãm∂©e
 },

431 { .
¥efix
 = "/", 
	`SERVE_FILES
("./static") },

432 { .
¥efix
 = 
NULL
 }

435 
	`lw™_£t_uæ_m≠
(&
l
, 
deÁu…_m≠
);

436 
	`lw™_maö_lo›
(&
l
);

437 
	`lw™_shutdown
(&
l
);

439 
	`lw™_çl_‰ì
(
csv_ãm∂©e
);

440 
	`lw™_çl_‰ì
(
xml_ãm∂©e
);

441 
	`lw™_çl_‰ì
(
js⁄_ãm∂©e
);

442 #i‡
QUERIES_PER_HOUR
 != 0

443 
	`ˇche_de°roy
(
quîy_limô
);

445 
	`ˇche_de°roy
(
ˇche
);

446 
	`sqlôe3_˛o£
(
db
);

449 
	}
}

	@lwan/main.c

20 
	~"lw™.h
"

21 
	~"lw™-£rve-fûes.h
"

23 
lw™_hâp_°©us_t


24 
gif_bóc⁄
(
lw™_ªque°_t
 *
ªque°
 
__©åibuã__
((
unu£d
)),

25 
lw™_ª•⁄£_t
 *
ª•⁄£
,

26 *
d©a
 
__©åibuã__
((
unu£d
)))

32 c⁄° 
	ggif_bóc⁄_d©a
[] = {

39 
	gª•⁄£
->
	gmime_ty≥
 = "image/gif";

40 
°rbuf_£t_°©ic
(
ª•⁄£
->
buf„r
, (*)
gif_bóc⁄_d©a
, (gif_beacon_data));

42  
	gHTTP_OK
;

45 
lw™_hâp_°©us_t


46 
ã°_chunked_ícodög
(
lw™_ªque°_t
 *
ªque°
,

47 
lw™_ª•⁄£_t
 *
ª•⁄£
,

48 *
d©a
 
__©åibuã__
((
unu£d
)))

50 
	gi
;

52 
	gª•⁄£
->
	gmime_ty≥
 = "text/plain";

54 
°rbuf_¥ötf
(
ª•⁄£
->
buf„r
, "Testing chunkedÉncoding! First chunk\n");

55 
lw™_ª•⁄£_£nd_chunk
(
ªque°
);

57 
	gi
 = 0; i <= 10; i++) {

58 
°rbuf_¥ötf
(
ª•⁄£
->
buf„r
, "*Thi†i†chunk %d*\n", 
i
);

59 
lw™_ª•⁄£_£nd_chunk
(
ªque°
);

62 
°rbuf_¥ötf
(
ª•⁄£
->
buf„r
, "Last chunk\n");

63 
lw™_ª•⁄£_£nd_chunk
(
ªque°
);

65  
	gHTTP_OK
;

68 
lw™_hâp_°©us_t


69 
ã°_£rvî_£¡_evít
(
lw™_ªque°_t
 *
ªque°
,

70 
lw™_ª•⁄£_t
 *
ª•⁄£
,

71 *
d©a
 
__©åibuã__
((
unu£d
)))

73 
	gi
;

75 
	gi
 = 0; i <= 10; i++) {

76 
°rbuf_¥ötf
(
ª•⁄£
->
buf„r
, "CuºíàvÆuêi†%d", 
i
);

77 
lw™_ª•⁄£_£nd_evít
(
ªque°
, "currval");

80  
	gHTTP_OK
;

83 
lw™_hâp_°©us_t


84 
hñlo_w‹ld
(
lw™_ªque°_t
 *
ªque°
,

85 
lw™_ª•⁄£_t
 *
ª•⁄£
,

86 *
d©a
 
__©åibuã__
((
unu£d
)))

88 
lw™_key_vÆue_t
 
	ghódîs
[] = {

89 { .
key
 = "X-The-Answî-To-The-Univîßl-Que°i⁄", .
	gvÆue
 = "42" },

90 { 
	gNULL
, NULL }

92 
	gª•⁄£
->
	ghódîs
 = 
hódîs
;

93 
	gª•⁄£
->
	gmime_ty≥
 = "text/plain";

95 c⁄° *
	g«me
 = 
lw™_ªque°_gë_quîy_∑øm
(
ªque°
, "name");

96 i‡(
	g«me
)

97 
°rbuf_¥ötf
(
ª•⁄£
->
buf„r
, "Hñlo, %s!", 
«me
);

99 
°rbuf_£t_°©ic
(
ª•⁄£
->
buf„r
, "Hello, world!", ("Hello, world!") -1);

101 c⁄° *
	gdump_v¨s
 = 
lw™_ªque°_gë_quîy_∑øm
(
ªque°
, "dump_vars");

102 i‡(!
	gdump_v¨s
)

103 
	gíd
;

105 
°rbuf_≠≥nd_°r
(
ª•⁄£
->
buf„r
, "\n\nQuery String Variables\n", 0);

106 
°rbuf_≠≥nd_°r
(
ª•⁄£
->
buf„r
, "----------------------\n\n", 0);

108 
lw™_key_vÆue_t
 *
	gqs
 = 
ªque°
->
quîy_∑øms
.
ba£
;

109 ; 
	gqs
->
	gkey
; qs++)

110 
°rbuf_≠≥nd_¥ötf
(
ª•⁄£
->
buf„r
,

111 "Key = \"%s\"; VÆuê\"%s\"\n", 
qs
->
key
, qs->
vÆue
);

113 i‡(!(
	gªque°
->
	gÊags
 & 
	gREQUEST_METHOD_POST
))

114 
	gíd
;

116 
°rbuf_≠≥nd_°r
(
ª•⁄£
->
buf„r
, "\n\nPOST data\n", 0);

117 
°rbuf_≠≥nd_°r
(
ª•⁄£
->
buf„r
, "---------\n\n", 0);

119 
	gqs
 = 
ªque°
->
po°_d©a
.
ba£
; qs->
	gkey
; qs++)

120 
°rbuf_≠≥nd_¥ötf
(
ª•⁄£
->
buf„r
,

121 "Key = \"%s\"; VÆuê\"%s\"\n", 
qs
->
key
, qs->
vÆue
);

123 
	gíd
:

124  
HTTP_OK
;

128 
	$maö
()

130 
lw™_t
 
l
;

132 
	`lw™_öô
(&
l
);

133 
	`lw™_maö_lo›
(&
l
);

134 
	`lw™_shutdown
(&
l
);

137 
	}
}

	@techempower/array.c

21 
	~"¨øy.h
"

23 
	~<as£π.h
>

24 
	~<î∫o.h
>

25 
	~<°ddef.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

32 
	$¨øy_ªÆloc
(
¨øy
 *¨øy, 
size_t
 
√w_tŸÆ
)

34 *
tmp
 = 
	`ªÆloc
(
¨øy
->¨øy, (*Ë* 
√w_tŸÆ
);

35 i‡(
tmp
 =
NULL
)

36  -
ENOMEM
;

37 
¨øy
->¨øy = 
tmp
;

38 
¨øy
->
tŸÆ
 = 
√w_tŸÆ
;

40 
	}
}

42 
	$¨øy_öô
(
¨øy
 *¨øy, 
size_t
 
°ï
)

44 
	`as£π
(
°ï
 > 0);

45 
¨øy
->¨øy = 
NULL
;

46 
¨øy
->
cou¡
 = 0;

47 
¨øy
->
tŸÆ
 = 0;

48 
¨øy
->
°ï
 = step;

49 
	}
}

51 
	$¨øy_≠≥nd
(
¨øy
 *¨øy, c⁄° *
ñemít
)

53 
size_t
 
idx
;

55 i‡(
¨øy
->
cou¡
 + 1 >¨øy->
tŸÆ
) {

56 
r
 = 
	`¨øy_ªÆloc
(
¨øy
,áºay->
tŸÆ
 +áºay->
°ï
);

57 i‡(
r
 < 0)

58  
r
;

60 
idx
 = 
¨øy
->
cou¡
;

61 
¨øy
->¨øy[
idx
] = (*)
ñemít
;

62 
¨øy
->
cou¡
++;

63  ()
idx
;

64 
	}
}

66 
	$¨øy_≠≥nd_unique
(
¨øy
 *¨øy, c⁄° *
ñemít
)

68 **
ôr
 = 
¨øy
->array;

69 **
ôr_íd
 = 
ôr
 + 
¨øy
->
cou¡
;

70 ; 
ôr
 < 
ôr_íd
; itr++)

71 i‡(*
ôr
 =
ñemít
)

72  -
EEXIST
;

73  
	`¨øy_≠≥nd
(
¨øy
, 
ñemít
);

74 
	}
}

76 
	$¨øy_p›
(
¨øy
 *array) {

77 
¨øy
->
cou¡
--;

78 i‡(
¨øy
->
cou¡
 +áºay->
°ï
 <áºay->
tŸÆ
) {

79 
r
 = 
	`¨øy_ªÆloc
(
¨øy
,áºay->
tŸÆ
 -áºay->
°ï
);

80 i‡(
r
 < 0)

83 
	}
}

85 
	$¨øy_‰ì_¨øy
(
¨øy
 *array) {

86 
	`‰ì
(
¨øy
->array);

87 
¨øy
->
cou¡
 = 0;

88 
¨øy
->
tŸÆ
 = 0;

89 
	}
}

92 
¨øy_s‹t
(
¨øy
 *¨øy, (*
cmp
)(c⁄° *
a
, c⁄° *
b
))

94 
	`qs‹t
(
¨øy
->¨øy,áºay->
cou¡
, (*), 
cmp
);

95 
	}
}

97 
	$¨øy_ªmove_©
(
¨øy
 *¨øy, 
pos
)

99 i‡(
¨øy
->
cou¡
 <
pos
)

100  -
ENOENT
;

102 
¨øy
->
cou¡
--;

103 i‡(
pos
 < 
¨øy
->
cou¡
)

104 
	`memmove
(
¨øy
->¨øy + 
pos
,árray->array +Öos + 1,

105 (*Ë* (
¨øy
->
cou¡
 - 
pos
));

107 i‡(
¨øy
->
cou¡
 +áºay->
°ï
 <áºay->
tŸÆ
) {

108 
r
 = 
	`¨øy_ªÆloc
(
¨øy
,áºay->
tŸÆ
 -áºay->
°ï
);

110 i‡(
r
 < 0)

115 
	}
}

	@techempower/array.h

1 #¥agm®
⁄˚


3 
	~<°ddef.h
>

9 
	s¨øy
 {

10 **
	m¨øy
;

11 
size_t
 
	mcou¡
;

12 
size_t
 
	mtŸÆ
;

13 
size_t
 
	m°ï
;

16 
¨øy_öô
(
¨øy
 *¨øy, 
size_t
 
°ï
);

17 
¨øy_≠≥nd
(
¨øy
 *¨øy, c⁄° *
ñemít
);

18 
¨øy_≠≥nd_unique
(
¨øy
 *¨øy, c⁄° *
ñemít
);

19 
¨øy_p›
(
¨øy
 *array);

20 
¨øy_‰ì_¨øy
(
¨øy
 *array);

21 
¨øy_s‹t
(
¨øy
 *¨øy, (*
cmp
)(c⁄° *
a
, c⁄° *
b
));

22 
	`¨øy_ªmove_©
(
¨øy
 *¨øy, 
pos
);

	@techempower/database.c

20 
	~<mysql.h
>

21 
	~<sqlôe3.h
>

22 
	~<°ddef.h
>

23 
	~<°dlib.h
>

25 
	~"d©aba£.h
"

27 
	sdb_°mt
 {

28 
boﬁ
 (*
böd
)(c⁄° 
db_°mt
 *
	m°mt
, 
db_row
 *
	mrows
, 
size_t
 
	mn_rows
);

29 
boﬁ
 (*
°ï
)(c⁄° 
db_°mt
 *
	m°mt
, 
db_row
 *
	mrow
);

30 (*
	mföÆize
)(
db_°mt
 *
	m°mt
);

33 
	sdb
 {

34 (*
	mdisc⁄√˘
)(
db
 *
	mdb
);

35 
	mdb_°mt
 *(*
	m¥ï¨e
)(c⁄° 
db
 *
	mdb
, c⁄° *
	msql
, c⁄° 
size_t
 
	msql_Àn
);

40 
	sdb_mysql
 {

41 
db
 
	mba£
;

42 
MYSQL
 *
	mc⁄
;

45 
	sdb_°mt_mysql
 {

46 
db_°mt
 
	mba£
;

47 
MYSQL_STMT
 *
	m°mt
;

48 
MYSQL_BIND
 *
	m∑øm_böd
;

49 
MYSQL_BIND
 *
	mªsu…_böd
;

50 
boﬁ
 
	mmu°_execuã_agaö
;

53 
boﬁ
 
	$db_°mt_böd_mysql
(c⁄° 
db_°mt
 *
°mt
,

54 
db_row
 *
rows
, 
size_t
 
n_rows
)

56 
db_°mt_mysql
 *
°mt_mysql
 = (db_°mt_mysq»*)
°mt
;

58 
°mt_mysql
->
mu°_execuã_agaö
 = 
åue
;

60 i‡(!
°mt_mysql
->
∑øm_böd
) {

61 
°mt_mysql
->
∑øm_böd
 = 
	`ˇŒoc
(
n_rows
, (*stmt_mysql->param_bind));

62 i‡(!
°mt_mysql
->
∑øm_böd
)

63  
Ál£
;

65 
	`mysql_°mt_ª£t
(
°mt_mysql
->
°mt
);

68 
size_t
 
row
 = 0;Ñow < 
n_rows
;Ñow++) {

69 i‡(
rows
[
row
].
köd
 == '\0') ;

71 
MYSQL_BIND
 *
∑øm
 = &
°mt_mysql
->
∑øm_böd
[
row
];

72 i‡(
rows
[
row
].
köd
 == 's') {

73 
∑øm
->
buf„r_ty≥
 = 
MYSQL_TYPE_STRING
;

74 
∑øm
->
buf„r
 = 
rows
[
row
].
u
.
s
;

75 } i‡(
rows
[
row
].
köd
 == 'i') {

76 
∑øm
->
buf„r_ty≥
 = 
MYSQL_TYPE_LONG
;

77 
∑øm
->
buf„r
 = &
rows
[
row
].
u
.
i
;

79 
∑øm
->
is_nuŒ
 = 
Ál£
;

80 
∑øm
->
Àngth
 = 0;

83  !
	`mysql_°mt_böd_∑øm
(
°mt_mysql
->
°mt
, stmt_mysql->
∑øm_böd
);

84 
	}
}

86 
boﬁ
 
	$db_°mt_°ï_mysql
(c⁄° 
db_°mt
 *
°mt
, 
db_row
 *
row
)

88 
db_°mt_mysql
 *
°mt_mysql
 = (db_°mt_mysq»*)
°mt
;

90 i‡(
°mt_mysql
->
mu°_execuã_agaö
) {

91 
°mt_mysql
->
mu°_execuã_agaö
 = 
Ál£
;

92 i‡(
	`mysql_°mt_execuã
(
°mt_mysql
->
°mt
))

93  
Ál£
;

96 i‡(!
°mt_mysql
->
ªsu…_böd
) {

97 
size_t
 
n_rows
 = 0;

98 
db_row
 *
r
 = 
row
;Ñ->
köd
 != '\0';Ñ++)

99 
n_rows
++;

101 i‡(!
n_rows
)

102  
Ál£
;

104 
°mt_mysql
->
ªsu…_böd
 = 
	`ˇŒoc
(
n_rows
, (*stmt_mysql->result_bind));

105 i‡(!
°mt_mysql
->
ªsu…_böd
)

106  
Ál£
;

108 
°mt_mysql
->
∑øm_böd
 = 
	`ˇŒoc
(
n_rows
, (*stmt_mysql->param_bind));

109 i‡(!
°mt_mysql
->
∑øm_böd
) {

110 
	`‰ì
(
°mt_mysql
->
∑øm_böd
);

111  
Ál£
;

114 
MYSQL_BIND
 *
ªsu…
 = 
°mt_mysql
->
ªsu…_böd
;

115 
size_t
 
r
 = 0;Ñ < 
n_rows
;Ñ++) {

116 i‡(
row
[
r
].
köd
 == 's') {

117 
ªsu…
[
r
].
buf„r_ty≥
 = 
MYSQL_TYPE_STRING
;

118 
ªsu…
[
r
].
buf„r
 = 
row
[r].
u
.
s
;

119 } i‡(
row
[
r
].
köd
 == 'i') {

120 
ªsu…
[
r
].
buf„r_ty≥
 = 
MYSQL_TYPE_LONG
;

121 
ªsu…
[
r
].
buf„r
 = &
row
[r].
u
.
i
;

123  
Ál£
;

126 
ªsu…
[
r
].
is_nuŒ
 = 
Ál£
;

127 
ªsu…
[
r
].
buf„r_Àngth
 = 
row
[r].buffer_length;

130 i‡(
	`mysql_°mt_böd_ªsu…
(
°mt_mysql
->
°mt
, 
ªsu…
))

131  
Ál£
;

134  
	`mysql_°mt_„tch
(
°mt_mysql
->
°mt
) == 0;

135 
	}
}

137 
	$db_°mt_föÆize_mysql
(
db_°mt
 *
°mt
)

139 
db_°mt_mysql
 *
°mt_mysql
 = (db_°mt_mysq»*)
°mt
;

141 
	`mysql_°mt_˛o£
(
°mt_mysql
->
°mt
);

142 
	`‰ì
(
°mt_mysql
->
ªsu…_böd
);

143 
	`‰ì
(
°mt_mysql
->
∑øm_böd
);

144 
	`‰ì
(
°mt_mysql
);

145 
	}
}

147 
db_°mt
 *
	$db_¥ï¨e_mysql
(c⁄° 
db
 *db, c⁄° *
sql
,

148 c⁄° 
size_t
 
sql_Àn
)

150 c⁄° 
db_mysql
 *db_mysq»(c⁄° db_mysq»*)
db
;

151 
db_°mt_mysql
 *
°mt_mysql
 = 
	`mÆloc
((*stmt_mysql));

153 i‡(!
°mt_mysql
)

154  
NULL
;

156 
°mt_mysql
->
°mt
 = 
	`mysql_°mt_öô
(
db_mysql
->
c⁄
);

157 i‡(!
°mt_mysql
->
°mt
) {

158 
	`‰ì
(
°mt_mysql
);

159  
NULL
;

162 i‡(
	`mysql_°mt_¥ï¨e
(
°mt_mysql
->
°mt
, 
sql
, 
sql_Àn
)) {

163 
	`mysql_°mt_˛o£
(
°mt_mysql
->
°mt
);

164 
	`‰ì
(
°mt_mysql
);

165  
NULL
;

168 
°mt_mysql
->
ba£
.
böd
 = 
db_°mt_böd_mysql
;

169 
°mt_mysql
->
ba£
.
°ï
 = 
db_°mt_°ï_mysql
;

170 
°mt_mysql
->
ba£
.
föÆize
 = 
db_°mt_föÆize_mysql
;

171 
°mt_mysql
->
ªsu…_böd
 = 
NULL
;

172 
°mt_mysql
->
∑øm_böd
 = 
NULL
;

173 
°mt_mysql
->
mu°_execuã_agaö
 = 
åue
;

175  (
db_°mt
*)
°mt_mysql
;

176 
	}
}

178 
	$db_disc⁄√˘_mysql
(
db
 *db)

180 
db_mysql
 *db_mysq»(db_mysq»*)
db
;

182 
	`mysql_˛o£
(
db_mysql
->
c⁄
);

183 
	`‰ì
(
db
);

184 
	}
}

186 
db
 *
	$db_c⁄√˘_mysql
(c⁄° *
ho°
, c⁄° *
u£r
, c⁄° *
∑ss
,

187 c⁄° *
d©aba£
)

189 
db_mysql
 *db_mysq»
	`mÆloc
((*db_mysql));

191 i‡(!
db_mysql
)

192  
NULL
;

194 
db_mysql
->
c⁄
 = 
	`mysql_öô
(
NULL
);

195 i‡(!
db_mysql
->
c⁄
) {

196 
	`‰ì
(
db_mysql
);

197  
NULL
;

200 i‡(!
	`mysql_ªÆ_c⁄√˘
(
db_mysql
->
c⁄
, 
ho°
, 
u£r
, 
∑ss
, 
d©aba£
, 0, 
NULL
, 0))

201 
îr‹
;

203 i‡(
	`mysql_£t_ch¨a˘î_£t
(
db_mysql
->
c⁄
, "utf8"))

204 
îr‹
;

206 
db_mysql
->
ba£
.
disc⁄√˘
 = 
db_disc⁄√˘_mysql
;

207 
db_mysql
->
ba£
.
¥ï¨e
 = 
db_¥ï¨e_mysql
;

209  (
db
 *)
db_mysql
;

211 
îr‹
:

212 
	`mysql_˛o£
(
db_mysql
->
c⁄
);

213 
	`‰ì
(
db_mysql
);

214  
NULL
;

215 
	}
}

219 
	sdb_sqlôe
 {

220 
db
 
	mba£
;

221 
sqlôe3
 *
	msqlôe
;

224 
	sdb_°mt_sqlôe
 {

225 
db_°mt
 
	mba£
;

226 
sqlôe3_°mt
 *
	msqlôe
;

229 
boﬁ
 
	$db_°mt_böd_sqlôe
(c⁄° 
db_°mt
 *
°mt
, 
db_row
 *
rows
, 
size_t
 
n_rows
)

231 c⁄° 
db_°mt_sqlôe
 *
°mt_sqlôe
 = (c⁄° db_°mt_sqlôê*)
°mt
;

232 c⁄° 
db_row
 *
rows_1_ba£d
 = 
rows
 - 1;

233 
ªt
;

235 
	`sqlôe3_ª£t
(
°mt_sqlôe
->
sqlôe
);

236 
	`sqlôe3_˛ór_bödögs
(
°mt_sqlôe
->
sqlôe
);

238 
size_t
 
row
 = 1;Ñow <
n_rows
;Ñow++) {

239 c⁄° 
db_row
 *
r
 = &
rows_1_ba£d
[
row
];

240 i‡(
r
->
köd
 == '\0') ;

242 i‡(
r
->
köd
 == 's') {

243 
ªt
 = 
	`sqlôe3_böd_ãxt
(
°mt_sqlôe
->
sqlôe
, ()
row
, 
r
->
u
.
s
, -1, 
NULL
);

244 i‡(
ªt
 !
SQLITE_OK
)

245  
Ál£
;

246 } i‡(
r
->
köd
 == 'i') {

247 
ªt
 = 
	`sqlôe3_böd_öt
(
°mt_sqlôe
->
sqlôe
, ()
row
, 
r
->
u
.
i
);

248 i‡(
ªt
 !
SQLITE_OK
)

249  
Ál£
;

251  
Ál£
;

255  
åue
;

256 
	}
}

258 
boﬁ
 
	$db_°mt_°ï_sqlôe
(c⁄° 
db_°mt
 *
°mt
, 
db_row
 *
row
)

260 c⁄° 
db_°mt_sqlôe
 *
°mt_sqlôe
 = (c⁄° db_°mt_sqlôê*)
°mt
;

262 i‡(
	`sqlôe3_°ï
(
°mt_sqlôe
->
sqlôe
Ë!
SQLITE_ROW
)

263  
Ál£
;

265 
cﬁumn_id
 = 0;

266 
db_row
 *
r
 = 
row
;Ñ->
köd
 !'\0';Ñ++, 
cﬁumn_id
++) {

267 i‡(
r
->
köd
 == 'i') {

268 
r
->
u
.
i
 = 
	`sqlôe3_cﬁumn_öt
(
°mt_sqlôe
->
sqlôe
, 
cﬁumn_id
);

269 } i‡(
r
->
köd
 == 's') {

270 
r
->
u
.
s
 = (*)
	`sqlôe3_cﬁumn_ãxt
(
°mt_sqlôe
->
sqlôe
, 
cﬁumn_id
);

272  
Ál£
;

276  
åue
;

277 
	}
}

279 
	$db_°mt_föÆize_sqlôe
(
db_°mt
 *
°mt
)

281 
db_°mt_sqlôe
 *
°mt_sqlôe
 = (db_°mt_sqlôê*)
°mt
;

283 
	`sqlôe3_föÆize
(
°mt_sqlôe
->
sqlôe
);

284 
	`‰ì
(
°mt_sqlôe
);

285 
	}
}

287 
db_°mt
 *
	$db_¥ï¨e_sqlôe
(c⁄° 
db
 *db, c⁄° *
sql
,

288 c⁄° 
size_t
 
sql_Àn
)

290 c⁄° 
db_sqlôe
 *db_sqlôê(c⁄° db_sqlôê*)
db
;

291 
db_°mt_sqlôe
 *
°mt_sqlôe
 = 
	`mÆloc
((*stmt_sqlite));

293 i‡(!
°mt_sqlôe
)

294  
NULL
;

296 
ªt
 = 
	`sqlôe3_¥ï¨e
(
db_sqlôe
->
sqlôe
, 
sql
, ()
sql_Àn
, &
°mt_sqlôe
->sqlôe, 
NULL
);

297 i‡(
ªt
 !
SQLITE_OK
) {

298 
	`‰ì
(
°mt_sqlôe
);

299  
NULL
;

302 
°mt_sqlôe
->
ba£
.
böd
 = 
db_°mt_böd_sqlôe
;

303 
°mt_sqlôe
->
ba£
.
°ï
 = 
db_°mt_°ï_sqlôe
;

304 
°mt_sqlôe
->
ba£
.
föÆize
 = 
db_°mt_föÆize_sqlôe
;

306  (
db_°mt
 *)
°mt_sqlôe
;

307 
	}
}

309 
	$db_disc⁄√˘_sqlôe
(
db
 *db)

311 
db_sqlôe
 *db_sqlôê(db_sqlôê*)
db
;

313 
	`sqlôe3_˛o£
(
db_sqlôe
->
sqlôe
);

314 
	`‰ì
(
db
);

315 
	}
}

317 
db
 *
	$db_c⁄√˘_sqlôe
(c⁄° *
∑th
, 
boﬁ
 
ªad_⁄ly
, c⁄° *
¥agmas
[])

319 
db_sqlôe
 *db_sqlôê
	`mÆloc
((*db_sqlite));

321 i‡(!
db_sqlôe
)

322  
NULL
;

324 
Êags
 = 
ªad_⁄ly
 ? 
SQLITE_OPEN_READONLY
 : 0;

325 
ªt
 = 
	`sqlôe3_›í_v2
(
∑th
, &
db_sqlôe
->
sqlôe
, 
Êags
, 
NULL
);

326 i‡(
ªt
 !
SQLITE_OK
) {

327 
	`‰ì
(
db_sqlôe
);

328  
NULL
;

331 i‡(
¥agmas
) {

332 
size_t
 
p
 = 0; 
¥agmas
[p];Ö++)

333 
	`sqlôe3_exec
(
db_sqlôe
->
sqlôe
, 
¥agmas
[
p
], 
NULL
, NULL, NULL);

336 
db_sqlôe
->
ba£
.
disc⁄√˘
 = 
db_disc⁄√˘_sqlôe
;

337 
db_sqlôe
->
ba£
.
¥ï¨e
 = 
db_¥ï¨e_sqlôe
;

339  (
db
 *)
db_sqlôe
;

340 
	}
}

344 
ölöe
 
boﬁ
 
	$db_°mt_böd
(c⁄° 
db_°mt
 *
°mt
, 
db_row
 *
rows
, 
size_t
 
n_rows
)

346  
°mt
->
	`böd
(°mt, 
rows
, 
n_rows
);

347 
	}
}

349 
ölöe
 
boﬁ
 
	$db_°mt_°ï
(c⁄° 
db_°mt
 *
°mt
, 
db_row
 *
row
)

351  
°mt
->
	`°ï
(°mt, 
row
);

352 
	}
}

354 
ölöe
 
	$db_°mt_föÆize
(
db_°mt
 *
°mt
)

356 
°mt
->
	`föÆize
(stmt);

357 
	}
}

359 
ölöe
 
	$db_disc⁄√˘
(
db
 *db)

361 
db
->
	`disc⁄√˘
(db);

362 
	}
}

364 
ölöe
 
db_°mt
 *
	$db_¥ï¨e_°mt
(c⁄° 
db
 *db, c⁄° *
sql
,

365 c⁄° 
size_t
 
sql_Àn
)

367  
db
->
	`¥ï¨e
(db, 
sql
, 
sql_Àn
);

368 
	}
}

	@techempower/database.h

20 #i‚de‡
__DATABASE_H__


21 
	#__DATABASE_H__


	)

23 
	~<°dboﬁ.h
>

25 
	gdb
;

26 
	gdb_°mt
;

28 
	sdb_row
 {

30 *
	ms
;

31 
	mi
;

32 } 
	mu
;

33 
	mköd
;

34 
size_t
 
	mbuf„r_Àngth
;

37 
boﬁ
 
db_°mt_böd
(c⁄° 
db_°mt
 *
°mt
, 
db_row
 *
rows
, 
size_t
 
n_rows
);

38 
boﬁ
 
db_°mt_°ï
(c⁄° 
db_°mt
 *
°mt
, 
db_row
 *
row
);

39 
db_°mt_föÆize
(
db_°mt
 *
°mt
);

40 
db_disc⁄√˘
(
db
 *db);

41 
db_°mt
 *
db_¥ï¨e_°mt
(c⁄° 
db
 *db, c⁄° *
sql
,

42 c⁄° 
size_t
 
sql_Àn
);

44 
db
 *
db_c⁄√˘_sqlôe
(c⁄° *
∑th
, 
boﬁ
 
ªad_⁄ly
, c⁄° *
¥agmas
[]);

45 
db
 *
db_c⁄√˘_mysql
(c⁄° *
ho°
, c⁄° *
u£r
, c⁄° *
∑ss
, c⁄° *
d©aba£
);

	@techempower/json.c

24 
	~"js⁄.h
"

26 
	~<as£π.h
>

27 
	~<°döt.h
>

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

32 
	#out_of_mem‹y
() do { \

33 
	`Ârötf
(
°dîr
, "Out of memory.\n"); \

34 
	`exô
(
EXIT_FAILURE
); \

35 } 0)

	)

41 *
	mcur
;

42 *
	míd
;

43 *
	m°¨t
;

44 } 
	tSB
;

46 
	$sb_öô
(
SB
 *
sb
)

48 
sb
->
°¨t
 = (*Ë
	`mÆloc
(17);

49 i‡(
sb
->
°¨t
 =
NULL
)

50 
	`out_of_mem‹y
();

51 
sb
->
cur
 = sb->
°¨t
;

52 
sb
->
íd
 = sb->
°¨t
 + 16;

53 
	}
}

56 
	#sb_√ed
(
sb
, 
√ed
) do { \

57 i‡((
size_t
)((
sb
)->
íd
 - (sb)->
cur
Ë< (
√ed
)) \

58 
	`sb_grow
(
sb
, 
√ed
); \

59 } 0)

	)

61 
	$sb_grow
(
SB
 *
sb
, 
size_t
 
√ed
)

63 
size_t
 
Àngth
 = (size_t)(
sb
->
cur
 - sb->
°¨t
);

64 
size_t
 
Æloc
 = (size_t)(
sb
->
íd
 - sb->
°¨t
);

67 
Æloc
 *= 2;

68 } 
Æloc
 < 
Àngth
 + 
√ed
);

70 
sb
->
°¨t
 = (*Ë
	`ªÆloc
(sb->°¨t, 
Æloc
 + 1);

71 i‡(
sb
->
°¨t
 =
NULL
)

72 
	`out_of_mem‹y
();

73 
sb
->
cur
 = sb->
°¨t
 + 
Àngth
;

74 
sb
->
íd
 = sb->
°¨t
 + 
Æloc
;

75 
	}
}

77 
	$sb_put
(
SB
 *
sb
, c⁄° *
byãs
, 
size_t
 
cou¡
)

79 
	`sb_√ed
(
sb
, 
cou¡
);

80 
	`mem˝y
(
sb
->
cur
, 
byãs
, 
cou¡
);

81 
sb
->
cur
 +
cou¡
;

82 
	}
}

84 
	#sb_putc
(
sb
, 
c
) do { \

85 i‡((
sb
)->
cur
 >(sb)->
íd
) \

86 
	`sb_grow
(
sb
, 1); \

87 *(
sb
)->
cur
++ = (
c
); \

88 } 0)

	)

90 
	$sb_puts
(
SB
 *
sb
, c⁄° *
°r
)

92 
	`sb_put
(
sb
, 
°r
, 
	`°æí
(str));

93 
	}
}

95 *
	$sb_föish
(
SB
 *
sb
)

97 *
sb
->
cur
 = 0;

98 
	`as£π
(
sb
->
°¨t
 <sb->
cur
 && 
	`°æí
(sb->°¨tË=(
size_t
)(sb->cur - sb->start));

99  
sb
->
°¨t
;

100 
	}
}

102 *
	$sb_föish_Àngth
(
SB
 *
sb
, 
size_t
 *
Àngth
)

104 *
sb
->
cur
 = 0;

105 
	`as£π
(
sb
->
°¨t
 <sb->
cur
 && 
	`°æí
(sb->°¨tË=(
size_t
)(sb->cur - sb->start));

106 *
Àngth
 = (
size_t
)(
sb
->
cur
 - sb->
°¨t
);

107  
sb
->
°¨t
;

108 
	}
}

110 
	$sb_‰ì
(
SB
 *
sb
)

112 
	`‰ì
(
sb
->
°¨t
);

113 
	}
}

127 
uöt32_t
 
	tuch¨_t
;

149 
size_t
 
	$utf8_vÆid©e_cz
(c⁄° *
s
)

151 
c
 = ()*
s
++;

153 i‡(
c
 <= 0x7F) {

155 } i‡(
c
 <= 0xC1) {

158 } i‡(
c
 <= 0xDF) {

160 i‡((()*
s
++ & 0xC0) != 0x80)

164 } i‡(
c
 <= 0xEF) {

166 i‡(
c
 =0xE0 && ()*
s
 < 0xA0)

170 i‡(
c
 =0xED && ()*
s
 > 0x9F)

174 i‡((()*
s
++ & 0xC0) != 0x80)

176 i‡((()*
s
++ & 0xC0) != 0x80)

180 } i‡(
c
 <= 0xF4) {

182 i‡(
c
 =0xF0 && ()*
s
 < 0x90)

186 i‡(
c
 =0xF4 && ()*
s
 > 0x8F)

190 i‡((()*
s
++ & 0xC0) != 0x80)

192 i‡((()*
s
++ & 0xC0) != 0x80)

194 i‡((()*
s
++ & 0xC0) != 0x80)

201 
	}
}

204 
boﬁ
 
	$utf8_vÆid©e
(c⁄° *
s
)

206 
size_t
 
Àn
;

208 ; *
s
 !0; s +
Àn
) {

209 
Àn
 = 
	`utf8_vÆid©e_cz
(
s
);

210 i‡(
Àn
 == 0)

211  
Ál£
;

214  
åue
;

215 
	}
}

224 
	$utf8_ªad_ch¨
(c⁄° *
s
, 
uch¨_t
 *
out
)

226 c⁄° *
c
 = (c⁄° *Ë
s
;

228 
	`as£π
(
	`utf8_vÆid©e_cz
(
s
));

230 i‡(
c
[0] <= 0x7F) {

232 *
out
 = 
c
[0];

234 } i‡(
c
[0] <= 0xDF) {

236 *
out
 = ((
uch¨_t
)
c
[0] & 0x1F) << 6 |

237 ((
uch¨_t
)
c
[1] & 0x3F);

239 } i‡(
c
[0] <= 0xEF) {

241 *
out
 = ((
uch¨_t
)
c
[0] & 0xF) << 12 |

242 ((
uch¨_t
)
c
[1] & 0x3F) << 6 |

243 ((
uch¨_t
)
c
[2] & 0x3F);

247 *
out
 = ((
uch¨_t
)
c
[0] & 0x7) << 18 |

248 ((
uch¨_t
)
c
[1] & 0x3F) << 12 |

249 ((
uch¨_t
)
c
[2] & 0x3F) << 6 |

250 ((
uch¨_t
)
c
[3] & 0x3F);

253 
	}
}

263 
	$utf8_wrôe_ch¨
(
uch¨_t
 
unicode
, *
out
)

265 *
o
 = (*Ë
out
;

267 
	`as£π
(
unicode
 <= 0x10FFFF && !(unicode >= 0xD800 && unicode <= 0xDFFF));

269 i‡(
unicode
 <= 0x7F) {

271 *
o
++ = ()
unicode
;

273 } i‡(
unicode
 <= 0x7FF) {

275 *
o
++ = ()(0xC0 | 
unicode
 >> 6);

276 *
o
++ = ()(0x80 | (
unicode
 & 0x3F));

278 } i‡(
unicode
 <= 0xFFFF) {

280 *
o
++ = ()(0xE0 | 
unicode
 >> 12);

281 *
o
++ = ()(0x80 | (
unicode
 >> 6 & 0x3F));

282 *
o
++ = ()(0x80 | (
unicode
 & 0x3F));

286 *
o
++ = ()(0xF0 | 
unicode
 >> 18);

287 *
o
++ = ()(0x80 | (
unicode
 >> 12 & 0x3F));

288 *
o
++ = ()(0x80 | (
unicode
 >> 6 & 0x3F));

289 *
o
++ = ()(0x80 | (
unicode
 & 0x3F));

292 
	}
}

300 
boﬁ
 
	$‰om_suºog©e_∑ú
(
uöt16_t
 
uc
, uöt16_à
lc
, 
uch¨_t
 *
unicode
)

302 i‡(
uc
 >0xD800 && u¯<0xDBFF && 
lc
 >= 0xDC00 &&Üc <= 0xDFFF) {

303 *
unicode
 = 0x10000 + ((((
uch¨_t
)
uc
 & 0x3FFË<< 10Ë| (
lc
 & 0x3FF));

304  
åue
;

306  
Ál£
;

308 
	}
}

315 
	$to_suºog©e_∑ú
(
uch¨_t
 
unicode
, 
uöt16_t
 *
uc
, uöt16_à*
lc
)

317 
uch¨_t
 
n
;

319 
	`as£π
(
unicode
 >= 0x10000 && unicode <= 0x10FFFF);

321 
n
 = 
unicode
 - 0x10000;

322 *
uc
 = (
uöt16_t
)(((
n
 >> 10) & 0x3FF) | 0xD800);

323 *
lc
 = (
uöt16_t
)((
n
 & 0x3FF) | 0xDC00);

324 
	}
}

326 
	#is_•a˚
(
c
Ë((cË='\t' || (cË='\n' || (cË='\r' || (cË=' ')

	)

327 
	#is_digô
(
c
Ë((cË>'0' && (cË<'9')

	)

329 
boﬁ
 
∑r£_vÆue
 (c⁄° **
•
, 
Js⁄Node
 **
out
);

330 
boﬁ
 
∑r£_°rög
 (c⁄° **
•
, **
out
);

331 
boﬁ
 
∑r£_numbî
 (c⁄° **
•
, *
out
);

332 
boﬁ
 
∑r£_¨øy
 (c⁄° **
•
, 
Js⁄Node
 **
out
);

333 
boﬁ
 
∑r£_obje˘
 (c⁄° **
•
, 
Js⁄Node
 **
out
);

334 
boﬁ
 
∑r£_hex16
 (c⁄° **
•
, 
uöt16_t
 *
out
);

336 
boﬁ
 
ex≥˘_lôîÆ
 (c⁄° **
•
, c⁄° *
°r
);

337 
skù_•a˚
 (c⁄° **
•
);

339 
emô_vÆue
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
node
);

340 
emô_vÆue_ödíãd
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
, 
ödít_Àvñ
);

341 
emô_°rög
 (
SB
 *
out
, c⁄° *
°r
);

342 
emô_numbî
 (
SB
 *
out
, 
num
);

343 
emô_¨øy
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
¨øy
);

344 
emô_¨øy_ödíãd
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
¨øy
, c⁄° *
•a˚
, 
ödít_Àvñ
);

345 
emô_obje˘
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
obje˘
);

346 
emô_obje˘_ödíãd
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
obje˘
, c⁄° *
•a˚
, 
ödít_Àvñ
);

348 
wrôe_hex16
(*
out
, 
uöt16_t
 
vÆ
);

350 
Js⁄Node
 *
mknode
(
Js⁄Tag
 
èg
);

351 
≠≥nd_node
(
Js⁄Node
 *
∑ª¡
, Js⁄Nodê*
chûd
);

352 
¥ïíd_node
(
Js⁄Node
 *
∑ª¡
, Js⁄Nodê*
chûd
);

353 
≠≥nd_membî
(
Js⁄Node
 *
obje˘
, *
key
, Js⁄Nodê*
vÆue
);

356 
boﬁ
 
èg_is_vÆid
(
èg
);

357 
boﬁ
 
numbî_is_vÆid
(c⁄° *
num
);

359 
Js⁄Node
 *
	$js⁄_decode
(c⁄° *
js⁄
)

361 c⁄° *
s
 = 
js⁄
;

362 
Js⁄Node
 *
ªt
;

364 
	`skù_•a˚
(&
s
);

365 i‡(!
	`∑r£_vÆue
(&
s
, &
ªt
))

366  
NULL
;

368 
	`skù_•a˚
(&
s
);

369 i‡(*
s
 != 0) {

370 
	`js⁄_dñëe
(
ªt
);

371  
NULL
;

374  
ªt
;

375 
	}
}

377 *
	$js⁄_ícode
(c⁄° 
Js⁄Node
 *
node
)

379  
	`js⁄_°rögify
(
node
, 
NULL
);

380 
	}
}

382 *
	$js⁄_ícode_°rög
(c⁄° *
°r
)

384 
SB
 
sb
;

385 
	`sb_öô
(&
sb
);

387 
	`emô_°rög
(&
sb
, 
°r
);

389  
	`sb_föish
(&
sb
);

390 
	}
}

392 *
	$js⁄_°rögify
(c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
)

394 
SB
 
sb
;

395 
	`sb_öô
(&
sb
);

397 i‡(
•a˚
 !
NULL
)

398 
	`emô_vÆue_ödíãd
(&
sb
, 
node
, 
•a˚
, 0);

400 
	`emô_vÆue
(&
sb
, 
node
);

402  
	`sb_föish
(&
sb
);

403 
	}
}

405 *
	$js⁄_°rögify_Àngth
(c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
, 
size_t
 *
Àngth
)

407 
SB
 
sb
;

408 
	`sb_öô
(&
sb
);

410 i‡(
•a˚
 !
NULL
)

411 
	`emô_vÆue_ödíãd
(&
sb
, 
node
, 
•a˚
, 0);

413 
	`emô_vÆue
(&
sb
, 
node
);

415  
	`sb_föish_Àngth
(&
sb
, 
Àngth
);

416 
	}
}

418 
	$js⁄_dñëe
(
Js⁄Node
 *
node
)

420 i‡(
node
 !
NULL
) {

421 
	`js⁄_ªmove_‰om_∑ª¡
(
node
);

423 
node
->
èg
) {

424 
JSON_STRING
:

425 
	`‰ì
(
node
->
°rög_
);

427 
JSON_ARRAY
:

428 
JSON_OBJECT
:

430 
Js⁄Node
 *
chûd
, *
√xt
;

431 
chûd
 = 
node
->
chûdªn
.
hód
; chûd !
NULL
; chûd = 
√xt
) {

432 
√xt
 = 
chûd
->next;

433 
	`js⁄_dñëe
(
chûd
);

440 
	`‰ì
(
node
);

442 
	}
}

444 
boﬁ
 
	$js⁄_vÆid©e
(c⁄° *
js⁄
)

446 c⁄° *
s
 = 
js⁄
;

448 
	`skù_•a˚
(&
s
);

449 i‡(!
	`∑r£_vÆue
(&
s
, 
NULL
))

450  
Ál£
;

452 
	`skù_•a˚
(&
s
);

453 i‡(*
s
 != 0)

454  
Ál£
;

456  
åue
;

457 
	}
}

459 
Js⁄Node
 *
	$js⁄_föd_ñemít
(
Js⁄Node
 *
¨øy
, 
ödex
)

461 
Js⁄Node
 *
ñemít
;

462 
i
 = 0;

464 i‡(
¨øy
 =
NULL
 ||áºay->
èg
 !
JSON_ARRAY
)

465  
NULL
;

467 
	`js⁄_f‹óch
(
ñemít
, 
¨øy
) {

468 i‡(
i
 =
ödex
)

469  
ñemít
;

470 
i
++;

473  
NULL
;

474 
	}
}

476 
Js⁄Node
 *
	$js⁄_föd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
«me
)

478 
Js⁄Node
 *
membî
;

480 i‡(
obje˘
 =
NULL
 || obje˘->
èg
 !
JSON_OBJECT
)

481  
NULL
;

483 
	`js⁄_f‹óch
(
membî
, 
obje˘
)

484 i‡(
	`°rcmp
(
membî
->
key
, 
«me
) == 0)

485  
membî
;

487  
NULL
;

488 
	}
}

490 
Js⁄Node
 *
	$js⁄_fú°_chûd
(c⁄° 
Js⁄Node
 *
node
)

492 i‡(
node
 !
NULL
 && (node->
èg
 =
JSON_ARRAY
 ||Çode->èg =
JSON_OBJECT
))

493  
node
->
chûdªn
.
hód
;

494  
NULL
;

495 
	}
}

497 
Js⁄Node
 *
	$mknode
(
Js⁄Tag
 
èg
)

499 
Js⁄Node
 *
ªt
 = (Js⁄Node*Ë
	`ˇŒoc
(1, (JsonNode));

500 i‡(
ªt
 =
NULL
)

501 
	`out_of_mem‹y
();

502 
ªt
->
èg
 =Åag;

503  
ªt
;

504 
	}
}

506 
Js⁄Node
 *
	$js⁄_mknuŒ
()

508  
	`mknode
(
JSON_NULL
);

509 
	}
}

511 
Js⁄Node
 *
	$js⁄_mkboﬁ
(
boﬁ
 
b
)

513 
Js⁄Node
 *
ªt
 = 
	`mknode
(
JSON_BOOL
);

514 
ªt
->
boﬁ_
 = 
b
;

515  
ªt
;

516 
	}
}

518 
Js⁄Node
 *
	$mk°rög
(*
s
)

520 
Js⁄Node
 *
ªt
 = 
	`mknode
(
JSON_STRING
);

521 
ªt
->
°rög_
 = 
s
;

522  
ªt
;

523 
	}
}

525 
Js⁄Node
 *
	$js⁄_mk°rög
(c⁄° *
s
)

527  
	`mk°rög
(
	`°rdup
(
s
));

528 
	}
}

530 
Js⁄Node
 *
	$js⁄_mknumbî
(
n
)

532 
Js⁄Node
 *
node
 = 
	`mknode
(
JSON_NUMBER
);

533 
node
->
numbî_
 = 
n
;

534  
node
;

535 
	}
}

537 
Js⁄Node
 *
	$js⁄_mk¨øy
()

539  
	`mknode
(
JSON_ARRAY
);

540 
	}
}

542 
Js⁄Node
 *
	$js⁄_mkobje˘
()

544  
	`mknode
(
JSON_OBJECT
);

545 
	}
}

547 
	$≠≥nd_node
(
Js⁄Node
 *
∑ª¡
, Js⁄Nodê*
chûd
)

549 
chûd
->
∑ª¡
 =Öarent;

550 
chûd
->
¥ev
 = 
∑ª¡
->
chûdªn
.
èû
;

551 
chûd
->
√xt
 = 
NULL
;

553 i‡(
∑ª¡
->
chûdªn
.
èû
 !
NULL
)

554 
∑ª¡
->
chûdªn
.
èû
->
√xt
 = 
chûd
;

556 
∑ª¡
->
chûdªn
.
hód
 = 
chûd
;

557 
∑ª¡
->
chûdªn
.
èû
 = 
chûd
;

558 
	}
}

560 
	$¥ïíd_node
(
Js⁄Node
 *
∑ª¡
, Js⁄Nodê*
chûd
)

562 
chûd
->
∑ª¡
 =Öarent;

563 
chûd
->
¥ev
 = 
NULL
;

564 
chûd
->
√xt
 = 
∑ª¡
->
chûdªn
.
hód
;

566 i‡(
∑ª¡
->
chûdªn
.
hód
 !
NULL
)

567 
∑ª¡
->
chûdªn
.
hód
->
¥ev
 = 
chûd
;

569 
∑ª¡
->
chûdªn
.
èû
 = 
chûd
;

570 
∑ª¡
->
chûdªn
.
hód
 = 
chûd
;

571 
	}
}

573 
	$≠≥nd_membî
(
Js⁄Node
 *
obje˘
, *
key
, Js⁄Nodê*
vÆue
)

575 
vÆue
->
key
 = key;

576 
	`≠≥nd_node
(
obje˘
, 
vÆue
);

577 
	}
}

579 
	$js⁄_≠≥nd_ñemít
(
Js⁄Node
 *
¨øy
, Js⁄Nodê*
ñemít
)

581 
	`as£π
(
¨øy
->
èg
 =
JSON_ARRAY
);

582 
	`as£π
(
ñemít
->
∑ª¡
 =
NULL
);

584 
	`≠≥nd_node
(
¨øy
, 
ñemít
);

585 
	}
}

587 
	$js⁄_¥ïíd_ñemít
(
Js⁄Node
 *
¨øy
, Js⁄Nodê*
ñemít
)

589 
	`as£π
(
¨øy
->
èg
 =
JSON_ARRAY
);

590 
	`as£π
(
ñemít
->
∑ª¡
 =
NULL
);

592 
	`¥ïíd_node
(
¨øy
, 
ñemít
);

593 
	}
}

595 
	$js⁄_≠≥nd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
key
, Js⁄Nodê*
vÆue
)

597 
	`as£π
(
obje˘
->
èg
 =
JSON_OBJECT
);

598 
	`as£π
(
vÆue
->
∑ª¡
 =
NULL
);

600 
	`≠≥nd_membî
(
obje˘
, 
	`°rdup
(
key
), 
vÆue
);

601 
	}
}

603 
	$js⁄_¥ïíd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
key
, Js⁄Nodê*
vÆue
)

605 
	`as£π
(
obje˘
->
èg
 =
JSON_OBJECT
);

606 
	`as£π
(
vÆue
->
∑ª¡
 =
NULL
);

608 
vÆue
->
key
 = 
	`°rdup
(key);

609 
	`¥ïíd_node
(
obje˘
, 
vÆue
);

610 
	}
}

612 
	$js⁄_ªmove_‰om_∑ª¡
(
Js⁄Node
 *
node
)

614 
Js⁄Node
 *
∑ª¡
 = 
node
->parent;

616 i‡(
∑ª¡
 !
NULL
) {

617 i‡(
node
->
¥ev
 !
NULL
)

618 
node
->
¥ev
->
√xt
 =Çode->next;

620 
∑ª¡
->
chûdªn
.
hód
 = 
node
->
√xt
;

621 i‡(
node
->
√xt
 !
NULL
)

622 
node
->
√xt
->
¥ev
 =Çode->prev;

624 
∑ª¡
->
chûdªn
.
èû
 = 
node
->
¥ev
;

626 
	`‰ì
(
node
->
key
);

628 
node
->
∑ª¡
 = 
NULL
;

629 
node
->
¥ev
 =Çode->
√xt
 = 
NULL
;

630 
node
->
key
 = 
NULL
;

632 
	}
}

634 
boﬁ
 
	$∑r£_vÆue
(c⁄° **
•
, 
Js⁄Node
 **
out
)

636 c⁄° *
s
 = *
•
;

638 *
s
) {

640 i‡(
	`ex≥˘_lôîÆ
(&
s
, "null")) {

641 i‡(
out
)

642 *
out
 = 
	`js⁄_mknuŒ
();

643 *
•
 = 
s
;

644  
åue
;

646  
Ál£
;

649 i‡(
	`ex≥˘_lôîÆ
(&
s
, "false")) {

650 i‡(
out
)

651 *
out
 = 
	`js⁄_mkboﬁ
(
Ál£
);

652 *
•
 = 
s
;

653  
åue
;

655  
Ál£
;

658 i‡(
	`ex≥˘_lôîÆ
(&
s
, "true")) {

659 i‡(
out
)

660 *
out
 = 
	`js⁄_mkboﬁ
(
åue
);

661 *
•
 = 
s
;

662  
åue
;

664  
Ál£
;

667 *
°r
;

668 i‡(
	`∑r£_°rög
(&
s
, 
out
 ? &
°r
 : 
NULL
)) {

669 i‡(
out
)

670 *
out
 = 
	`mk°rög
(
°r
);

671 *
•
 = 
s
;

672  
åue
;

674  
Ál£
;

678 i‡(
	`∑r£_¨øy
(&
s
, 
out
)) {

679 *
•
 = 
s
;

680  
åue
;

682  
Ál£
;

685 i‡(
	`∑r£_obje˘
(&
s
, 
out
)) {

686 *
•
 = 
s
;

687  
åue
;

689  
Ál£
;

692 
num
;

693 i‡(
	`∑r£_numbî
(&
s
, 
out
 ? &
num
 : 
NULL
)) {

694 i‡(
out
)

695 *
out
 = 
	`js⁄_mknumbî
(
num
);

696 *
•
 = 
s
;

697  
åue
;

699  
Ál£
;

702 
	}
}

704 
boﬁ
 
	$∑r£_¨øy
(c⁄° **
•
, 
Js⁄Node
 **
out
)

706 c⁄° *
s
 = *
•
;

707 
Js⁄Node
 *
ªt
 = 
out
 ? 
	`js⁄_mk¨øy
(Ë: 
NULL
;

708 
Js⁄Node
 *
ñemít
;

710 i‡(*
s
++ != '[')

711 
Áûuª
;

712 
	`skù_•a˚
(&
s
);

714 i‡(*
s
 == ']') {

715 
s
++;

716 
suc˚ss
;

720 i‡(!
	`∑r£_vÆue
(&
s
, 
out
 ? &
ñemít
 : 
NULL
))

721 
Áûuª
;

722 
	`skù_•a˚
(&
s
);

724 i‡(
out
)

725 
	`js⁄_≠≥nd_ñemít
(
ªt
, 
ñemít
);

727 i‡(*
s
 == ']') {

728 
s
++;

729 
suc˚ss
;

732 i‡(*
s
++ != ',')

733 
Áûuª
;

734 
	`skù_•a˚
(&
s
);

737 
suc˚ss
:

738 *
•
 = 
s
;

739 i‡(
out
)

740 *
out
 = 
ªt
;

741  
åue
;

743 
Áûuª
:

744 
	`js⁄_dñëe
(
ªt
);

745  
Ál£
;

746 
	}
}

748 
boﬁ
 
	$∑r£_obje˘
(c⁄° **
•
, 
Js⁄Node
 **
out
)

750 c⁄° *
s
 = *
•
;

751 
Js⁄Node
 *
ªt
 = 
out
 ? 
	`js⁄_mkobje˘
(Ë: 
NULL
;

752 *
key
;

753 
Js⁄Node
 *
vÆue
;

755 i‡(*
s
++ != '{')

756 
Áûuª
;

757 
	`skù_•a˚
(&
s
);

759 i‡(*
s
 == '}') {

760 
s
++;

761 
suc˚ss
;

765 i‡(!
	`∑r£_°rög
(&
s
, 
out
 ? &
key
 : 
NULL
))

766 
Áûuª
;

767 
	`skù_•a˚
(&
s
);

769 i‡(*
s
++ != ':')

770 
Áûuª_‰ì_key
;

771 
	`skù_•a˚
(&
s
);

773 i‡(!
	`∑r£_vÆue
(&
s
, 
out
 ? &
vÆue
 : 
NULL
))

774 
Áûuª_‰ì_key
;

775 
	`skù_•a˚
(&
s
);

777 i‡(
out
)

778 
	`≠≥nd_membî
(
ªt
, 
key
, 
vÆue
);

780 i‡(*
s
 == '}') {

781 
s
++;

782 
suc˚ss
;

785 i‡(*
s
++ != ',')

786 
Áûuª
;

787 
	`skù_•a˚
(&
s
);

790 
suc˚ss
:

791 *
•
 = 
s
;

792 i‡(
out
)

793 *
out
 = 
ªt
;

794  
åue
;

796 
Áûuª_‰ì_key
:

797 i‡(
out
)

798 
	`‰ì
(
key
);

799 
Áûuª
:

800 
	`js⁄_dñëe
(
ªt
);

801  
Ál£
;

802 
	}
}

804 
boﬁ
 
	$∑r£_°rög
(c⁄° **
•
, **
out
)

806 c⁄° *
s
 = (*)*
•
;

807 
SB
 
sb
 = {0};

808 
throwaway_buf„r
[4];

810 *
b
;

812 i‡(*
s
++ != '"')

813  
Ál£
;

815 i‡(
out
) {

816 
	`sb_öô
(&
sb
);

817 
	`sb_√ed
(&
sb
, 4);

818 
b
 = 
sb
.
cur
;

820 
b
 = 
throwaway_buf„r
;

823 *
s
 != '"') {

824 
c
 = *
s
++;

827 i‡(
c
 == '\\') {

828 
c
 = *
s
++;

829 
c
) {

833 *
b
++ = ()
c
;

836 *
b
++ = '\b';

839 *
b
++ = '\f';

842 *
b
++ = '\n';

845 *
b
++ = '\r';

848 *
b
++ = '\t';

852 
uöt16_t
 
uc
, 
lc
;

853 
uch¨_t
 
unicode
;

855 i‡(!
	`∑r£_hex16
(&
s
, &
uc
))

856 
Áûed
;

858 i‡(
uc
 >= 0xD800 && uc <= 0xDFFF) {

860 i‡(*
s
++ !'\\' || *s++ !'u' || !
	`∑r£_hex16
(&s, &
lc
))

861 
Áûed
;

862 i‡(!
	`‰om_suºog©e_∑ú
(
uc
, 
lc
, &
unicode
))

863 
Áûed
;

864 } i‡(
uc
 == 0) {

866 
Áûed
;

868 
unicode
 = 
uc
;

871 
b
 +
	`utf8_wrôe_ch¨
(
unicode
, b);

876 
Áûed
;

878 } i‡(
c
 <= 0x1F) {

880 
Áûed
;

883 
size_t
 
Àn
;

885 
s
--;

886 
Àn
 = 
	`utf8_vÆid©e_cz
(
s
);

887 i‡(
Àn
 == 0)

888 
Áûed
;

890 
Àn
--)

891 *
b
++ = *
s
++;

898 i‡(
out
) {

899 
sb
.
cur
 = 
b
;

900 
	`sb_√ed
(&
sb
, 4);

901 
b
 = 
sb
.
cur
;

903 
b
 = 
throwaway_buf„r
;

906 
s
++;

908 i‡(
out
)

909 *
out
 = 
	`sb_föish
(&
sb
);

910 *
•
 = 
s
;

911  
åue
;

913 
Áûed
:

914 i‡(
out
)

915 
	`sb_‰ì
(&
sb
);

916  
Ál£
;

917 
	}
}

929 
boﬁ
 
	$∑r£_numbî
(c⁄° **
•
, *
out
)

931 c⁄° *
s
 = *
•
;

934 i‡(*
s
 == '-')

935 
s
++;

938 i‡(*
s
 == '0') {

939 
s
++;

941 i‡(!
	`is_digô
(*
s
))

942  
Ál£
;

944 
s
++;

945 } 
	`is_digô
(*
s
));

949 i‡(*
s
 == '.') {

950 
s
++;

951 i‡(!
	`is_digô
(*
s
))

952  
Ál£
;

954 
s
++;

955 } 
	`is_digô
(*
s
));

959 i‡(*
s
 == 'E' || *s == 'e') {

960 
s
++;

961 i‡(*
s
 == '+' || *s == '-')

962 
s
++;

963 i‡(!
	`is_digô
(*
s
))

964  
Ál£
;

966 
s
++;

967 } 
	`is_digô
(*
s
));

970 i‡(
out
)

971 *
out
 = 
	`°πod
(*
•
, 
NULL
);

973 *
•
 = 
s
;

974  
åue
;

975 
	}
}

977 
	$skù_•a˚
(c⁄° **
•
)

979 c⁄° *
s
 = *
•
;

980 
	`is_•a˚
(*
s
))

981 
s
++;

982 *
•
 = 
s
;

983 
	}
}

985 
	$emô_vÆue
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
node
)

987 
	`as£π
(
	`èg_is_vÆid
(
node
->
èg
));

988 
node
->
èg
) {

989 
JSON_NULL
:

990 
	`sb_puts
(
out
, "null");

992 
JSON_BOOL
:

993 
	`sb_puts
(
out
, 
node
->
boﬁ_
 ? "true" : "false");

995 
JSON_STRING
:

996 
	`emô_°rög
(
out
, 
node
->
°rög_
);

998 
JSON_NUMBER
:

999 
	`emô_numbî
(
out
, 
node
->
numbî_
);

1001 
JSON_ARRAY
:

1002 
	`emô_¨øy
(
out
, 
node
);

1004 
JSON_OBJECT
:

1005 
	`emô_obje˘
(
out
, 
node
);

1008 
	`as£π
(
Ál£
);

1010 
	}
}

1012 
	$emô_vÆue_ödíãd
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
, 
ödít_Àvñ
)

1014 
	`as£π
(
	`èg_is_vÆid
(
node
->
èg
));

1015 
node
->
èg
) {

1016 
JSON_NULL
:

1017 
	`sb_puts
(
out
, "null");

1019 
JSON_BOOL
:

1020 
	`sb_puts
(
out
, 
node
->
boﬁ_
 ? "true" : "false");

1022 
JSON_STRING
:

1023 
	`emô_°rög
(
out
, 
node
->
°rög_
);

1025 
JSON_NUMBER
:

1026 
	`emô_numbî
(
out
, 
node
->
numbî_
);

1028 
JSON_ARRAY
:

1029 
	`emô_¨øy_ödíãd
(
out
, 
node
, 
•a˚
, 
ödít_Àvñ
);

1031 
JSON_OBJECT
:

1032 
	`emô_obje˘_ödíãd
(
out
, 
node
, 
•a˚
, 
ödít_Àvñ
);

1035 
	`as£π
(
Ál£
);

1037 
	}
}

1039 
	$emô_¨øy
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
¨øy
)

1041 c⁄° 
Js⁄Node
 *
ñemít
;

1043 
	`sb_putc
(
out
, '[');

1044 
	`js⁄_f‹óch
(
ñemít
, 
¨øy
) {

1045 
	`emô_vÆue
(
out
, 
ñemít
);

1046 i‡(
ñemít
->
√xt
 !
NULL
)

1047 
	`sb_putc
(
out
, ',');

1049 
	`sb_putc
(
out
, ']');

1050 
	}
}

1052 
	$emô_¨øy_ödíãd
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
¨øy
, c⁄° *
•a˚
, 
ödít_Àvñ
)

1054 c⁄° 
Js⁄Node
 *
ñemít
 = 
¨øy
->
chûdªn
.
hód
;

1055 
i
;

1057 i‡(
ñemít
 =
NULL
) {

1058 
	`sb_puts
(
out
, "[]");

1062 
	`sb_puts
(
out
, "[\n");

1063 
ñemít
 !
NULL
) {

1064 
i
 = 0; i < 
ödít_Àvñ
 + 1; i++)

1065 
	`sb_puts
(
out
, 
•a˚
);

1066 
	`emô_vÆue_ödíãd
(
out
, 
ñemít
, 
•a˚
, 
ödít_Àvñ
 + 1);

1068 
ñemít
 =ÉÀmít->
√xt
;

1069 
	`sb_puts
(
out
, 
ñemít
 !
NULL
 ? ",\n" : "\n");

1071 
i
 = 0; i < 
ödít_Àvñ
; i++)

1072 
	`sb_puts
(
out
, 
•a˚
);

1073 
	`sb_putc
(
out
, ']');

1074 
	}
}

1076 
	$emô_obje˘
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
obje˘
)

1078 c⁄° 
Js⁄Node
 *
membî
;

1080 
	`sb_putc
(
out
, '{');

1081 
	`js⁄_f‹óch
(
membî
, 
obje˘
) {

1082 
	`emô_°rög
(
out
, 
membî
->
key
);

1083 
	`sb_putc
(
out
, ':');

1084 
	`emô_vÆue
(
out
, 
membî
);

1085 i‡(
membî
->
√xt
 !
NULL
)

1086 
	`sb_putc
(
out
, ',');

1088 
	`sb_putc
(
out
, '}');

1089 
	}
}

1091 
	$emô_obje˘_ödíãd
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
obje˘
, c⁄° *
•a˚
, 
ödít_Àvñ
)

1093 c⁄° 
Js⁄Node
 *
membî
 = 
obje˘
->
chûdªn
.
hód
;

1094 
i
;

1096 i‡(
membî
 =
NULL
) {

1097 
	`sb_puts
(
out
, "{}");

1101 
	`sb_puts
(
out
, "{\n");

1102 
membî
 !
NULL
) {

1103 
i
 = 0; i < 
ödít_Àvñ
 + 1; i++)

1104 
	`sb_puts
(
out
, 
•a˚
);

1105 
	`emô_°rög
(
out
, 
membî
->
key
);

1106 
	`sb_puts
(
out
, ": ");

1107 
	`emô_vÆue_ödíãd
(
out
, 
membî
, 
•a˚
, 
ödít_Àvñ
 + 1);

1109 
membî
 = membî->
√xt
;

1110 
	`sb_puts
(
out
, 
membî
 !
NULL
 ? ",\n" : "\n");

1112 
i
 = 0; i < 
ödít_Àvñ
; i++)

1113 
	`sb_puts
(
out
, 
•a˚
);

1114 
	`sb_putc
(
out
, '}');

1115 
	}
}

1117 
	$emô_°rög
(
SB
 *
out
, c⁄° *
°r
)

1119 c⁄° *
s
 = 
°r
;

1120 *
b
;

1122 
	`as£π
(
	`utf8_vÆid©e
(
°r
));

1128 
	`sb_√ed
(
out
, 14);

1129 
b
 = 
out
->
cur
;

1131 *
b
++ = '"';

1132 *
s
 != 0) {

1133 
c
 = *
s
++;

1136 
c
) {

1138 *
b
++ = '\\';

1139 *
b
++ = '"';

1142 *
b
++ = '\\';

1143 *
b
++ = '\\';

1146 *
b
++ = '\\';

1147 *
b
++ = 'b';

1150 *
b
++ = '\\';

1151 *
b
++ = 'f';

1154 *
b
++ = '\\';

1155 *
b
++ = 'n';

1158 *
b
++ = '\\';

1159 *
b
++ = 'r';

1162 *
b
++ = '\\';

1163 *
b
++ = 't';

1166 
size_t
 
Àn
;

1168 
s
--;

1169 
Àn
 = 
	`utf8_vÆid©e_cz
(
s
);

1171 i‡(
Àn
 == 0) {

1180 
	`as£π
(
Ál£
);

1181 *
b
++ = ()0xEF;

1182 *
b
++ = ()0xBF;

1183 *
b
++ = ()0xBD;

1184 
s
++;

1185 } i‡(
c
 < 0x1F) {

1187 
uöt32_t
 
unicode
;

1189 
s
 +
	`utf8_ªad_ch¨
(s, &
unicode
);

1191 i‡(
unicode
 <= 0xFFFF) {

1192 *
b
++ = '\\';

1193 *
b
++ = 'u';

1194 
b
 +
	`wrôe_hex16
(b, (
uöt16_t
)
unicode
);

1197 
uöt16_t
 
uc
, 
lc
;

1198 
	`as£π
(
unicode
 <= 0x10FFFF);

1199 
	`to_suºog©e_∑ú
(
unicode
, &
uc
, &
lc
);

1200 *
b
++ = '\\';

1201 *
b
++ = 'u';

1202 
b
 +
	`wrôe_hex16
(b, 
uc
);

1203 *
b
++ = '\\';

1204 *
b
++ = 'u';

1205 
b
 +
	`wrôe_hex16
(b, 
lc
);

1209 
Àn
--)

1210 *
b
++ = *
s
++;

1221 
out
->
cur
 = 
b
;

1222 
	`sb_√ed
(
out
, 14);

1223 
b
 = 
out
->
cur
;

1225 *
b
++ = '"';

1227 
out
->
cur
 = 
b
;

1228 
	}
}

1230 
	$emô_numbî
(
SB
 *
out
, 
num
)

1238 
buf
[64];

1239 
	`•rötf
(
buf
, "%.16g", 
num
);

1241 i‡(
	`numbî_is_vÆid
(
buf
))

1242 
	`sb_puts
(
out
, 
buf
);

1244 
	`sb_puts
(
out
, "null");

1245 
	}
}

1247 
boﬁ
 
	$èg_is_vÆid
(
èg
)

1249  ( 
èg
 <
JSON_OBJECT
);

1250 
	}
}

1252 
boﬁ
 
	$numbî_is_vÆid
(c⁄° *
num
)

1254  (
	`∑r£_numbî
(&
num
, 
NULL
) && *num == '\0');

1255 
	}
}

1257 
boﬁ
 
	$ex≥˘_lôîÆ
(c⁄° **
•
, c⁄° *
°r
)

1259 c⁄° *
s
 = *
•
;

1261 *
°r
 != '\0')

1262 i‡(*
s
++ !*
°r
++)

1263  
Ál£
;

1265 *
•
 = 
s
;

1266  
åue
;

1267 
	}
}

1273 
boﬁ
 
	$∑r£_hex16
(c⁄° **
•
, 
uöt16_t
 *
out
)

1275 c⁄° *
s
 = *
•
;

1276 
uöt16_t
 
ªt
 = 0;

1277 
uöt16_t
 
i
;

1278 
uöt16_t
 
tmp
;

1280 
i
 = 0; i < 4; i++) {

1281 
c
 = *
s
++;

1282 i‡(
c
 >= '0' && c <= '9')

1283 
tmp
 = (
uöt16_t
)(
c
 - '0');

1284 i‡(
c
 >= 'A' && c <= 'F')

1285 
tmp
 = (
uöt16_t
)(
c
 - 'A' + 10);

1286 i‡(
c
 >= 'a' && c <= 'f')

1287 
tmp
 = (
uöt16_t
)(
c
 - 'a' + 10);

1289  
Ál£
;

1291 
ªt
 = (
uöt16_t
)(‘ë << 4Ë+ 
tmp
);

1294 i‡(
out
)

1295 *
out
 = 
ªt
;

1296 *
•
 = 
s
;

1297  
åue
;

1298 
	}
}

1304 
	$wrôe_hex16
(*
out
, 
uöt16_t
 
vÆ
)

1306 c⁄° *
hex
 = "0123456789ABCDEF";

1308 *
out
++ = 
hex
[(
vÆ
 >> 12) & 0xF];

1309 *
out
++ = 
hex
[(
vÆ
 >> 8) & 0xF];

1310 *
out
++ = 
hex
[(
vÆ
 >> 4) & 0xF];

1311 *
out
++ = 
hex
[ 
vÆ
 & 0xF];

1314 
	}
}

1316 
boﬁ
 
	$js⁄_check
(c⁄° 
Js⁄Node
 *
node
, 
îrmsg
[256])

1318 
	#¥obÀm
(...) do { \

1319 i‡(
îrmsg
 !
NULL
) \

1320 
	`¢¥ötf
(
îrmsg
, 256, 
__VA_ARGS__
); \

1321  
Ál£
; \

1322 } 0)

	)

1324 i‡(
node
->
key
 !
NULL
 && !
	`utf8_vÆid©e
(node->key))

1325 
	`¥obÀm
("key contains invalid UTF-8");

1327 i‡(!
	`èg_is_vÆid
(
node
->
èg
))

1328 
	`¥obÀm
("èg i†övÆid (%u)", 
node
->
èg
);

1330 i‡(
node
->
èg
 =
JSON_BOOL
) {

1331 i‡(
node
->
boﬁ_
 !
Ál£
 &&Çode->boﬁ_ !
åue
)

1332 
	`¥obÀm
("boﬁ_ i†√ôhî fÆ£ (%dËn‹Åruê(%d)", ()
Ál£
, ()
åue
);

1333 } i‡(
node
->
èg
 =
JSON_STRING
) {

1334 i‡(
node
->
°rög_
 =
NULL
)

1335 
	`¥obÀm
("string_ is NULL");

1336 i‡(!
	`utf8_vÆid©e
(
node
->
°rög_
))

1337 
	`¥obÀm
("string_ contains invalid UTF-8");

1338 } i‡(
node
->
èg
 =
JSON_ARRAY
 ||Çode->èg =
JSON_OBJECT
) {

1339 
Js⁄Node
 *
hód
 = 
node
->
chûdªn
.head;

1340 
Js⁄Node
 *
èû
 = 
node
->
chûdªn
.tail;

1342 i‡(
hód
 =
NULL
 || 
èû
 == NULL) {

1343 i‡(
hód
 !
NULL
)

1344 
	`¥obÀm
("tail is NULL, but head isÇot");

1345 i‡(
èû
 !
NULL
)

1346 
	`¥obÀm
("head is NULL, butÅail isÇot");

1348 
Js⁄Node
 *
chûd
;

1349 
Js⁄Node
 *
œ°
 = 
NULL
;

1351 i‡(
hód
->
¥ev
 !
NULL
)

1352 
	`¥obÀm
("First child'sÖrevÖointer isÇot NULL");

1354 
chûd
 = 
hód
; chûd !
NULL
; 
œ°
 = chûd, chûd = chûd->
√xt
) {

1355 i‡(
chûd
 =
node
)

1356 
	`¥obÀm
("node is its own child");

1357 i‡(
chûd
->
√xt
 == child)

1358 
	`¥obÀm
("child->next == child (cycle)");

1359 i‡(
chûd
->
√xt
 =
hód
)

1360 
	`¥obÀm
("child->next == head (cycle)");

1362 i‡(
chûd
->
∑ª¡
 !
node
)

1363 
	`¥obÀm
("child doesÇotÖoint backÅoÖarent");

1364 i‡(
chûd
->
√xt
 !
NULL
 && chûd->√xt->
¥ev
 != child)

1365 
	`¥obÀm
("child->next doesÇotÖoint backÅo child");

1367 i‡(
node
->
èg
 =
JSON_ARRAY
 && 
chûd
->
key
 !
NULL
)

1368 
	`¥obÀm
("ArrayÉlement's key isÇot NULL");

1369 i‡(
node
->
èg
 =
JSON_OBJECT
 && 
chûd
->
key
 =
NULL
)

1370 
	`¥obÀm
("Object member's key is NULL");

1372 i‡(!
	`js⁄_check
(
chûd
, 
îrmsg
))

1373  
Ál£
;

1376 i‡(
œ°
 !
èû
)

1377 
	`¥obÀm
("tail doesÇot matchÖointer found by startingát headánd followingÇextÜinks");

1381  
åue
;

1383 #unde‡
¥obÀm


1384 
	}
}

	@techempower/json.h

24 #i‚de‡
CCAN_JSON_H


25 
	#CCAN_JSON_H


	)

27 
	~<°dboﬁ.h
>

28 
	~<°ddef.h
>

31 
	mJSON_NULL
,

32 
	mJSON_BOOL
,

33 
	mJSON_STRING
,

34 
	mJSON_NUMBER
,

35 
	mJSON_ARRAY
,

36 
	mJSON_OBJECT
,

37 } 
	tJs⁄Tag
;

39 
Js⁄Node
 
	tJs⁄Node
;

41 
	sJs⁄Node


44 
Js⁄Node
 *
	m∑ª¡
;

45 
Js⁄Node
 *
	m¥ev
, *
	m√xt
;

48 *
	mkey
;

50 
Js⁄Tag
 
	mèg
;

53 
boﬁ
 
	mboﬁ_
;

56 *
	m°rög_
;

59 
	mnumbî_
;

64 
Js⁄Node
 *
	mhód
, *
	mèû
;

65 } 
	mchûdªn
;

71 
Js⁄Node
 *
js⁄_decode
 (c⁄° *
js⁄
);

72 *
js⁄_ícode
 (c⁄° 
Js⁄Node
 *
node
);

73 *
js⁄_ícode_°rög
 (c⁄° *
°r
);

74 *
js⁄_°rögify
 (c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
);

75 *
js⁄_°rögify_Àngth
(c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
, 
size_t
 *
Àngth
);

76 
js⁄_dñëe
 (
Js⁄Node
 *
node
);

78 
boﬁ
 
js⁄_vÆid©e
 (c⁄° *
js⁄
);

82 
Js⁄Node
 *
js⁄_föd_ñemít
 (Js⁄Nodê*
¨øy
, 
ödex
);

83 
Js⁄Node
 *
js⁄_föd_membî
 (Js⁄Nodê*
obje˘
, c⁄° *
key
);

85 
Js⁄Node
 *
js⁄_fú°_chûd
 (c⁄° Js⁄Nodê*
node
);

87 
	#js⁄_f‹óch
(
i
, 
obje˘_‹_¨øy
) \

88 (
i
Ë
	`js⁄_fú°_chûd
(
obje˘_‹_¨øy
); \

89 (
i
Ë!
NULL
; \

90 (
i
Ë(i)->
√xt
)

	)

94 
Js⁄Node
 *
js⁄_mknuŒ
();

95 
Js⁄Node
 *
js⁄_mkboﬁ
(
boﬁ
 
b
);

96 
Js⁄Node
 *
js⁄_mk°rög
(c⁄° *
s
);

97 
Js⁄Node
 *
js⁄_mknumbî
(
n
);

98 
Js⁄Node
 *
js⁄_mk¨øy
();

99 
Js⁄Node
 *
js⁄_mkobje˘
();

101 
js⁄_≠≥nd_ñemít
(
Js⁄Node
 *
¨øy
, Js⁄Nodê*
ñemít
);

102 
js⁄_¥ïíd_ñemít
(
Js⁄Node
 *
¨øy
, Js⁄Nodê*
ñemít
);

103 
js⁄_≠≥nd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
key
, Js⁄Nodê*
vÆue
);

104 
js⁄_¥ïíd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
key
, Js⁄Nodê*
vÆue
);

106 
js⁄_ªmove_‰om_∑ª¡
(
Js⁄Node
 *
node
);

116 
boﬁ
 
js⁄_check
(c⁄° 
Js⁄Node
 *
node
, 
îrmsg
[256]);

	@techempower/techempower.c

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

23 
	~"lw™.h
"

24 
	~"lw™-c⁄fig.h
"

25 
	~"lw™-ãm∂©e.h
"

27 
	~"¨øy.h
"

28 
	~"d©aba£.h
"

29 
	~"js⁄.h
"

31 c⁄° 
	ghñlo_w‹ld
[] = "Hello, World!";

32 c⁄° 
	gøndom_numbî_quîy
[] = "SELECTÑandomNumber FROM World WHERE id=?";

34 
	sF‹tu√
 {

36 
lw™_çl_li°_gíî©‹_t
 
	mgíî©‹
;

38 
	mid
;

39 *
	mmesßge
;

40 } 
	môem
;

43 c⁄° 
	gf‹tu√s_ãm∂©e_°r
[] = "<!DOCTYPE html>" \

56 
f‹tu√_li°_gíî©‹
(
c‹o_t
 *
c‹o
);

58 c⁄° 
lw™_v¨_des¸ùt‹_t
 
	gf‹tu√_ôem_desc
[] = {

59 
TPL_VAR_INT
(
F‹tu√
, 
ôem
.
id
),

60 
TPL_VAR_STR_ESCAPE
(
F‹tu√
, 
ôem
.
mesßge
),

61 
TPL_VAR_SENTINEL


64 c⁄° 
lw™_v¨_des¸ùt‹_t
 
	gf‹tu√_desc
[] = {

65 
TPL_VAR_SEQUENCE
(
F‹tu√
, 
ôem
,

66 
f‹tu√_li°_gíî©‹
, 
f‹tu√_ôem_desc
),

67 
TPL_VAR_SENTINEL


70 
db
 *
	gd©aba£
;

71 
lw™_çl_t
 *
	gf‹tu√_çl
;

73 
lw™_hâp_°©us_t


74 
	$js⁄_ª•⁄£
(
lw™_ª•⁄£_t
 *
ª•⁄£
, 
Js⁄Node
 *
node
)

76 
size_t
 
Àngth
;

77 *
£rülized
;

79 
£rülized
 = 
	`js⁄_°rögify_Àngth
(
node
, 
NULL
, &
Àngth
);

80 
	`js⁄_dñëe
(
node
);

81 i‡(
	`UNLIKELY
(!
£rülized
))

82  
HTTP_INTERNAL_ERROR
;

84 
	`°rbuf_£t
(
ª•⁄£
->
buf„r
, 
£rülized
, 
Àngth
);

85 
	`‰ì
(
£rülized
);

87 
ª•⁄£
->
mime_ty≥
 = "application/json";

88  
HTTP_OK
;

89 
	}
}

91 
lw™_hâp_°©us_t


92 
js⁄
(
lw™_ªque°_t
 *
ªque°
 
__©åibuã__
((
unu£d
)),

93 
lw™_ª•⁄£_t
 *
ª•⁄£
,

94 *
d©a
 
__©åibuã__
((
unu£d
)))

96 
Js⁄Node
 *
	ghñlo
 = 
js⁄_mkobje˘
();

97 i‡(
UNLIKELY
(!
hñlo
))

98  
	gHTTP_INTERNAL_ERROR
;

100 
js⁄_≠≥nd_membî
(
hñlo
, "mesßge", 
js⁄_mk°rög
(
hñlo_w‹ld
));

102  
js⁄_ª•⁄£
(
ª•⁄£
, 
hñlo
);

105 
Js⁄Node
 *

106 
	$db_quîy
(
db_°mt
 *
°mt
, 
db_row
 
rows
[], db_row 
ªsu…s
[])

108 
Js⁄Node
 *
obje˘
 = 
NULL
;

109 
id
 = 
	`ønd
() % 10000;

111 
rows
[0].
u
.
i
 = 
id
;

113 i‡(
	`UNLIKELY
(!
	`db_°mt_böd
(
°mt
, 
rows
, 1)))

114 
out
;

116 i‡(
	`UNLIKELY
(!
	`db_°mt_°ï
(
°mt
, 
ªsu…s
)))

117 
out
;

119 
obje˘
 = 
	`js⁄_mkobje˘
();

120 i‡(
	`UNLIKELY
(!
obje˘
))

121 
out
;

123 
	`js⁄_≠≥nd_membî
(
obje˘
, "id", 
	`js⁄_mknumbî
(
id
));

124 
	`js⁄_≠≥nd_membî
(
obje˘
, "øndomNumbî", 
	`js⁄_mknumbî
(
ªsu…s
[0].
u
.
i
));

126 
out
:

127  
obje˘
;

128 
	}
}

130 
lw™_hâp_°©us_t


131 
db
(
lw™_ªque°_t
 *
ªque°
 
__©åibuã__
((
unu£d
)),

132 
lw™_ª•⁄£_t
 *
ª•⁄£
,

133 *
d©a
 
__©åibuã__
((
unu£d
)))

135 
db_row
 
	grows
[1] = {{ .
köd
 = 'i' }};

136 
db_row
 
	gªsu…s
[] = {{ .
köd
 = 'i' }, { .
	gköd
 = '\0' }};

137 
db_°mt
 *
	g°mt
 = 
db_¥ï¨e_°mt
(
d©aba£
, 
øndom_numbî_quîy
,

138 (
øndom_numbî_quîy
) - 1);

139 i‡(
UNLIKELY
(!
°mt
))

140  
	gHTTP_INTERNAL_ERROR
;

142 
Js⁄Node
 *
	gobje˘
 = 
db_quîy
(
°mt
, 
rows
, 
ªsu…s
);

143 
db_°mt_föÆize
(
°mt
);

145 i‡(
UNLIKELY
(!
obje˘
))

146  
	gHTTP_INTERNAL_ERROR
;

148  
js⁄_ª•⁄£
(
ª•⁄£
, 
obje˘
);

151 
lw™_hâp_°©us_t


152 
quîõs
(
lw™_ªque°_t
 *
ªque°
,

153 
lw™_ª•⁄£_t
 *
ª•⁄£
,

154 *
d©a
 
__©åibuã__
((
unu£d
)))

156 c⁄° *
	gquîõs_°r
 = 
lw™_ªque°_gë_quîy_∑øm
(
ªque°
, "queries");

158 i‡(
UNLIKELY
(!
quîõs_°r
))

159  
	gHTTP_BAD_REQUEST
;

161 
	gquîõs
 = 
∑r£_l⁄g
(
quîõs_°r
, -1);

162 i‡(
UNLIKELY
(
quîõs
 <= 0))

163 
quîõs
 = 1;

164 i‡(
UNLIKELY
(
quîõs
 > 500))

165 
	gquîõs
 = 500;

167 
db_°mt
 *
	g°mt
 = 
db_¥ï¨e_°mt
(
d©aba£
, 
øndom_numbî_quîy
,

168 (
øndom_numbî_quîy
) - 1);

169 i‡(
UNLIKELY
(!
°mt
))

170  
	gHTTP_INTERNAL_ERROR
;

172 
Js⁄Node
 *
	g¨øy
 = 
js⁄_mk¨øy
();

173 i‡(
UNLIKELY
(!
¨øy
))

174 
	gout_no_¨øy
;

176 
db_row
 
	grows
[1] = {{ .
köd
 = 'i' }};

177 
db_row
 
	gªsu…s
[] = {{ .
köd
 = 'i' }, { .
	gköd
 = '\0' }};

178 
	gquîõs
--) {

179 
Js⁄Node
 *
	gobje˘
 = 
db_quîy
(
°mt
, 
rows
, 
ªsu…s
);

181 i‡(
UNLIKELY
(!
obje˘
))

182 
	gout_¨øy
;

184 
js⁄_≠≥nd_ñemít
(
¨øy
, 
obje˘
);

187 
db_°mt_föÆize
(
°mt
);

188  
js⁄_ª•⁄£
(
ª•⁄£
, 
¨øy
);

190 
	gout_¨øy
:

191 
js⁄_dñëe
(
¨øy
);

192 
	gout_no_¨øy
:

193 
db_°mt_föÆize
(
°mt
);

194  
	gHTTP_INTERNAL_ERROR
;

197 
lw™_hâp_°©us_t


198 
∂aöãxt
(
lw™_ªque°_t
 *
ªque°
 
__©åibuã__
((
unu£d
)),

199 
lw™_ª•⁄£_t
 *
ª•⁄£
,

200 *
d©a
 
__©åibuã__
((
unu£d
)))

202 
°rbuf_£t_°©ic
(
ª•⁄£
->
buf„r
, 
hñlo_w‹ld
, (hello_world) - 1);

204 
	gª•⁄£
->
	gmime_ty≥
 = "text/plain";

205  
	gHTTP_OK
;

208 
	$f‹tu√_com∑ª
(c⁄° *
a
, c⁄° *
b
)

210 c⁄° 
F‹tu√
 *
f‹tu√_a
 = *(c⁄° F‹tu√ **)
a
;

211 c⁄° 
F‹tu√
 *
f‹tu√_b
 = *(c⁄° F‹tu√ **)
b
;

212 
size_t
 
a_Àn
 = 
	`°æí
(
f‹tu√_a
->
ôem
.
mesßge
);

213 
size_t
 
b_Àn
 = 
	`°æí
(
f‹tu√_b
->
ôem
.
mesßge
);

215 i‡(!
a_Àn
 || !
b_Àn
)

216  
a_Àn
 > 
b_Àn
;

218 
size_t
 
mö_Àn
 = 
a_Àn
 < 
b_Àn
 ?á_len : b_len;

219 
cmp
 = 
	`memcmp
(
f‹tu√_a
->
ôem
.
mesßge
, 
f‹tu√_b
->ôem.mesßge, 
mö_Àn
);

220 i‡(
cmp
 == 0)

221  
a_Àn
 > 
b_Àn
;

223  
cmp
 > 0;

224 
	}
}

226 
boﬁ
 
	$≠≥nd_f‹tu√
(
c‹o_t
 *
c‹o
, 
¨øy
 *
f‹tu√s
,

227 
id
, c⁄° *
mesßge
)

229 
F‹tu√
 *
f‹tu√
;

231 
f‹tu√
 = 
	`c‹o_mÆloc
(
c‹o
, (*fortune));

232 i‡(
	`UNLIKELY
(!
f‹tu√
))

233  
Ál£
;

235 
f‹tu√
->
ôem
.
id
 = id;

236 
f‹tu√
->
ôem
.
mesßge
 = 
	`c‹o_°rdup
(
c‹o
, message);

237 i‡(
	`UNLIKELY
(!
f‹tu√
->
ôem
.
mesßge
))

238  
Ál£
;

240  
	`¨øy_≠≥nd
(
f‹tu√s
, 
f‹tu√
) >= 0;

241 
	}
}

243 
	$f‹tu√_li°_gíî©‹
(
c‹o_t
 *
c‹o
)

245 c⁄° 
f‹tu√_quîy
[] = "SELECT * FROM Fortune";

246 
f‹tu√_buf„r
[256];

247 
F‹tu√
 *
f‹tu√
;

248 
¨øy
 
f‹tu√s
;

249 
db_°mt
 *
°mt
;

250 
size_t
 
i
;

252 
°mt
 = 
	`db_¥ï¨e_°mt
(
d©aba£
, 
f‹tu√_quîy
, (fortune_query) - 1);

253 i‡(
	`UNLIKELY
(!
°mt
))

256 
	`¨øy_öô
(&
f‹tu√s
, 16);

258 
db_row
 
ªsu…s
[] = {

259 { .
köd
 = 'i' },

260 { .
köd
 = 's', .
u
.
s
 = 
f‹tu√_buf„r
, .
buf„r_Àngth
 = (fortune_buffer) },

261 { .
köd
 = '\0' }

263 
	`db_°mt_°ï
(
°mt
, 
ªsu…s
)) {

264 i‡(!
	`≠≥nd_f‹tu√
(
c‹o
, &
f‹tu√s
, 
ªsu…s
[0].
u
.
i
,Ñesu…s[1].u.
s
))

265 
out
;

268 i‡(!
	`≠≥nd_f‹tu√
(
c‹o
, &
f‹tu√s
, 0,

270 
out
;

272 
	`¨øy_s‹t
(&
f‹tu√s
, 
f‹tu√_com∑ª
);

274 
f‹tu√
 = 
	`c‹o_gë_d©a
(
c‹o
);

275 
i
 = 0; i < 
f‹tu√s
.
cou¡
; i++) {

276 
F‹tu√
 *
f
 = 
f‹tu√s
.
¨øy
[
i
];

277 
f‹tu√
->
ôem
.
id
 = 
f
->item.id;

278 
f‹tu√
->
ôem
.
mesßge
 = 
f
->item.message;

279 
	`c‹o_yõld
(
c‹o
, 1);

282 
out
:

283 
	`¨øy_‰ì_¨øy
(&
f‹tu√s
);

284 
	`db_°mt_föÆize
(
°mt
);

286 
	}
}

288 
lw™_hâp_°©us_t


289 
f‹tu√s
(
lw™_ªque°_t
 *
ªque°
 
__©åibuã__
((
unu£d
)),

290 
lw™_ª•⁄£_t
 *
ª•⁄£
,

291 *
d©a
 
__©åibuã__
((
unu£d
)))

293 
F‹tu√
 
	gf‹tu√
;

295 i‡(
UNLIKELY
(!
lw™_çl_≠∂y_wôh_buf„r
(
f‹tu√_çl
,

296 
ª•⁄£
->
buf„r
, &
f‹tu√
)))

297  
	gHTTP_INTERNAL_ERROR
;

299 
	gª•⁄£
->
	gmime_ty≥
 = "text/html; charset=UTF-8";

300  
	gHTTP_OK
;

304 
	$maö
()

306 c⁄° 
lw™_uæ_m≠_t
 
uæ_m≠
[] = {

307 { .
¥efix
 = "/js⁄", .
h™dÀr
 = 
js⁄
 },

308 { .
¥efix
 = "/db", .
h™dÀr
 = 
db
 },

309 { .
¥efix
 = "/quîõs", .
h™dÀr
 = 
quîõs
 },

310 { .
¥efix
 = "/∂aöãxt", .
h™dÀr
 = 
∂aöãxt
 },

311 { .
¥efix
 = "/f‹tu√s", .
h™dÀr
 = 
f‹tu√s
 },

312 { .
¥efix
 = 
NULL
 }

314 
lw™_t
 
l
;

316 
	`lw™_öô
(&
l
);

318 
	`§™d
(()
	`time
(
NULL
));

320 i‡(
	`gëív
("USE_MYSQL")) {

321 c⁄° *
u£r
 = 
	`gëív
("MYSQL_USER");

322 c⁄° *
∑ssw‹d
 = 
	`gëív
("MYSQL_PASS");

323 c⁄° *
ho°«me
 = 
	`gëív
("MYSQL_HOST");

324 c⁄° *
db
 = 
	`gëív
("MYSQL_DB");

326 i‡(!
u£r
)

327 
	`lw™_°©us_¸ôiˇl
("No MySQL userÖrovided");

328 i‡(!
∑ssw‹d
)

329 
	`lw™_°©us_¸ôiˇl
("No MySQLÖasswordÖrovided");

330 i‡(!
ho°«me
)

331 
	`lw™_°©us_¸ôiˇl
("No MySQL hostnameÖrovided");

332 i‡(!
db
)

333 
	`lw™_°©us_¸ôiˇl
("No MySQL databaseÖrovided");

335 
d©aba£
 = 
	`db_c⁄√˘_mysql
(
ho°«me
, 
u£r
, 
∑ssw‹d
, 
db
);

337 c⁄° *
¥agmas
[] = {

341 
NULL


343 
d©aba£
 = 
	`db_c⁄√˘_sqlôe
("ãchempowî.db", 
åue
, 
¥agmas
);

346 i‡(!
d©aba£
)

347 
	`lw™_°©us_¸ôiˇl
("CouldÇot connectÅoÅhe database");

349 
f‹tu√_çl
 = 
	`lw™_çl_compûe_°rög
(
f‹tu√s_ãm∂©e_°r
, 
f‹tu√_desc
);

350 i‡(!
f‹tu√_çl
)

351 
	`lw™_°©us_¸ôiˇl
("CouldÇot compile fortuneÅemplates");

353 
	`lw™_£t_uæ_m≠
(&
l
, 
uæ_m≠
);

354 
	`lw™_maö_lo›
(&
l
);

356 
	`lw™_çl_‰ì
(
f‹tu√_çl
);

357 
	`db_disc⁄√˘
(
d©aba£
);

358 
	`lw™_shutdown
(&
l
);

361 
	}
}

	@
1
.
0
56
1122
common/base64.c
common/base64.h
common/hash.c
common/hash.h
common/int-to-str.c
common/int-to-str.h
common/list.c
common/list.h
common/lwan-cache.c
common/lwan-cache.h
common/lwan-config.c
common/lwan-config.h
common/lwan-coro.c
common/lwan-coro.h
common/lwan-http-authorize.c
common/lwan-http-authorize.h
common/lwan-io-wrappers.c
common/lwan-io-wrappers.h
common/lwan-job.c
common/lwan-lua.c
common/lwan-lua.h
common/lwan-private.h
common/lwan-redirect.c
common/lwan-redirect.h
common/lwan-request.c
common/lwan-response.c
common/lwan-serve-files.c
common/lwan-serve-files.h
common/lwan-socket.c
common/lwan-status.c
common/lwan-status.h
common/lwan-tables.c
common/lwan-template.c
common/lwan-template.h
common/lwan-thread.c
common/lwan-trie.c
common/lwan-trie.h
common/lwan.c
common/lwan.h
common/murmur3.c
common/murmur3.h
common/realpathat.c
common/realpathat.h
common/sd-daemon.c
common/sd-daemon.h
common/strbuf.c
common/strbuf.h
freegeoip/freegeoip.c
lwan/main.c
techempower/array.c
techempower/array.h
techempower/database.c
techempower/database.h
techempower/json.c
techempower/json.h
techempower/techempower.c
